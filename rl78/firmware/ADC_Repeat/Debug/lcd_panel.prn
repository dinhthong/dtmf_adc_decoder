


78K0R Assembler V1.80                                                                                    Date: 5 Jun 2021 Page:   1



Command:  -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\Device\RL78\Devicefile Debug\lcd_panel.asm -_msgoff -pDeb
          ug -oDebug -zs
Para-file:
In-file:  Debug\lcd_panel.asm
Obj-file: Debug\lcd_panel.rel
Prn-file: Debug\lcd_panel.prn

      Assemble list

 ALNO  STNO ADRS   OBJECT   M I  SOURCE STATEMENT

    1     1                      ; 78K0R C Compiler V2.60 Assembler Source        Date: 5 Jun 2021 Time:10:38:20
    2     2                      
    3     3                      ; Command   : -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\
    4     4                      ;             Device\RL78\Devicefile ..\RSKRL78L13\ADC_Repeat\cg_src\lcd_panel.
    5     5                      ;             c -oDebug -_msgoff -nq -i..\RSKRL78L13\ADC_Repeat\cg_src -v -w2 -
    6     6                      ;             zps -mm -mi0 -saDebug -li -no -g2
    7     7                      ; In-file   : ..\RSKRL78L13\ADC_Repeat\cg_src\lcd_panel.c
    8     8                      ; Asm-file  : Debug\lcd_panel.asm
    9     9                      ; Para-file : 
   10    10                      
   11    11                      $PROCESSOR(F10WMG)
   12    12                      $DEBUG
   13    13                      $NODEBUGA
   14    14                      $KANJICODE SJIS
   15    15                      $TOL_INF        03FH, 0260H, 00H, 04000H, 00H, 00H, 00H
   16    16                      
   17    17                      $DGS    FIL_NAM, .file,         02EDH,  0FFFEH, 03FH,   067H,   01H,    00H
   18    18                      $DGS    AUX_FIL, lcd_panel.c
   19    19                      $DGS    MOD_NAM, lcd_panel,     00H,    0FFFEH, 00H,    077H,   00H,    00H
   20    20                      $DGS    SEC_NAM, @@BITS,        U,      U,      00H,    078H,   00H,    00H
   21    21                      $DGS    SEC_NAM, @@CNST,        U,      U,      00H,    078H,   00H,    00H
   22    22                      $DGS    SEC_NAM, @@R_INIT,      U,      U,      00H,    078H,   00H,    00H
   23    23                      $DGS    SEC_NAM, @@INIT,        U,      U,      00H,    078H,   00H,    00H
   24    24                      $DGS    SEC_NAM, @@DATA,        U,      U,      00H,    078H,   00H,    00H
   25    25                      $DGS    SEC_NAM, @@R_INIS,      U,      U,      00H,    078H,   00H,    00H
   26    26                      $DGS    SEC_NAM, @@INIS,        U,      U,      00H,    078H,   00H,    00H
   27    27                      $DGS    SEC_NAM, @@DATS,        U,      U,      00H,    078H,   00H,    00H
   28    28                      $DGS    SEC_NAM, @@CNSTL,       U,      U,      00H,    078H,   00H,    00H
   29    29                      $DGS    SEC_NAM, @@RLINIT,      U,      U,      00H,    078H,   00H,    00H
   30    30                      $DGS    SEC_NAM, @@INITL,       U,      U,      00H,    078H,   00H,    00H
   31    31                      $DGS    SEC_NAM, @@DATAL,       U,      U,      00H,    078H,   00H,    00H
   32    32                      $DGS    SEC_NAM, @@CALT,        U,      U,      00H,    078H,   00H,    00H
   33    33                      $DGS    SEC_NAM, @@CODE,        U,      U,      00H,    078H,   00H,    00H
   34    34                      $DGS    SEC_NAM, @@CODEL,       U,      U,      00H,    078H,   00H,    00H
   35    35                      $DGS    SEC_NAM, @@BASE,        U,      U,      00H,    078H,   00H,    00H
   36    36                      $DGS    STR_STR, .0fake,        00H,    0FFFEH, 08H,    0AH,    01H,    00H
   37    37                      $DGS    AUX_TAG, 02H,           01FH
   38    38                      $DGS    BIT_FLD, _ONE,          00H,    0FFFFH, 0CH,    012H,   01H,    00H
   39    39                      $DGS    AUX_BIT, 00H,           04H
   40    40                      $DGS    BIT_FLD, _TWO,          04H,    0FFFFH, 0CH,    012H,   01H,    00H
   41    41                      $DGS    AUX_BIT, 00H,           04H
   42    42                      $DGS    BIT_FLD, _THREE,        08H,    0FFFFH, 0CH,    012H,   01H,    00H
   43    43                      $DGS    AUX_BIT, 00H,           04H
   44    44                      $DGS    BIT_FLD, _FOUR,         0CH,    0FFFFH, 0CH,    012H,   01H,    00H
   45    45                      $DGS    AUX_BIT, 00H,           04H
   46    46                      $DGS    END_STR, .eos,          02H,    0FFFFH, 00H,    066H,   01H,    00H
   47    47                      $DGS    AUX_EOS, 013H,          02H
   48    48                      $DGS    UNI_TAG, _LCD_MAP,      00H,    0FFFEH, 09H,    0CH,    01H,    00H
   49    49                      $DGS    AUX_TAG, 04H,           026H
   50    50                      $DGS    MEB_UNI, _WORD,         00H,    0FFFFH, 05H,    0BH,    00H,    00H
   51    51                      $DGS    MEB_UNI, _BYTE,         00H,    0FFFFH, 08H,    0BH,    01H,    00H
   52    52                      $DGS    AUX_STR, 013H,          00H,    02H,    00H,    00H,    00H,    00H,    00H
   53    53                      $DGS    END_STR, .eos,          04H,    0FFFFH, 00H,    066H,   01H,    00H
   54    54                      $DGS    AUX_EOS, 01FH,          04H
   55    55                      $DGS    GLV_SYM, _Init_Display_Panel,   U,      U,      01H,    026H,   01H,    02H
   56    56                      $DGS    AUX_FUN, 00H,           U,      U,      02CH,   01H,    00H
   57    57                      $DGS    BEG_FUN, ??bf_Init_Display_Panel,       U,      U,      00H,    065H,   01H,    00H
   58    58                      $DGS    AUX_BEG, 03FH,          00H,    02CH
   59    59                      $DGS    END_FUN, ??ef_Init_Display_Panel,       U,      U,      00H,    065H,   01H,    00H
   60    60                      $DGS    AUX_END, 014H
   61    61                      $DGS    GLV_SYM, _Validate_Input,       U,      U,      03H,    026H,   01H,    02H
   62    62                      $DGS    AUX_FUN, 00H,           U,      U,      075H,   01H,    00H
   63    63                      $DGS    BEG_FUN, ??bf_Validate_Input,   U,      U,      00H,    065H,   01H,    00H
   64    64                      $DGS    AUX_BEG, 068H,          02H,    033H
   65    65                      $DGS    FUN_ARG, _input,        00H,    0FFFFH, 0500CH, 09H,    00H,    00H
   66    66                      $DGS    FUN_ARG, _output,       08H,    0FFFFH, 0500CH, 09H,    01H,    01H
   67    67                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
   68    68                      $DGS    BEG_BLK, ??bb00_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   69    69                      $DGS    AUX_BEG, 04H,           00H,    037H
   70    70                      $DGS    END_BLK, ??eb00_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   71    71                      $DGS    AUX_END, 07H
   72    72                      $DGS    BEG_BLK, ??bb01_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   73    73                      $DGS    AUX_BEG, 0BH,           00H,    03BH
   74    74                      $DGS    END_BLK, ??eb01_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   75    75                      $DGS    AUX_END, 0FH
   76    76                      $DGS    BEG_BLK, ??bb02_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   77    77                      $DGS    AUX_BEG, 013H,          00H,    03FH
   78    78                      $DGS    END_BLK, ??eb02_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   79    79                      $DGS    AUX_END, 017H
   80    80                      $DGS    BEG_BLK, ??bb03_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   81    81                      $DGS    AUX_BEG, 01BH,          00H,    043H
   82    82                      $DGS    END_BLK, ??eb03_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   83    83                      $DGS    AUX_END, 01FH
   84    84                      $DGS    BEG_BLK, ??bb04_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   85    85                      $DGS    AUX_BEG, 023H,          00H,    047H
   86    86                      $DGS    END_BLK, ??eb04_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   87    87                      $DGS    AUX_END, 027H
   88    88                      $DGS    BEG_BLK, ??bb05_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   89    89                      $DGS    AUX_BEG, 02BH,          00H,    04BH
   90    90                      $DGS    END_BLK, ??eb05_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   91    91                      $DGS    AUX_END, 02FH
   92    92                      $DGS    BEG_BLK, ??bb06_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   93    93                      $DGS    AUX_BEG, 033H,          00H,    04DH
   94    94                      $DGS    BEG_BLK, ??bb07_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   95    95                      $DGS    AUX_BEG, 036H,          00H,    04FH
   96    96                      $DGS    BEG_BLK, ??bb08_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   97    97                      $DGS    AUX_BEG, 039H,          00H,    053H
   98    98                      $DGS    END_BLK, ??eb08_Validate_Input, U,      U,      00H,    064H,   01H,    00H
   99    99                      $DGS    AUX_END, 03BH
  100   100                      $DGS    BEG_BLK, ??bb09_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  101   101                      $DGS    AUX_BEG, 040H,          00H,    057H
  102   102                      $DGS    END_BLK, ??eb09_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  103   103                      $DGS    AUX_END, 042H
  104   104                      $DGS    BEG_BLK, ??bb0A_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  105   105                      $DGS    AUX_BEG, 047H,          00H,    05BH
  106   106                      $DGS    END_BLK, ??eb0A_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  107   107                      $DGS    AUX_END, 049H
  108   108                      $DGS    BEG_BLK, ??bb0B_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  109   109                      $DGS    AUX_BEG, 04EH,          00H,    05FH
  110   110                      $DGS    END_BLK, ??eb0B_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  111   111                      $DGS    AUX_END, 050H
  112   112                      $DGS    BEG_BLK, ??bb0C_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  113   113                      $DGS    AUX_BEG, 055H,          00H,    063H
  114   114                      $DGS    END_BLK, ??eb0C_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  115   115                      $DGS    AUX_END, 057H
  116   116                      $DGS    BEG_BLK, ??bb0D_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  117   117                      $DGS    AUX_BEG, 05CH,          00H,    067H
  118   118                      $DGS    END_BLK, ??eb0D_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  119   119                      $DGS    AUX_END, 05EH
  120   120                      $DGS    BEG_BLK, ??bb0E_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  121   121                      $DGS    AUX_BEG, 062H,          00H,    06BH
  122   122                      $DGS    END_BLK, ??eb0E_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  123   123                      $DGS    AUX_END, 064H
  124   124                      $DGS    BEG_BLK, ??bb0F_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  125   125                      $DGS    AUX_BEG, 069H,          00H,    00H
  126   126                      $DGS    END_BLK, ??eb0F_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  127   127                      $DGS    AUX_END, 06BH
  128   128                      $DGS    END_BLK, ??eb07_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  129   129                      $DGS    AUX_END, 06CH
  130   130                      $DGS    END_BLK, ??eb06_Validate_Input, U,      U,      00H,    064H,   01H,    00H
  131   131                      $DGS    AUX_END, 06EH
  132   132                      $DGS    END_FUN, ??ef_Validate_Input,   U,      U,      00H,    065H,   01H,    00H
  133   133                      $DGS    AUX_END, 06FH
  134   134                      $DGS    GLV_SYM, _SECTA_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  135   135                      $DGS    AUX_FUN, 00H,           U,      U,      0ADH,   01H,    00H
  136   136                      $DGS    BEG_FUN, ??bf_SECTA_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  137   137                      $DGS    AUX_BEG, 0E3H,          06H,    07FH
  138   138                      $DGS    FUN_ARG, _glyph,        04H,    0FFFFH, 0500CH, 09H,    00H,    00H
  139   139                      $DGS    FUN_ARG, _digit,        0CH,    0FFFFH, 0500DH, 09H,    00H,    00H
  140   140                      $DGS    AUT_VAR, _PinPtr1,      02H,    0FFFFH, 0CH,    01H,    01H,    01H
  141   141                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  142   142                      $DGS    AUT_VAR, _PinPtr2,      00H,    0FFFFH, 0CH,    01H,    01H,    01H
  143   143                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  144   144                      $DGS    BEG_BLK, ??bb00_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  145   145                      $DGS    AUX_BEG, 07H,           00H,    081H
  146   146                      $DGS    BEG_BLK, ??bb01_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  147   147                      $DGS    AUX_BEG, 0AH,           00H,    085H
  148   148                      $DGS    END_BLK, ??eb01_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  149   149                      $DGS    AUX_END, 0DH
  150   150                      $DGS    BEG_BLK, ??bb02_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  151   151                      $DGS    AUX_BEG, 012H,          00H,    089H
  152   152                      $DGS    END_BLK, ??eb02_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  153   153                      $DGS    AUX_END, 015H
  154   154                      $DGS    BEG_BLK, ??bb03_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  155   155                      $DGS    AUX_BEG, 01AH,          00H,    08DH
  156   156                      $DGS    END_BLK, ??eb03_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  157   157                      $DGS    AUX_END, 01DH
  158   158                      $DGS    BEG_BLK, ??bb04_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  159   159                      $DGS    AUX_BEG, 022H,          00H,    091H
  160   160                      $DGS    END_BLK, ??eb04_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  161   161                      $DGS    AUX_END, 025H
  162   162                      $DGS    BEG_BLK, ??bb05_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  163   163                      $DGS    AUX_BEG, 029H,          00H,    097H
  164   164                      $DGS    END_BLK, ??eb05_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  165   165                      $DGS    AUX_END, 02BH
  166   166                      $DGS    END_BLK, ??eb00_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  167   167                      $DGS    AUX_END, 02DH
  168   168                      $DGS    BEG_BLK, ??bb06_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  169   169                      $DGS    AUX_BEG, 035H,          00H,    099H
  170   170                      $DGS    BEG_BLK, ??bb07_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  171   171                      $DGS    AUX_BEG, 037H,          00H,    09DH
  172   172                      $DGS    END_BLK, ??eb07_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  173   173                      $DGS    AUX_END, 03AH
  174   174                      $DGS    BEG_BLK, ??bb08_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  175   175                      $DGS    AUX_BEG, 03CH,          00H,    0A3H
  176   176                      $DGS    END_BLK, ??eb08_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  177   177                      $DGS    AUX_END, 03FH
  178   178                      $DGS    END_BLK, ??eb06_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  179   179                      $DGS    AUX_END, 040H
  180   180                      $DGS    BEG_BLK, ??bb09_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  181   181                      $DGS    AUX_BEG, 042H,          00H,    0A7H
  182   182                      $DGS    END_BLK, ??eb09_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  183   183                      $DGS    AUX_END, 046H
  184   184                      $DGS    BEG_BLK, ??bb0A_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  185   185                      $DGS    AUX_BEG, 048H,          00H,    00H
  186   186                      $DGS    END_BLK, ??eb0A_SECTA_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  187   187                      $DGS    AUX_END, 04AH
  188   188                      $DGS    END_FUN, ??ef_SECTA_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  189   189                      $DGS    AUX_END, 04CH
  190   190                      $DGS    GLV_SYM, _SECTB_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  191   191                      $DGS    AUX_FUN, 00H,           U,      U,      0101H,  01H,    00H
  192   192                      $DGS    BEG_FUN, ??bf_SECTB_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  193   193                      $DGS    AUX_BEG, 013AH,         06H,    0B7H
  194   194                      $DGS    FUN_ARG, _glyph,        04H,    0FFFFH, 0500CH, 09H,    00H,    00H
  195   195                      $DGS    FUN_ARG, _digit,        0CH,    0FFFFH, 0500DH, 09H,    00H,    00H
  196   196                      $DGS    AUT_VAR, _PinPtr1,      02H,    0FFFFH, 0CH,    01H,    01H,    01H
  197   197                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  198   198                      $DGS    AUT_VAR, _PinPtr2,      00H,    0FFFFH, 0CH,    01H,    01H,    01H
  199   199                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  200   200                      $DGS    BEG_BLK, ??bb00_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  201   201                      $DGS    AUX_BEG, 08H,           00H,    0B9H
  202   202                      $DGS    BEG_BLK, ??bb01_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  203   203                      $DGS    AUX_BEG, 0BH,           00H,    0BDH
  204   204                      $DGS    END_BLK, ??eb01_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  205   205                      $DGS    AUX_END, 0EH
  206   206                      $DGS    BEG_BLK, ??bb02_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  207   207                      $DGS    AUX_BEG, 013H,          00H,    0C1H
  208   208                      $DGS    END_BLK, ??eb02_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  209   209                      $DGS    AUX_END, 016H
  210   210                      $DGS    BEG_BLK, ??bb03_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  211   211                      $DGS    AUX_BEG, 01BH,          00H,    0C5H
  212   212                      $DGS    END_BLK, ??eb03_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  213   213                      $DGS    AUX_END, 01EH
  214   214                      $DGS    BEG_BLK, ??bb04_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  215   215                      $DGS    AUX_BEG, 023H,          00H,    0C9H
  216   216                      $DGS    END_BLK, ??eb04_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  217   217                      $DGS    AUX_END, 026H
  218   218                      $DGS    BEG_BLK, ??bb05_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  219   219                      $DGS    AUX_BEG, 02BH,          00H,    0CDH
  220   220                      $DGS    END_BLK, ??eb05_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  221   221                      $DGS    AUX_END, 02EH
  222   222                      $DGS    BEG_BLK, ??bb06_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  223   223                      $DGS    AUX_BEG, 033H,          00H,    0D1H
  224   224                      $DGS    END_BLK, ??eb06_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  225   225                      $DGS    AUX_END, 036H
  226   226                      $DGS    BEG_BLK, ??bb07_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  227   227                      $DGS    AUX_BEG, 03BH,          00H,    0D3H
  228   228                      $DGS    BEG_BLK, ??bb08_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  229   229                      $DGS    AUX_BEG, 042H,          00H,    0D7H
  230   230                      $DGS    END_BLK, ??eb08_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  231   231                      $DGS    AUX_END, 048H
  232   232                      $DGS    BEG_BLK, ??bb09_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  233   233                      $DGS    AUX_BEG, 04CH,          00H,    0DBH
  234   234                      $DGS    END_BLK, ??eb09_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  235   235                      $DGS    AUX_END, 052H
  236   236                      $DGS    BEG_BLK, ??bb0A_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  237   237                      $DGS    AUX_BEG, 056H,          00H,    0E1H
  238   238                      $DGS    END_BLK, ??eb0A_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  239   239                      $DGS    AUX_END, 05CH
  240   240                      $DGS    END_BLK, ??eb07_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  241   241                      $DGS    AUX_END, 05DH
  242   242                      $DGS    BEG_BLK, ??bb0B_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  243   243                      $DGS    AUX_BEG, 062H,          00H,    0E7H
  244   244                      $DGS    END_BLK, ??eb0B_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  245   245                      $DGS    AUX_END, 064H
  246   246                      $DGS    END_BLK, ??eb00_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  247   247                      $DGS    AUX_END, 066H
  248   248                      $DGS    BEG_BLK, ??bb0C_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  249   249                      $DGS    AUX_BEG, 06EH,          00H,    0E9H
  250   250                      $DGS    BEG_BLK, ??bb0D_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  251   251                      $DGS    AUX_BEG, 071H,          00H,    0EDH
  252   252                      $DGS    END_BLK, ??eb0D_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  253   253                      $DGS    AUX_END, 074H
  254   254                      $DGS    BEG_BLK, ??bb0E_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  255   255                      $DGS    AUX_BEG, 078H,          00H,    0F1H
  256   256                      $DGS    END_BLK, ??eb0E_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  257   257                      $DGS    AUX_END, 07BH
  258   258                      $DGS    BEG_BLK, ??bb0F_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  259   259                      $DGS    AUX_BEG, 07FH,          00H,    0F7H
  260   260                      $DGS    END_BLK, ??eb0F_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  261   261                      $DGS    AUX_END, 082H
  262   262                      $DGS    END_BLK, ??eb0C_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  263   263                      $DGS    AUX_END, 083H
  264   264                      $DGS    BEG_BLK, ??bb10_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  265   265                      $DGS    AUX_BEG, 085H,          00H,    0FBH
  266   266                      $DGS    END_BLK, ??eb10_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  267   267                      $DGS    AUX_END, 089H
  268   268                      $DGS    BEG_BLK, ??bb11_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  269   269                      $DGS    AUX_BEG, 08BH,          00H,    00H
  270   270                      $DGS    END_BLK, ??eb11_SECTB_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  271   271                      $DGS    AUX_END, 08DH
  272   272                      $DGS    END_FUN, ??ef_SECTB_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  273   273                      $DGS    AUX_END, 08EH
  274   274                      $DGS    GLV_SYM, _SECTC_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  275   275                      $DGS    AUX_FUN, 00H,           U,      U,      0135H,  01H,    00H
  276   276                      $DGS    BEG_FUN, ??bf_SECTC_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  277   277                      $DGS    AUX_BEG, 01D7H,         0AH,    010FH
  278   278                      $DGS    FUN_ARG, _glyph,        08H,    0FFFFH, 0500CH, 09H,    00H,    00H
  279   279                      $DGS    FUN_ARG, _digit,        010H,   0FFFFH, 0500DH, 09H,    00H,    00H
  280   280                      $DGS    AUT_VAR, _PinPtr1,      06H,    0FFFFH, 0CH,    01H,    01H,    01H
  281   281                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  282   282                      $DGS    AUT_VAR, _PinPtr2,      04H,    0FFFFH, 0CH,    01H,    01H,    01H
  283   283                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  284   284                      $DGS    AUT_VAR, _PinPtr3,      02H,    0FFFFH, 0CH,    01H,    01H,    01H
  285   285                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  286   286                      $DGS    AUT_VAR, _PinPtr4,      00H,    0FFFFH, 0CH,    01H,    01H,    01H
  287   287                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  288   288                      $DGS    BEG_BLK, ??bb00_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  289   289                      $DGS    AUX_BEG, 0AH,           00H,    0111H
  290   290                      $DGS    BEG_BLK, ??bb01_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  291   291                      $DGS    AUX_BEG, 0DH,           00H,    0115H
  292   292                      $DGS    END_BLK, ??eb01_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  293   293                      $DGS    AUX_END, 012H
  294   294                      $DGS    BEG_BLK, ??bb02_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  295   295                      $DGS    AUX_BEG, 017H,          00H,    0119H
  296   296                      $DGS    END_BLK, ??eb02_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  297   297                      $DGS    AUX_END, 01BH
  298   298                      $DGS    BEG_BLK, ??bb03_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  299   299                      $DGS    AUX_BEG, 020H,          00H,    011DH
  300   300                      $DGS    END_BLK, ??eb03_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  301   301                      $DGS    AUX_END, 025H
  302   302                      $DGS    BEG_BLK, ??bb04_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  303   303                      $DGS    AUX_BEG, 02AH,          00H,    0121H
  304   304                      $DGS    END_BLK, ??eb04_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  305   305                      $DGS    AUX_END, 02FH
  306   306                      $DGS    BEG_BLK, ??bb05_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  307   307                      $DGS    AUX_BEG, 034H,          00H,    0125H
  308   308                      $DGS    END_BLK, ??eb05_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  309   309                      $DGS    AUX_END, 039H
  310   310                      $DGS    BEG_BLK, ??bb06_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  311   311                      $DGS    AUX_BEG, 03EH,          00H,    0129H
  312   312                      $DGS    END_BLK, ??eb06_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  313   313                      $DGS    AUX_END, 043H
  314   314                      $DGS    BEG_BLK, ??bb07_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  315   315                      $DGS    AUX_BEG, 048H,          00H,    012FH
  316   316                      $DGS    END_BLK, ??eb07_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  317   317                      $DGS    AUX_END, 04AH
  318   318                      $DGS    END_BLK, ??eb00_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  319   319                      $DGS    AUX_END, 04CH
  320   320                      $DGS    BEG_BLK, ??bb08_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  321   321                      $DGS    AUX_BEG, 056H,          00H,    00H
  322   322                      $DGS    END_BLK, ??eb08_SECTC_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  323   323                      $DGS    AUX_END, 05CH
  324   324                      $DGS    END_FUN, ??ef_SECTC_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  325   325                      $DGS    AUX_END, 05DH
  326   326                      $DGS    GLV_SYM, _SECTD_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  327   327                      $DGS    AUX_FUN, 00H,           U,      U,      0158H,  01H,    00H
  328   328                      $DGS    BEG_FUN, ??bf_SECTD_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  329   329                      $DGS    AUX_BEG, 0241H,         02H,    013AH
  330   330                      $DGS    FUN_ARG, _level,        00H,    0FFFFH, 0500CH, 09H,    00H,    00H
  331   331                      $DGS    BEG_BLK, ??bb00_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  332   332                      $DGS    AUX_BEG, 04H,           00H,    013CH
  333   333                      $DGS    BEG_BLK, ??bb01_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  334   334                      $DGS    AUX_BEG, 07H,           00H,    0140H
  335   335                      $DGS    END_BLK, ??eb01_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  336   336                      $DGS    AUX_END, 0AH
  337   337                      $DGS    BEG_BLK, ??bb02_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  338   338                      $DGS    AUX_BEG, 0FH,           00H,    0144H
  339   339                      $DGS    END_BLK, ??eb02_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  340   340                      $DGS    AUX_END, 013H
  341   341                      $DGS    BEG_BLK, ??bb03_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  342   342                      $DGS    AUX_BEG, 018H,          00H,    0148H
  343   343                      $DGS    END_BLK, ??eb03_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  344   344                      $DGS    AUX_END, 01CH
  345   345                      $DGS    BEG_BLK, ??bb04_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  346   346                      $DGS    AUX_BEG, 021H,          00H,    014CH
  347   347                      $DGS    END_BLK, ??eb04_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  348   348                      $DGS    AUX_END, 025H
  349   349                      $DGS    BEG_BLK, ??bb05_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  350   350                      $DGS    AUX_BEG, 02AH,          00H,    0150H
  351   351                      $DGS    END_BLK, ??eb05_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  352   352                      $DGS    AUX_END, 02DH
  353   353                      $DGS    BEG_BLK, ??bb06_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  354   354                      $DGS    AUX_BEG, 031H,          00H,    00H
  355   355                      $DGS    END_BLK, ??eb06_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  356   356                      $DGS    AUX_END, 033H
  357   357                      $DGS    END_BLK, ??eb00_SECTD_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  358   358                      $DGS    AUX_END, 035H
  359   359                      $DGS    END_FUN, ??ef_SECTD_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  360   360                      $DGS    AUX_END, 036H
  361   361                      $DGS    GLV_SYM, _SECTE_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  362   362                      $DGS    AUX_FUN, 00H,           U,      U,      0187H,  01H,    00H
  363   363                      $DGS    BEG_FUN, ??bf_SECTE_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  364   364                      $DGS    AUX_BEG, 0282H,         06H,    0161H
  365   365                      $DGS    FUN_ARG, _level,        04H,    0FFFFH, 0500DH, 09H,    00H,    00H
  366   366                      $DGS    AUT_VAR, _Pin47Ptr,     02H,    0FFFFH, 0500CH, 01H,    01H,    01H
  367   367                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  368   368                      $DGS    AUT_VAR, _Pin48Ptr,     00H,    0FFFFH, 0500CH, 01H,    01H,    01H
  369   369                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  370   370                      $DGS    BEG_BLK, ??bb00_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  371   371                      $DGS    AUX_BEG, 08H,           00H,    0163H
  372   372                      $DGS    BEG_BLK, ??bb01_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  373   373                      $DGS    AUX_BEG, 0BH,           00H,    0167H
  374   374                      $DGS    END_BLK, ??eb01_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  375   375                      $DGS    AUX_END, 011H
  376   376                      $DGS    BEG_BLK, ??bb02_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  377   377                      $DGS    AUX_BEG, 016H,          00H,    016BH
  378   378                      $DGS    END_BLK, ??eb02_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  379   379                      $DGS    AUX_END, 01CH
  380   380                      $DGS    BEG_BLK, ??bb03_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  381   381                      $DGS    AUX_BEG, 021H,          00H,    016FH
  382   382                      $DGS    END_BLK, ??eb03_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  383   383                      $DGS    AUX_END, 027H
  384   384                      $DGS    BEG_BLK, ??bb04_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  385   385                      $DGS    AUX_BEG, 02CH,          00H,    0173H
  386   386                      $DGS    END_BLK, ??eb04_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  387   387                      $DGS    AUX_END, 032H
  388   388                      $DGS    BEG_BLK, ??bb05_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  389   389                      $DGS    AUX_BEG, 037H,          00H,    0177H
  390   390                      $DGS    END_BLK, ??eb05_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  391   391                      $DGS    AUX_END, 03DH
  392   392                      $DGS    BEG_BLK, ??bb06_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  393   393                      $DGS    AUX_BEG, 042H,          00H,    017BH
  394   394                      $DGS    END_BLK, ??eb06_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  395   395                      $DGS    AUX_END, 048H
  396   396                      $DGS    BEG_BLK, ??bb07_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  397   397                      $DGS    AUX_BEG, 04DH,          00H,    017FH
  398   398                      $DGS    END_BLK, ??eb07_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  399   399                      $DGS    AUX_END, 053H
  400   400                      $DGS    BEG_BLK, ??bb08_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  401   401                      $DGS    AUX_BEG, 057H,          00H,    00H
  402   402                      $DGS    END_BLK, ??eb08_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  403   403                      $DGS    AUX_END, 059H
  404   404                      $DGS    END_BLK, ??eb00_SECTE_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  405   405                      $DGS    AUX_END, 05BH
  406   406                      $DGS    END_FUN, ??ef_SECTE_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  407   407                      $DGS    AUX_END, 05CH
  408   408                      $DGS    GLV_SYM, _SECTF_Glyph_Map,      U,      U,      01H,    026H,   01H,    02H
  409   409                      $DGS    AUX_FUN, 00H,           U,      U,      01B6H,  01H,    00H
  410   410                      $DGS    BEG_FUN, ??bf_SECTF_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  411   411                      $DGS    AUX_BEG, 02EDH,         02H,    018CH
  412   412                      $DGS    FUN_ARG, _day,          00H,    0FFFFH, 0500CH, 09H,    00H,    00H
  413   413                      $DGS    BEG_BLK, ??bb00_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  414   414                      $DGS    AUX_BEG, 04H,           00H,    018EH
  415   415                      $DGS    BEG_BLK, ??bb01_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  416   416                      $DGS    AUX_BEG, 07H,           00H,    0192H
  417   417                      $DGS    END_BLK, ??eb01_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  418   418                      $DGS    AUX_END, 0DH
  419   419                      $DGS    BEG_BLK, ??bb02_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  420   420                      $DGS    AUX_BEG, 012H,          00H,    0196H
  421   421                      $DGS    END_BLK, ??eb02_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  422   422                      $DGS    AUX_END, 019H
  423   423                      $DGS    BEG_BLK, ??bb03_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  424   424                      $DGS    AUX_BEG, 01EH,          00H,    019AH
  425   425                      $DGS    END_BLK, ??eb03_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  426   426                      $DGS    AUX_END, 025H
  427   427                      $DGS    BEG_BLK, ??bb04_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  428   428                      $DGS    AUX_BEG, 02AH,          00H,    019EH
  429   429                      $DGS    END_BLK, ??eb04_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  430   430                      $DGS    AUX_END, 030H
  431   431                      $DGS    BEG_BLK, ??bb05_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  432   432                      $DGS    AUX_BEG, 035H,          00H,    01A2H
  433   433                      $DGS    END_BLK, ??eb05_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  434   434                      $DGS    AUX_END, 03BH
  435   435                      $DGS    BEG_BLK, ??bb06_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  436   436                      $DGS    AUX_BEG, 040H,          00H,    01A6H
  437   437                      $DGS    END_BLK, ??eb06_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  438   438                      $DGS    AUX_END, 047H
  439   439                      $DGS    BEG_BLK, ??bb07_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  440   440                      $DGS    AUX_BEG, 04CH,          00H,    01AAH
  441   441                      $DGS    END_BLK, ??eb07_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  442   442                      $DGS    AUX_END, 053H
  443   443                      $DGS    BEG_BLK, ??bb08_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  444   444                      $DGS    AUX_BEG, 058H,          00H,    01AEH
  445   445                      $DGS    END_BLK, ??eb08_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  446   446                      $DGS    AUX_END, 05EH
  447   447                      $DGS    BEG_BLK, ??bb09_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  448   448                      $DGS    AUX_BEG, 062H,          00H,    00H
  449   449                      $DGS    END_BLK, ??eb09_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  450   450                      $DGS    AUX_END, 064H
  451   451                      $DGS    END_BLK, ??eb00_SECTF_Glyph_Map,        U,      U,      00H,    064H,   01H,    00H
  452   452                      $DGS    AUX_END, 066H
  453   453                      $DGS    END_FUN, ??ef_SECTF_Glyph_Map,  U,      U,      00H,    065H,   01H,    00H
  454   454                      $DGS    AUX_END, 067H
  455   455                      $DGS    GLV_SYM, _Symbol_Map,   U,      U,      02H,    026H,   01H,    02H
  456   456                      $DGS    AUX_FUN, 00H,           U,      U,      0246H,  01H,    00H
  457   457                      $DGS    BEG_FUN, ??bf_Symbol_Map,       U,      U,      00H,    065H,   01H,    00H
  458   458                      $DGS    AUX_BEG, 036BH,         04H,    01BCH
  459   459                      $DGS    FUN_ARG, _input,        02H,    0FFFFH, 0500DH, 09H,    00H,    00H
  460   460                      $DGS    AUT_VAR, _status,       01H,    0FFFFH, 02H,    01H,    00H,    00H
  461   461                      $DGS    BEG_BLK, ??bb00_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  462   462                      $DGS    AUX_BEG, 06H,           00H,    01BEH
  463   463                      $DGS    BEG_BLK, ??bb01_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  464   464                      $DGS    AUX_BEG, 09H,           00H,    01C2H
  465   465                      $DGS    END_BLK, ??eb01_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  466   466                      $DGS    AUX_END, 0BH
  467   467                      $DGS    BEG_BLK, ??bb02_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  468   468                      $DGS    AUX_BEG, 0FH,           00H,    01C6H
  469   469                      $DGS    END_BLK, ??eb02_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  470   470                      $DGS    AUX_END, 011H
  471   471                      $DGS    BEG_BLK, ??bb03_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  472   472                      $DGS    AUX_BEG, 016H,          00H,    01CAH
  473   473                      $DGS    END_BLK, ??eb03_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  474   474                      $DGS    AUX_END, 018H
  475   475                      $DGS    BEG_BLK, ??bb04_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  476   476                      $DGS    AUX_BEG, 01CH,          00H,    01CEH
  477   477                      $DGS    END_BLK, ??eb04_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  478   478                      $DGS    AUX_END, 01EH
  479   479                      $DGS    BEG_BLK, ??bb05_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  480   480                      $DGS    AUX_BEG, 023H,          00H,    01D2H
  481   481                      $DGS    END_BLK, ??eb05_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  482   482                      $DGS    AUX_END, 025H
  483   483                      $DGS    BEG_BLK, ??bb06_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  484   484                      $DGS    AUX_BEG, 029H,          00H,    01D6H
  485   485                      $DGS    END_BLK, ??eb06_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  486   486                      $DGS    AUX_END, 02BH
  487   487                      $DGS    BEG_BLK, ??bb07_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  488   488                      $DGS    AUX_BEG, 030H,          00H,    01DAH
  489   489                      $DGS    END_BLK, ??eb07_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  490   490                      $DGS    AUX_END, 032H
  491   491                      $DGS    BEG_BLK, ??bb08_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  492   492                      $DGS    AUX_BEG, 036H,          00H,    01DEH
  493   493                      $DGS    END_BLK, ??eb08_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  494   494                      $DGS    AUX_END, 038H
  495   495                      $DGS    BEG_BLK, ??bb09_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  496   496                      $DGS    AUX_BEG, 03DH,          00H,    01E2H
  497   497                      $DGS    END_BLK, ??eb09_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  498   498                      $DGS    AUX_END, 03FH
  499   499                      $DGS    BEG_BLK, ??bb0A_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  500   500                      $DGS    AUX_BEG, 043H,          00H,    01E6H
  501   501                      $DGS    END_BLK, ??eb0A_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  502   502                      $DGS    AUX_END, 045H
  503   503                      $DGS    BEG_BLK, ??bb0B_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  504   504                      $DGS    AUX_BEG, 04AH,          00H,    01EAH
  505   505                      $DGS    END_BLK, ??eb0B_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  506   506                      $DGS    AUX_END, 04CH
  507   507                      $DGS    BEG_BLK, ??bb0C_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  508   508                      $DGS    AUX_BEG, 050H,          00H,    01EEH
  509   509                      $DGS    END_BLK, ??eb0C_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  510   510                      $DGS    AUX_END, 052H
  511   511                      $DGS    BEG_BLK, ??bb0D_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  512   512                      $DGS    AUX_BEG, 057H,          00H,    01F2H
  513   513                      $DGS    END_BLK, ??eb0D_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  514   514                      $DGS    AUX_END, 059H
  515   515                      $DGS    BEG_BLK, ??bb0E_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  516   516                      $DGS    AUX_BEG, 05DH,          00H,    01F6H
  517   517                      $DGS    END_BLK, ??eb0E_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  518   518                      $DGS    AUX_END, 05FH
  519   519                      $DGS    BEG_BLK, ??bb0F_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  520   520                      $DGS    AUX_BEG, 068H,          00H,    01FAH
  521   521                      $DGS    END_BLK, ??eb0F_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  522   522                      $DGS    AUX_END, 06AH
  523   523                      $DGS    BEG_BLK, ??bb10_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  524   524                      $DGS    AUX_BEG, 06FH,          00H,    01FEH
  525   525                      $DGS    END_BLK, ??eb10_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  526   526                      $DGS    AUX_END, 071H
  527   527                      $DGS    BEG_BLK, ??bb11_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  528   528                      $DGS    AUX_BEG, 075H,          00H,    0202H
  529   529                      $DGS    END_BLK, ??eb11_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  530   530                      $DGS    AUX_END, 077H
  531   531                      $DGS    BEG_BLK, ??bb12_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  532   532                      $DGS    AUX_BEG, 07CH,          00H,    0206H
  533   533                      $DGS    END_BLK, ??eb12_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  534   534                      $DGS    AUX_END, 07EH
  535   535                      $DGS    BEG_BLK, ??bb13_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  536   536                      $DGS    AUX_BEG, 082H,          00H,    020AH
  537   537                      $DGS    END_BLK, ??eb13_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  538   538                      $DGS    AUX_END, 084H
  539   539                      $DGS    BEG_BLK, ??bb14_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  540   540                      $DGS    AUX_BEG, 08DH,          00H,    020EH
  541   541                      $DGS    END_BLK, ??eb14_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  542   542                      $DGS    AUX_END, 08FH
  543   543                      $DGS    BEG_BLK, ??bb15_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  544   544                      $DGS    AUX_BEG, 094H,          00H,    0212H
  545   545                      $DGS    END_BLK, ??eb15_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  546   546                      $DGS    AUX_END, 096H
  547   547                      $DGS    BEG_BLK, ??bb16_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  548   548                      $DGS    AUX_BEG, 09AH,          00H,    0216H
  549   549                      $DGS    END_BLK, ??eb16_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  550   550                      $DGS    AUX_END, 09CH
  551   551                      $DGS    BEG_BLK, ??bb17_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  552   552                      $DGS    AUX_BEG, 0A1H,          00H,    021AH
  553   553                      $DGS    END_BLK, ??eb17_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  554   554                      $DGS    AUX_END, 0A3H
  555   555                      $DGS    BEG_BLK, ??bb18_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  556   556                      $DGS    AUX_BEG, 0A7H,          00H,    021EH
  557   557                      $DGS    END_BLK, ??eb18_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  558   558                      $DGS    AUX_END, 0A9H
  559   559                      $DGS    BEG_BLK, ??bb19_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  560   560                      $DGS    AUX_BEG, 0AEH,          00H,    0222H
  561   561                      $DGS    END_BLK, ??eb19_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  562   562                      $DGS    AUX_END, 0B0H
  563   563                      $DGS    BEG_BLK, ??bb1A_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  564   564                      $DGS    AUX_BEG, 0B4H,          00H,    0226H
  565   565                      $DGS    END_BLK, ??eb1A_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  566   566                      $DGS    AUX_END, 0B6H
  567   567                      $DGS    BEG_BLK, ??bb1B_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  568   568                      $DGS    AUX_BEG, 0BBH,          00H,    022AH
  569   569                      $DGS    END_BLK, ??eb1B_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  570   570                      $DGS    AUX_END, 0BDH
  571   571                      $DGS    BEG_BLK, ??bb1C_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  572   572                      $DGS    AUX_BEG, 0C1H,          00H,    022EH
  573   573                      $DGS    END_BLK, ??eb1C_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  574   574                      $DGS    AUX_END, 0C3H
  575   575                      $DGS    BEG_BLK, ??bb1D_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  576   576                      $DGS    AUX_BEG, 0C8H,          00H,    0232H
  577   577                      $DGS    END_BLK, ??eb1D_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  578   578                      $DGS    AUX_END, 0CAH
  579   579                      $DGS    BEG_BLK, ??bb1E_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  580   580                      $DGS    AUX_BEG, 0CEH,          00H,    0236H
  581   581                      $DGS    END_BLK, ??eb1E_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  582   582                      $DGS    AUX_END, 0D0H
  583   583                      $DGS    BEG_BLK, ??bb1F_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  584   584                      $DGS    AUX_BEG, 0D5H,          00H,    023AH
  585   585                      $DGS    END_BLK, ??eb1F_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  586   586                      $DGS    AUX_END, 0D7H
  587   587                      $DGS    BEG_BLK, ??bb20_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  588   588                      $DGS    AUX_BEG, 0DBH,          00H,    023EH
  589   589                      $DGS    END_BLK, ??eb20_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  590   590                      $DGS    AUX_END, 0DDH
  591   591                      $DGS    BEG_BLK, ??bb21_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  592   592                      $DGS    AUX_BEG, 0E1H,          00H,    00H
  593   593                      $DGS    END_BLK, ??eb21_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  594   594                      $DGS    AUX_END, 0E4H
  595   595                      $DGS    END_BLK, ??eb00_Symbol_Map,     U,      U,      00H,    064H,   01H,    00H
  596   596                      $DGS    AUX_END, 0E6H
  597   597                      $DGS    END_FUN, ??ef_Symbol_Map,       U,      U,      00H,    065H,   01H,    00H
  598   598                      $DGS    AUX_END, 0E8H
  599   599                      $DGS    GLV_SYM, _Clear_Display,        U,      U,      01H,    026H,   01H,    02H
  600   600                      $DGS    AUX_FUN, 00H,           U,      U,      0253H,  01H,    00H
  601   601                      $DGS    BEG_FUN, ??bf_Clear_Display,    U,      U,      00H,    065H,   01H,    00H
  602   602                      $DGS    AUX_BEG, 045FH,         04H,    024DH
  603   603                      $DGS    AUT_VAR, _i,            03H,    0FFFFH, 0CH,    01H,    00H,    00H
  604   604                      $DGS    AUT_VAR, _RegPtr,       00H,    0FFFFH, 0CH,    01H,    01H,    01H
  605   605                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  606   606                      $DGS    BEG_BLK, ??bb00_Clear_Display,  U,      U,      00H,    064H,   01H,    00H
  607   607                      $DGS    AUX_BEG, 0AH,           00H,    00H
  608   608                      $DGS    END_BLK, ??eb00_Clear_Display,  U,      U,      00H,    064H,   01H,    00H
  609   609                      $DGS    AUX_END, 010H
  610   610                      $DGS    END_FUN, ??ef_Clear_Display,    U,      U,      00H,    065H,   01H,    00H
  611   611                      $DGS    AUX_END, 011H
  612   612                      $DGS    GLV_SYM, _Init_Maps,    U,      U,      01H,    026H,   01H,    02H
  613   613                      $DGS    AUX_FUN, 00H,           U,      U,      0259H,  01H,    00H
  614   614                      $DGS    BEG_FUN, ??bf_Init_Maps,        U,      U,      00H,    065H,   01H,    00H
  615   615                      $DGS    AUX_BEG, 047BH,         00H,    0259H
  616   616                      $DGS    END_FUN, ??ef_Init_Maps,        U,      U,      00H,    065H,   01H,    00H
  617   617                      $DGS    AUX_END, 061H
  618   618                      $DGS    GLV_SYM, _Display_Panel_String, U,      U,      01H,    026H,   01H,    02H
  619   619                      $DGS    AUX_FUN, 00H,           U,      U,      02B6H,  01H,    00H
  620   620                      $DGS    BEG_FUN, ??bf_Display_Panel_String,     U,      U,      00H,    065H,   01H,    00H
  621   621                      $DGS    AUX_BEG, 04E9H,         0AH,    0264H
  622   622                      $DGS    FUN_ARG, _position,     08H,    0FFFFH, 0500CH, 09H,    00H,    00H
  623   623                      $DGS    FUN_ARG, _string,       010H,   0FFFFH, 05002H, 09H,    01H,    01H
  624   624                      $DGS    AUX_STR, 00H,           00H,    02H,    00H,    00H,    00H,    00H,    01H
  625   625                      $DGS    AUT_VAR, _output_buf,   07H,    0FFFFH, 0CH,    01H,    00H,    00H
  626   626                      $DGS    AUT_VAR, _flag,         04H,    0FFFFH, 03H,    01H,    00H,    00H
  627   627                      $DGS    AUT_VAR, _i,            02H,    0FFFFH, 0DH,    01H,    00H,    00H
  628   628                      $DGS    AUT_VAR, _symbsel,      00H,    0FFFFH, 0DH,    01H,    00H,    00H
  629   629                      $DGS    BEG_BLK, ??bb00_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  630   630                      $DGS    AUX_BEG, 010H,          00H,    0266H
  631   631                      $DGS    BEG_BLK, ??bb01_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  632   632                      $DGS    AUX_BEG, 013H,          00H,    0268H
  633   633                      $DGS    BEG_BLK, ??bb02_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  634   634                      $DGS    AUX_BEG, 016H,          00H,    026AH
  635   635                      $DGS    BEG_BLK, ??bb03_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  636   636                      $DGS    AUX_BEG, 01CH,          00H,    0272H
  637   637                      $DGS    END_BLK, ??eb03_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  638   638                      $DGS    AUX_END, 01EH
  639   639                      $DGS    END_BLK, ??eb02_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  640   640                      $DGS    AUX_END, 01FH
  641   641                      $DGS    END_BLK, ??eb01_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  642   642                      $DGS    AUX_END, 020H
  643   643                      $DGS    BEG_BLK, ??bb04_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  644   644                      $DGS    AUX_BEG, 027H,          00H,    0274H
  645   645                      $DGS    BEG_BLK, ??bb05_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  646   646                      $DGS    AUX_BEG, 02AH,          00H,    0276H
  647   647                      $DGS    BEG_BLK, ??bb06_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  648   648                      $DGS    AUX_BEG, 02FH,          00H,    027EH
  649   649                      $DGS    END_BLK, ??eb06_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  650   650                      $DGS    AUX_END, 032H
  651   651                      $DGS    END_BLK, ??eb05_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  652   652                      $DGS    AUX_END, 033H
  653   653                      $DGS    END_BLK, ??eb04_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  654   654                      $DGS    AUX_END, 034H
  655   655                      $DGS    BEG_BLK, ??bb07_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  656   656                      $DGS    AUX_BEG, 039H,          00H,    0280H
  657   657                      $DGS    BEG_BLK, ??bb08_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  658   658                      $DGS    AUX_BEG, 03FH,          00H,    0282H
  659   659                      $DGS    BEG_BLK, ??bb09_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  660   660                      $DGS    AUX_BEG, 045H,          00H,    0284H
  661   661                      $DGS    BEG_BLK, ??bb0A_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  662   662                      $DGS    AUX_BEG, 047H,          00H,    0288H
  663   663                      $DGS    END_BLK, ??eb0A_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  664   664                      $DGS    AUX_END, 04AH
  665   665                      $DGS    BEG_BLK, ??bb0B_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  666   666                      $DGS    AUX_BEG, 04CH,          00H,    0292H
  667   667                      $DGS    END_BLK, ??eb0B_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  668   668                      $DGS    AUX_END, 04FH
  669   669                      $DGS    END_BLK, ??eb09_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  670   670                      $DGS    AUX_END, 050H
  671   671                      $DGS    END_BLK, ??eb08_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  672   672                      $DGS    AUX_END, 051H
  673   673                      $DGS    END_BLK, ??eb07_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  674   674                      $DGS    AUX_END, 052H
  675   675                      $DGS    BEG_BLK, ??bb0C_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  676   676                      $DGS    AUX_BEG, 059H,          00H,    0294H
  677   677                      $DGS    BEG_BLK, ??bb0D_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  678   678                      $DGS    AUX_BEG, 05BH,          00H,    0296H
  679   679                      $DGS    BEG_BLK, ??bb0E_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  680   680                      $DGS    AUX_BEG, 061H,          00H,    029CH
  681   681                      $DGS    END_BLK, ??eb0E_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  682   682                      $DGS    AUX_END, 064H
  683   683                      $DGS    END_BLK, ??eb0D_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  684   684                      $DGS    AUX_END, 065H
  685   685                      $DGS    BEG_BLK, ??bb0F_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  686   686                      $DGS    AUX_BEG, 067H,          00H,    029EH
  687   687                      $DGS    BEG_BLK, ??bb10_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  688   688                      $DGS    AUX_BEG, 069H,          00H,    02A2H
  689   689                      $DGS    END_BLK, ??eb10_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  690   690                      $DGS    AUX_END, 06CH
  691   691                      $DGS    BEG_BLK, ??bb11_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  692   692                      $DGS    AUX_BEG, 06EH,          00H,    02A8H
  693   693                      $DGS    END_BLK, ??eb11_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  694   694                      $DGS    AUX_END, 071H
  695   695                      $DGS    END_BLK, ??eb0F_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  696   696                      $DGS    AUX_END, 072H
  697   697                      $DGS    BEG_BLK, ??bb12_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  698   698                      $DGS    AUX_BEG, 074H,          00H,    02AEH
  699   699                      $DGS    END_BLK, ??eb12_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  700   700                      $DGS    AUX_END, 07CH
  701   701                      $DGS    END_BLK, ??eb0C_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  702   702                      $DGS    AUX_END, 07DH
  703   703                      $DGS    BEG_BLK, ??bb13_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  704   704                      $DGS    AUX_BEG, 084H,          00H,    00H
  705   705                      $DGS    END_BLK, ??eb13_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  706   706                      $DGS    AUX_END, 086H
  707   707                      $DGS    END_BLK, ??eb00_Display_Panel_String,   U,      U,      00H,    064H,   01H,    00H
  708   708                      $DGS    AUX_END, 088H
  709   709                      $DGS    END_FUN, ??ef_Display_Panel_String,     U,      U,      00H,    065H,   01H,    00H
  710   710                      $DGS    AUX_END, 089H
  711   711                      $DGS    GLV_SYM, _Display_Panel_Delay,  U,      U,      01H,    026H,   01H,    02H
  712   712                      $DGS    AUX_FUN, 00H,           U,      U,      02C2H,  01H,    00H
  713   713                      $DGS    BEG_FUN, ??bf_Display_Panel_Delay,      U,      U,      00H,    065H,   01H,    00H
  714   714                      $DGS    AUX_BEG, 057DH,         08H,    02BCH
  715   715                      $DGS    FUN_ARG, _units,        04H,    0FFFFH, 0500FH, 09H,    00H,    00H
  716   716                      $DGS    AUT_VAR, _counter,      00H,    0FFFFH, 0FH,    01H,    00H,    00H
  717   717                      $DGS    BEG_BLK, ??bb00_Display_Panel_Delay,    U,      U,      00H,    064H,   01H,    00H
  718   718                      $DGS    AUX_BEG, 07H,           00H,    00H
  719   719                      $DGS    END_BLK, ??eb00_Display_Panel_Delay,    U,      U,      00H,    064H,   01H,    00H
  720   720                      $DGS    AUX_END, 09H
  721   721                      $DGS    END_FUN, ??ef_Display_Panel_Delay,      U,      U,      00H,    065H,   01H,    00H
  722   722                      $DGS    AUX_END, 0AH
  723   723                      $DGS    GLV_SYM, _LCD_ON,       U,      U,      01H,    026H,   01H,    02H
  724   724                      $DGS    AUX_FUN, 00H,           U,      U,      02C8H,  01H,    00H
  725   725                      $DGS    BEG_FUN, ??bf_LCD_ON,   U,      U,      00H,    065H,   01H,    00H
  726   726                      $DGS    AUX_BEG, 0592H,         00H,    02C8H
  727   727                      $DGS    END_FUN, ??ef_LCD_ON,   U,      U,      00H,    065H,   01H,    00H
  728   728                      $DGS    AUX_END, 01FH
  729   729                      $DGS    GLV_SYM, _LCD_DISPLAY_ON,       U,      U,      01H,    026H,   01H,    02H
  730   730                      $DGS    AUX_FUN, 00H,           U,      U,      02CEH,  01H,    00H
  731   731                      $DGS    BEG_FUN, ??bf_LCD_DISPLAY_ON,   U,      U,      00H,    065H,   01H,    00H
  732   732                      $DGS    AUX_BEG, 05BCH,         00H,    02CEH
  733   733                      $DGS    END_FUN, ??ef_LCD_DISPLAY_ON,   U,      U,      00H,    065H,   01H,    00H
  734   734                      $DGS    AUX_END, 029H
  735   735                      $DGS    GLV_SYM, _LCD_DISPLAY_OFF,      U,      U,      01H,    026H,   01H,    02H
  736   736                      $DGS    AUX_FUN, 00H,           U,      U,      02D4H,  01H,    00H
  737   737                      $DGS    BEG_FUN, ??bf_LCD_DISPLAY_OFF,  U,      U,      00H,    065H,   01H,    00H
  738   738                      $DGS    AUX_BEG, 05F0H,         00H,    02D4H
  739   739                      $DGS    END_FUN, ??ef_LCD_DISPLAY_OFF,  U,      U,      00H,    065H,   01H,    00H
  740   740                      $DGS    AUX_END, 029H
  741   741                      $DGS    STA_SYM, L0038,         ?L0038, U,      05002H, 03H,    00H,    03H
  742   742                      $DGS    STA_SYM, L0057,         ?L0057, U,      05002H, 03H,    00H,    03H
  743   743                      $DGS    STA_SYM, L0081,         ?L0081, U,      05002H, 03H,    00H,    03H
  744   744                      $DGS    STA_SYM, L0094,         ?L0094, U,      05002H, 03H,    00H,    03H
  745   745                      $DGS    STA_SYM, L0107,         ?L0107, U,      05002H, 03H,    00H,    03H
  746   746                      $DGS    STA_SYM, L0121,         ?L0121, U,      05002H, 03H,    00H,    03H
  747   747                      $DGS    STA_SYM, L0178,         ?L0178, U,      05002H, 03H,    00H,    03H
  748   748                      $DGS    STA_SYM, L0217,         ?L0217, U,      05002H, 03H,    00H,    03H
  749   749                      $DGS    STA_SYM, L0218,         ?L0218, U,      05002H, 03H,    00H,    03H
  750   750                      $DGS    STA_SYM, L0219,         ?L0219, U,      05002H, 03H,    00H,    03H
  751   751                      $DGS    STA_SYM, L0220,         ?L0220, U,      05002H, 03H,    00H,    03H
  752   752                      $DGS    STA_SYM, L0221,         ?L0221, U,      05002H, 03H,    00H,    03H
  753   753                      $DGS    STA_SYM, L0222,         ?L0222, U,      05002H, 03H,    00H,    03H
  754   754                      $DGS    STA_SYM, L0223,         ?L0223, U,      05002H, 03H,    00H,    03H
  755   755                      $DGS    STA_SYM, L0224,         ?L0224, U,      05002H, 03H,    00H,    03H
  756   756                      $DGS    STA_SYM, L0225,         ?L0225, U,      05002H, 03H,    00H,    03H
  757   757                      $DGS    STA_SYM, L0226,         ?L0226, U,      05002H, 03H,    00H,    03H
  758   758                      $DGS    STA_SYM, L0227,         ?L0227, U,      05002H, 03H,    00H,    03H
  759   759                      $DGS    STA_SYM, L0228,         ?L0228, U,      05002H, 03H,    00H,    03H
  760   760                      $DGS    STA_SYM, L0229,         ?L0229, U,      05002H, 03H,    00H,    03H
  761   761                      $DGS    STA_SYM, L0230,         ?L0230, U,      05002H, 03H,    00H,    03H
  762   762                      $DGS    STA_SYM, L0231,         ?L0231, U,      05002H, 03H,    00H,    03H
  763   763                      $DGS    STA_SYM, L0232,         ?L0232, U,      05002H, 03H,    00H,    03H
  764   764                      $DGS    STA_SYM, L0233,         ?L0233, U,      05002H, 03H,    00H,    03H
  765   765                      $DGS    STA_SYM, L0234,         ?L0234, U,      05002H, 03H,    00H,    03H
  766   766                      $DGS    GLV_SYM, _SECTA_map,    U,      U,      09H,    026H,   01H,    03H
  767   767                      $DGS    AUX_STR, 01FH,          00H,    050H,   014H,   00H,    00H,    00H,    00H
  768   768                      $DGS    GLV_SYM, _SECTB_map,    U,      U,      09H,    026H,   01H,    03H
  769   769                      $DGS    AUX_STR, 01FH,          00H,    050H,   014H,   00H,    00H,    00H,    00H
  770   770                      $DGS    GLV_SYM, _SECTC_map,    U,      U,      09H,    026H,   01H,    03H
  771   771                      $DGS    AUX_STR, 01FH,          00H,    0A4H,   029H,   00H,    00H,    00H,    00H
  772   772                      $DGS    GLV_SYM, _R_LCD_Start,  U,      U,      01H,    02H,    01H,    02H
  773   773                      $DGS    AUX_FUN, 00H,           U,      U,      00H,    01H,    00H
  774   774                      $DGS    GLV_SYM, _R_LCD_Voltage_On,     U,      U,      01H,    02H,    01H,    02H
  775   775                      $DGS    AUX_FUN, 00H,           U,      U,      00H,    01H,    00H
  776   776                      $DGS    GLV_SYM, _@RTARG0,      U,      U,      00H,    02H,    00H,    00H
  777   777                      $DGS    GLV_SYM, _@RTARG2,      U,      U,      00H,    02H,    00H,    00H
  778   778                      $DGS    GLV_SYM, _@RTARG4,      U,      U,      00H,    02H,    00H,    00H
  779   779                      $DGS    GLV_SYM, @@lumul,       U,      U,      00H,    02H,    00H,    00H
  780   780                      
  781   781                              EXTRN   _R_LCD_Start
  782   782                              EXTRN   _R_LCD_Voltage_On
  783   783                              EXTRN   _@RTARG0
  784   784                              EXTRN   _@RTARG2
  785   785                              EXTRN   _@RTARG4
  786   786                              EXTRN   @@lumul
  787   787                              PUBLIC  _SECTA_map
  788   788                              PUBLIC  _SECTB_map
  789   789                              PUBLIC  _SECTC_map
  790   790                              PUBLIC  _Init_Display_Panel
  791   791                              PUBLIC  _Validate_Input
  792   792                              PUBLIC  _SECTA_Glyph_Map
  793   793                              PUBLIC  _SECTB_Glyph_Map
  794   794                              PUBLIC  _SECTC_Glyph_Map
  795   795                              PUBLIC  _SECTD_Glyph_Map
  796   796                              PUBLIC  _SECTE_Glyph_Map
  797   797                              PUBLIC  _SECTF_Glyph_Map
  798   798                              PUBLIC  _Symbol_Map
  799   799                              PUBLIC  _Clear_Display
  800   800                              PUBLIC  _Init_Maps
  801   801                              PUBLIC  _Display_Panel_String
  802   802                              PUBLIC  _Display_Panel_Delay
  803   803                              PUBLIC  _LCD_ON
  804   804                              PUBLIC  _LCD_DISPLAY_ON
  805   805                              PUBLIC  _LCD_DISPLAY_OFF
  806   806                      
  807   807 -----                @@BITS  BSEG
  808   808                      
  809   809 -----                @@CNST  CSEG    MIRRORP
  810   810 00000                ?L0038:
  811   811 00000 R6801                  DW      loww (?L0032)
  812   812 00002 R7101                  DW      loww (?L0033)
  813   813 00004 R7A01                  DW      loww (?L0034)
  814   814 00006 R8501                  DW      loww (?L0035)
  815   815 00008 R00                    DB      highw (?L0032)
  816   816 00009 R00                    DB      highw (?L0033)
  817   817 0000A R00                    DB      highw (?L0034)
  818   818 0000B R00                    DB      highw (?L0035)
  819   819 0000C                ?L0057:
  820   820 0000C R0C02                  DW      loww (?L0048)
  821   821 0000E R1502                  DW      loww (?L0049)
  822   822 00010 R1E02                  DW      loww (?L0050)
  823   823 00012 R2702                  DW      loww (?L0051)
  824   824 00014 R3202                  DW      loww (?L0052)
  825   825 00016 R3B02                  DW      loww (?L0053)
  826   826 00018 R4402                  DW      loww (?L0054)
  827   827 0001A R00                    DB      highw (?L0048)
  828   828 0001B R00                    DB      highw (?L0049)
  829   829 0001C R00                    DB      highw (?L0050)
  830   830 0001D R00                    DB      highw (?L0051)
  831   831 0001E R00                    DB      highw (?L0052)
  832   832 0001F R00                    DB      highw (?L0053)
  833   833 00020 R00                    DB      highw (?L0054)
  834   834 00021  00                    DB      (1)
  835   835 00022                ?L0081:
  836   836 00022 R1A03                  DW      loww (?L0073)
  837   837 00024 R2603                  DW      loww (?L0074)
  838   838 00026 R3403                  DW      loww (?L0075)
  839   839 00028 R4403                  DW      loww (?L0076)
  840   840 0002A R5403                  DW      loww (?L0077)
  841   841 0002C R6403                  DW      loww (?L0078)
  842   842 0002E R00                    DB      highw (?L0073)
  843   843 0002F R00                    DB      highw (?L0074)
  844   844 00030 R00                    DB      highw (?L0075)
  845   845 00031 R00                    DB      highw (?L0076)
  846   846 00032 R00                    DB      highw (?L0077)
  847   847 00033 R00                    DB      highw (?L0078)
  848   848 00034                ?L0094:
  849   849 00034 RFF03                  DW      loww (?L0087)
  850   850 00036 R1104                  DW      loww (?L0088)
  851   851 00038 R2B04                  DW      loww (?L0089)
  852   852 0003A R4504                  DW      loww (?L0090)
  853   853 0003C R5F04                  DW      loww (?L0091)
  854   854 0003E R00                    DB      highw (?L0087)
  855   855 0003F R00                    DB      highw (?L0088)
  856   856 00040 R00                    DB      highw (?L0089)
  857   857 00041 R00                    DB      highw (?L0090)
  858   858 00042 R00                    DB      highw (?L0091)
  859   859 00043  00                    DB      (1)
  860   860 00044                ?L0107:
  861   861 00044 R9604                  DW      loww (?L0098)
  862   862 00046 RBE04                  DW      loww (?L0099)
  863   863 00048 RE604                  DW      loww (?L0100)
  864   864 0004A R0E05                  DW      loww (?L0101)
  865   865 0004C R3505                  DW      loww (?L0102)
  866   866 0004E R5C05                  DW      loww (?L0103)
  867   867 00050 R8305                  DW      loww (?L0104)
  868   868 00052 R00                    DB      highw (?L0098)
  869   869 00053 R00                    DB      highw (?L0099)
  870   870 00054 R00                    DB      highw (?L0100)
  871   871 00055 R00                    DB      highw (?L0101)
  872   872 00056 R00                    DB      highw (?L0102)
  873   873 00057 R00                    DB      highw (?L0103)
  874   874 00058 R00                    DB      highw (?L0104)
  875   875 00059  00                    DB      (1)
  876   876 0005A                ?L0121:
  877   877 0005A RC905                  DW      loww (?L0111)
  878   878 0005C RF405                  DW      loww (?L0112)
  879   879 0005E R2706                  DW      loww (?L0113)
  880   880 00060 R5A06                  DW      loww (?L0114)
  881   881 00062 R8506                  DW      loww (?L0115)
  882   882 00064 RB006                  DW      loww (?L0116)
  883   883 00066 RE206                  DW      loww (?L0117)
  884   884 00068 R1407                  DW      loww (?L0118)
  885   885 0006A R00                    DB      highw (?L0111)
  886   886 0006B R00                    DB      highw (?L0112)
  887   887 0006C R00                    DB      highw (?L0113)
  888   888 0006D R00                    DB      highw (?L0114)
  889   889 0006E R00                    DB      highw (?L0115)
  890   890 0006F R00                    DB      highw (?L0116)
  891   891 00070 R00                    DB      highw (?L0117)
  892   892 00071 R00                    DB      highw (?L0118)
  893   893 00072                ?L0178:
  894   894 00072 R030D                  DW      loww (?L0172)
  895   895 00074 R990D                  DW      loww (?L0174)
  896   896 00076 R5E0D                  DW      loww (?L0173)
  897   897 00078 R080E                  DW      loww (?L0175)
  898   898 0007A R00                    DB      highw (?L0172)
  899   899 0007B R00                    DB      highw (?L0174)
  900   900 0007C R00                    DB      highw (?L0173)
  901   901 0007D R00                    DB      highw (?L0175)
  902   902 0007E  3838383A      ?L0217: DB      '888:88'
            00082  3838
  903   903 00084  00                    DB      00H
  904   904 00085  383838        ?L0218: DB      '888'
  905   905 00088  00                    DB      00H
  906   906 00089  38383838      ?L0219: DB      '88888'
            0008D  38
  907   907 0008E  00                    DB      00H
  908   908 0008F  2D31          ?L0220: DB      '-1'
  909   909 00091  00                    DB      00H
  910   910 00092  3131          ?L0221: DB      '11'
  911   911 00094  00                    DB      00H
  912   912 00095  3231          ?L0222: DB      '21'
  913   913 00097  00                    DB      00H
  914   914 00098  3331          ?L0223: DB      '31'
  915   915 0009A  00                    DB      00H
  916   916 0009B  3431          ?L0224: DB      '41'
  917   917 0009D  00                    DB      00H
  918   918 0009E  3531          ?L0225: DB      '51'
  919   919 000A0  00                    DB      00H
  920   920 000A1  3631          ?L0226: DB      '61'
  921   921 000A3  00                    DB      00H
  922   922 000A4  3731          ?L0227: DB      '71'
  923   923 000A6  00                    DB      00H
  924   924 000A7  3831          ?L0228: DB      '81'
  925   925 000A9  00                    DB      00H
  926   926 000AA  3931          ?L0229: DB      '91'
  927   927 000AC  00                    DB      00H
  928   928 000AD  6131          ?L0230: DB      'a1'
  929   929 000AF  00                    DB      00H
  930   930 000B0  6231          ?L0231: DB      'b1'
  931   931 000B2  00                    DB      00H
  932   932 000B3  6331          ?L0232: DB      'c1'
  933   933 000B5  00                    DB      00H
  934   934 000B6  6431          ?L0233: DB      'd1'
  935   935 000B8  00                    DB      00H
  936   936 000B9  6531          ?L0234: DB      'e1'
  937   937 000BB  00                    DB      00H
  938   938                      
  939   939 -----                @@R_INIT        CSEG    UNIT64KP
  940   940                      
  941   941 -----                @@INIT  DSEG    BASEP
  942   942                      
  943   943 -----                @@DATA  DSEG    BASEP
  944   944 00000                _SECTA_map:     DS      (80)
  945   945 00050                _SECTB_map:     DS      (80)
  946   946 000A0                _SECTC_map:     DS      (164)
  947   947                      
  948   948 -----                @@R_INIS        CSEG    UNIT64KP
  949   949                      
  950   950 -----                @@INIS  DSEG    SADDRP
  951   951                      
  952   952 -----                @@DATS  DSEG    SADDRP
  953   953                      
  954   954 -----                @@CNSTL CSEG    PAGE64KP
  955   955                      
  956   956 -----                @@RLINIT        CSEG    UNIT64KP
  957   957                      
  958   958 -----                @@INITL DSEG    UNIT64KP
  959   959                      
  960   960 -----                @@DATAL DSEG    UNIT64KP
  961   961                      
  962   962 -----                @@CALT  CSEG    CALLT0
  963   963                      
  964   964                      ; line     1 : /***************************************************************
  965   965                      ;              ********************************************************
  966   966                      ; line     2 : * DISCLAIMER
  967   967                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
  968   968                      ;              nd is only 
  969   969                      ; line     4 : * intended for use with Renesas products. No other uses are auth
  970   970                      ;              orized. This 
  971   971                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  972   972                      ;              otected under 
  973   973                      ; line     6 : * all applicable laws, including copyright laws.
  974   974                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  975   975                      ;              IES REGARDING 
  976   976                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  977   977                      ;              G BUT NOT 
  978   978                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  979   979                      ;              ULAR PURPOSE 
  980   980                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  981   981                      ;              AIMED.
  982   982                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  983   983                      ;               RENESAS 
  984   984                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  985   985                      ;              ALL BE LIABLE 
  986   986                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  987   987                      ;               DAMAGES FOR 
  988   988                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  989   989                      ;              FILIATES HAVE 
  990   990                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  991   991                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  992   992                      ;               this software 
  993   993                      ; line    17 : * and to discontinue the availability of this software.  By usin
  994   994                      ;              g this software, 
  995   995                      ; line    18 : * you agree to the additional terms and conditions found by acce
  996   996                      ;              ssing the 
  997   997                      ; line    19 : * following link:
  998   998                      ; line    20 : * http://www.renesas.com/disclaimer
  999   999                      ; line    21 : *
 1000  1000                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
 1001  1001                      ;               reserved.
 1002  1002                      ; line    23 : ****************************************************************
 1003  1003                      ;              *******************************************************/
 1004  1004                      ; line    24 : 
 1005  1005                      ; line    25 : /***************************************************************
 1006  1006                      ;              ********************************************************
 1007  1007                      ; line    26 : * File Name    : r_cg_macrodriver.h
 1008  1008                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
 1009  1009                      ;              ]
 1010  1010                      ; line    28 : * Device(s)    : R5F10WMG
 1011  1011                      ; line    29 : * Tool-Chain   : CA78K0R
 1012  1012                      ; line    30 : * Description  : This file implements general head file.
 1013  1013                      ; line    31 : * Creation Date: 05-Jun-21
 1014  1014                      ; line    32 : ****************************************************************
 1015  1015                      ;              *******************************************************/
 1016  1016                      ; line    33 : #ifndef MODULEID_H
 1017  1017                      ; line    34 : #define MODULEID_H
 1018  1018                      ; line    35 : /***************************************************************
 1019  1019                      ;              ********************************************************
 1020  1020                      ; line    36 : Includes
 1021  1021                      ; line    37 : ****************************************************************
 1022  1022                      ;              *******************************************************/
 1023  1023                      ; line    38 : #pragma sfr
 1024  1024                      ; line    39 : #pragma DI
 1025  1025                      ; line    40 : #pragma EI
 1026  1026                      ; line    41 : #pragma NOP
 1027  1027                      ; line    42 : #pragma HALT
 1028  1028                      ; line    43 : #pragma STOP
 1029  1029                      ; line    44 : 
 1030  1030                      ; line    45 : /***************************************************************
 1031  1031                      ;              ********************************************************
 1032  1032                      ; line    46 : Macro definitions (Register bit)
 1033  1033                      ; line    47 : ****************************************************************
 1034  1034                      ;              *******************************************************/
 1035  1035                      ; line    48 : 
 1036  1036                      ; line    49 : /***************************************************************
 1037  1037                      ;              ********************************************************
 1038  1038                      ; line    50 : Macro definitions
 1039  1039                      ; line    51 : ****************************************************************
 1040  1040                      ;              *******************************************************/
 1041  1041                      ; line    52 : #ifndef __TYPEDEF__
 1042  1042                      ; line    53 : /* Status list definition */
 1043  1043                      ; line    54 : #define MD_STATUSBASE        (0x00U)
 1044  1044                      ; line    55 : #define MD_OK                (MD_STATUSBASE + 0x00U) /* register
 1045  1045                      ;               setting OK */
 1046  1046                      ; line    56 : #define MD_SPT               (MD_STATUSBASE + 0x01U) /* IIC stop
 1047  1047                      ;               */
 1048  1048                      ; line    57 : #define MD_NACK              (MD_STATUSBASE + 0x02U) /* IIC no A
 1049  1049                      ;              CK */
 1050  1050                      ; line    58 : #define MD_BUSY1             (MD_STATUSBASE + 0x03U) /* busy 1 *
 1051  1051                      ;              /
 1052  1052                      ; line    59 : #define MD_BUSY2             (MD_STATUSBASE + 0x04U) /* busy 2 *
 1053  1053                      ;              /
 1054  1054                      ; line    60 : 
 1055  1055                      ; line    61 : /* Error list definition */
 1056  1056                      ; line    62 : #define MD_ERRORBASE         (0x80U)
 1057  1057                      ; line    63 : #define MD_ERROR             (MD_ERRORBASE + 0x00U)  /* error */
 1058  1058                      ; line    64 : #define MD_ARGERROR          (MD_ERRORBASE + 0x01U)  /* error ag
 1059  1059                      ;              rument input error */
 1060  1060                      ; line    65 : #define MD_ERROR1            (MD_ERRORBASE + 0x02U)  /* error 1 
 1061  1061                      ;              */
 1062  1062                      ; line    66 : #define MD_ERROR2            (MD_ERRORBASE + 0x03U)  /* error 2 
 1063  1063                      ;              */
 1064  1064                      ; line    67 : #define MD_ERROR3            (MD_ERRORBASE + 0x04U)  /* error 3 
 1065  1065                      ;              */
 1066  1066                      ; line    68 : #define MD_ERROR4            (MD_ERRORBASE + 0x05U)  /* error 4 
 1067  1067                      ;              */
 1068  1068                      ; line    69 : #define MD_ERROR5            (MD_ERRORBASE + 0x06U)  /* error 5 
 1069  1069                      ;              */
 1070  1070                      ; line    70 : #endif
 1071  1071                      ; line    71 : 
 1072  1072                      ; line    72 : /***************************************************************
 1073  1073                      ;              ********************************************************
 1074  1074                      ; line    73 : Typedef definitions
 1075  1075                      ; line    74 : ****************************************************************
 1076  1076                      ;              *******************************************************/
 1077  1077                      ; line    75 : #ifndef __TYPEDEF__
 1078  1078                      ; line    76 : typedef signed char         int8_t;
 1079  1079                      ; line    77 : typedef unsigned char       uint8_t;
 1080  1080                      ; line    78 : typedef signed short        int16_t;
 1081  1081                      ; line    79 : typedef unsigned short      uint16_t;
 1082  1082                      ; line    80 : typedef signed long         int32_t;
 1083  1083                      ; line    81 : typedef unsigned long       uint32_t;
 1084  1084                      ; line    82 : typedef unsigned short      MD_STATUS;
 1085  1085                      ; line     1 : /***************************************************************
 1086  1086                      ;              ********************************************************
 1087  1087                      ; line     2 : * DISCLAIMER
 1088  1088                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
 1089  1089                      ;              nd is only 
 1090  1090                      ; line     4 : * intended for use with Renesas products. No other uses are auth
 1091  1091                      ;              orized. This 
 1092  1092                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
 1093  1093                      ;              otected under 
 1094  1094                      ; line     6 : * all applicable laws, including copyright laws.
 1095  1095                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
 1096  1096                      ;              IES REGARDING 
 1097  1097                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
 1098  1098                      ;              G BUT NOT 
 1099  1099                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
 1100  1100                      ;              ULAR PURPOSE 
 1101  1101                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
 1102  1102                      ;              AIMED.
 1103  1103                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
 1104  1104                      ;               RENESAS 
 1105  1105                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
 1106  1106                      ;              ALL BE LIABLE 
 1107  1107                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
 1108  1108                      ;               DAMAGES FOR 
 1109  1109                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
 1110  1110                      ;              FILIATES HAVE 
 1111  1111                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 1112  1112                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
 1113  1113                      ;               this software 
 1114  1114                      ; line    17 : * and to discontinue the availability of this software.  By usin
 1115  1115                      ;              g this software, 
 1116  1116                      ; line    18 : * you agree to the additional terms and conditions found by acce
 1117  1117                      ;              ssing the 
 1118  1118                      ; line    19 : * following link:
 1119  1119                      ; line    20 : * http://www.renesas.com/disclaimer
 1120  1120                      ; line    21 : *
 1121  1121                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
 1122  1122                      ;               reserved.
 1123  1123                      ; line    23 : ****************************************************************
 1124  1124                      ;              *******************************************************/
 1125  1125                      ; line    24 : 
 1126  1126                      ; line    25 : /***************************************************************
 1127  1127                      ;              ********************************************************
 1128  1128                      ; line    26 : * File Name    : r_cg_lcd.h
 1129  1129                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
 1130  1130                      ;              ]
 1131  1131                      ; line    28 : * Device(s)    : R5F10WMG
 1132  1132                      ; line    29 : * Tool-Chain   : CA78K0R
 1133  1133                      ; line    30 : * Description  : This file implements device driver for LCD modu
 1134  1134                      ;              le.
 1135  1135                      ; line    31 : * Creation Date: 12/09/2013
 1136  1136                      ; line    32 : ****************************************************************
 1137  1137                      ;              *******************************************************/
 1138  1138                      ; line    33 : #ifndef LCD_H
 1139  1139                      ; line    34 : #define LCD_H
 1140  1140                      ; line    35 : 
 1141  1141                      ; line    36 : /***************************************************************
 1142  1142                      ;              ********************************************************
 1143  1143                      ; line    37 : Macro definitions (Register bit)
 1144  1144                      ; line    38 : ****************************************************************
 1145  1145                      ;              *******************************************************/
 1146  1146                      ; line    39 : /*
 1147  1147                      ; line    40 :     Peripheral enable register 0 (PER0)
 1148  1148                      ; line    41 : */
 1149  1149                      ; line    42 : /* Control of LCD input clock (RTCEN) */
 1150  1150                      ; line    43 : #define _00_LCD_CLOCK_STOP                (0x00U) /* stops suppl
 1151  1151                      ;              y of input clock */
 1152  1152                      ; line    44 : #define _80_LCD_CLOCK_SUPPLY              (0x80U) /* supplies in
 1153  1153                      ;              put clock */
 1154  1154                      ; line    45 : 
 1155  1155                      ; line    46 : /*
 1156  1156                      ; line    47 :     LCD mode register 0 (LCDM0)
 1157  1157                      ; line    48 : */
 1158  1158                      ; line    49 : /* LCD drive voltage generator selection (MDSET1, MDSET0) */
 1159  1159                      ; line    50 : #define _00_LCD_VOLTAGE_MODE_EXTERNAL     (0x00U) /* external re
 1160  1160                      ;              sistance division method */
 1161  1161                      ; line    51 : #define _40_LCD_VOLTAGE_MODE_INTERNAL     (0x40U) /* internal vo
 1162  1162                      ;              ltage boosting method */
 1163  1163                      ; line    52 : #define _80_LCD_VOLTAGE_MODE_CAPACITOR    (0x80U) /* capacitor s
 1164  1164                      ;              plit method */
 1165  1165                      ; line    53 : #define _C0_LCD_VOLTAGE_MODE_INITIALVALUE (0xC0U)
 1166  1166                      ; line    54 : /* LCD display waveform selection (LWAVE) */
 1167  1167                      ; line    55 : #define _00_LCD_DISPLAY_WAVEFORM_A        (0x00U) /* A waveform 
 1168  1168                      ;              */
 1169  1169                      ; line    56 : #define _20_LCD_DISPLAY_WAVEFORM_B        (0x20U) /* B waveform 
 1170  1170                      ;              */
 1171  1171                      ; line    57 : /* LCD time slices and bias mode (LDTY2 - LDTY0, LBAS1, LBAS0) *
 1172  1172                      ;              /
 1173  1173                      ; line    58 : #define _16_LCD_DISPLAY_MODE0             (0x16U) /* 8 time slic
 1174  1174                      ;              es, 1/4 bias mode */
 1175  1175                      ; line    59 : #define _0D_LCD_DISPLAY_MODE1             (0x0DU) /* 4 time slic
 1176  1176                      ;              es, 1/3 bias mode */
 1177  1177                      ; line    60 : #define _09_LCD_DISPLAY_MODE2             (0x09U) /* 3 time slic
 1178  1178                      ;              es, 1/3 bias mode */
 1179  1179                      ; line    61 : #define _08_LCD_DISPLAY_MODE3             (0x08U) /* 3 time slic
 1180  1180                      ;              es, 1/2 bias mode */
 1181  1181                      ; line    62 : #define _04_LCD_DISPLAY_MODE4             (0x04U) /* 2 time slic
 1182  1182                      ;              es, 1/2 bias mode */
 1183  1183                      ; line    63 : #define _00_LCD_DISPLAY_STATIC            (0x00U) /* A waveform 
 1184  1184                      ;              external resistance division method: static */
 1185  1185                      ; line    64 : 
 1186  1186                      ; line    65 : /*
 1187  1187                      ; line    66 :     LCD mode register 1 (LCDM1)
 1188  1188                      ; line    67 : */
 1189  1189                      ; line    68 : /* LCD display enable/disable (LCDON, SCOC) */
 1190  1190                      ; line    69 : #define _00_LCD_DISPLAY_GROUNG            (0x00U) /* output grou
 1191  1191                      ;              nd level to segment/common pin */
 1192  1192                      ; line    70 : #define _40_LCD_DISPLAY_OFF               (0x40U) /* display off
 1193  1193                      ;               (all segment outputs are deselected) */
 1194  1194                      ; line    71 : #define _C0_LCD_DISPLAY_ON                (0xC0U) /* display on 
 1195  1195                      ;              */
 1196  1196                      ; line    72 : /* Voltage boost circuit and capacitor split circuit operation e
 1197  1197                      ;              nable/disable (VLCON) */
 1198  1198                      ; line    73 : #define _00_LCD_BOOST_CAPACITOR_DISABLE   (0x00U) /* stops volta
 1199  1199                      ;              ge boost and capacitor split operation */
 1200  1200                      ; line    74 : #define _20_LCD_BOOST_CAPACITOR_ENABLE    (0x20U) /* enables vol
 1201  1201                      ;              tage boost and capacitor split operation */
 1202  1202                      ; line    75 : /* Display data area control (BLON, LCDSEL) */
 1203  1203                      ; line    76 : #define _00_LCD_DISPLAY_PATTERN_A         (0x00U) /* displaying 
 1204  1204                      ;              an A-pattern area data */
 1205  1205                      ; line    77 : #define _08_LCD_DISPLAY_PATTERN_B         (0x08U) /* displaying 
 1206  1206                      ;              a B-pattern area data */
 1207  1207                      ; line    78 : #define _10_LCD_DISPLAY_PATTERN_AB        (0x10U) /* blinking di
 1208  1208                      ;              splay alternately A-pattern and B-pattern area data */
 1209  1209                      ; line    79 : /* Control of default value of voltage boosting pin (LCDVLM) */
 1210  1210                      ; line    80 : #define _00_LCD_VOLTAGE_HIGH              (0x00U) /* VDD voltage
 1211  1211                      ;               is larger than 3.8V */
 1212  1212                      ; line    81 : #define _01_LCD_VOLTAGE_LOW               (0x01U) /* VDD voltage
 1213  1213                      ;               is less than 3.8V */
 1214  1214                      ; line    82 : 
 1215  1215                      ; line    83 : /*
 1216  1216                      ; line    84 :     LCD clock control register (LCDC0)
 1217  1217                      ; line    85 : */
 1218  1218                      ; line    86 : /* LCD clock (LCDCL) selection (LCDC05 - LCDC00) */
 1219  1219                      ; line    87 : #define _01_LCD_CLOCK_FSUB_FIL_2           (0x01U) /* fSUB/2^2 o
 1220  1220                      ;              r fIL/2^2*/
 1221  1221                      ; line    88 : #define _02_LCD_CLOCK_FSUB_FIL_3           (0x02U) /* fSUB/2^3 o
 1222  1222                      ;              r fIL/2^3 */
 1223  1223                      ; line    89 : #define _03_LCD_CLOCK_FSUB_FIL_4           (0x03U) /* fSUB/2^4 o
 1224  1224                      ;              r fIL/2^4 */
 1225  1225                      ; line    90 : #define _04_LCD_CLOCK_FSUB_FIL_5           (0x04U) /* fSUB/2^5 o
 1226  1226                      ;              r fIL/2^5 */
 1227  1227                      ; line    91 : #define _05_LCD_CLOCK_FSUB_FIL_6           (0x05U) /* fSUB/2^6 o
 1228  1228                      ;              r fIL/2^6 */
 1229  1229                      ; line    92 : #define _06_LCD_CLOCK_FSUB_FIL_7           (0x06U) /* fSUB/2^7 o
 1230  1230                      ;              r fIL/2^7 */
 1231  1231                      ; line    93 : #define _07_LCD_CLOCK_FSUB_FIL_8           (0x07U) /* fSUB/2^8 o
 1232  1232                      ;              r fIL/2^8 */
 1233  1233                      ; line    94 : #define _08_LCD_CLOCK_FSUB_9               (0x08U) /* fSUB/2^9 *
 1234  1234                      ;              /
 1235  1235                      ; line    95 : #define _09_LCD_CLOCK_FSUB_10              (0x09U) /* fSUB/2^10 
 1236  1236                      ;              */
 1237  1237                      ; line    96 : /* LCD clock (LCDCL) selection (LCDC05 - LCDC00) */
 1238  1238                      ; line    97 : #define _11_LCD_CLOCK_FMAIN_8              (0x11U) /* fMAIN/2^8 
 1239  1239                      ;              */
 1240  1240                      ; line    98 : #define _12_LCD_CLOCK_FMAIN_9              (0x12U) /* fMAIN/2^9 
 1241  1241                      ;              */
 1242  1242                      ; line    99 : #define _13_LCD_CLOCK_FMAIN_10             (0x13U) /* fMAIN/2^10
 1243  1243                      ;               */
 1244  1244                      ; line   100 : #define _14_LCD_CLOCK_FMAIN_11             (0x14U) /* fMAIN/2^11
 1245  1245                      ;               */
 1246  1246                      ; line   101 : #define _15_LCD_CLOCK_FMAIN_12             (0x15U) /* fMAIN/2^12
 1247  1247                      ;               */
 1248  1248                      ; line   102 : #define _16_LCD_CLOCK_FMAIN_13             (0x16U) /* fMAIN/2^13
 1249  1249                      ;               */
 1250  1250                      ; line   103 : #define _17_LCD_CLOCK_FMAIN_14             (0x17U) /* fMAIN/2^14
 1251  1251                      ;               */
 1252  1252                      ; line   104 : #define _18_LCD_CLOCK_FMAIN_15             (0x18U) /* fMAIN/2^15
 1253  1253                      ;               */
 1254  1254                      ; line   105 : #define _19_LCD_CLOCK_FMAIN_16             (0x19U) /* fMAIN/2^16
 1255  1255                      ;               */
 1256  1256                      ; line   106 : #define _1A_LCD_CLOCK_FMAIN_17             (0x1AU) /* fMAIN/2^17
 1257  1257                      ;               */
 1258  1258                      ; line   107 : #define _1B_LCD_CLOCK_FMAIN_18             (0x1BU) /* fMAIN/2^18
 1259  1259                      ;               */
 1260  1260                      ; line   108 : #define _2B_LCD_CLOCK_FMAIN_19             (0x2BU) /* fMAIN/2^19
 1261  1261                      ;               */
 1262  1262                      ; line   109 : 
 1263  1263                      ; line   110 : /*
 1264  1264                      ; line   111 :     LCD memory liquid crystal control register (MLCD)
 1265  1265                      ; line   112 : */
 1266  1266                      ; line   113 : /* LCD display waveform selection (MLCDEN) */
 1267  1267                      ; line   114 : #define _00_LCD_LED_WAVEFORM_UNUSED       (0x00U) /* memory liqu
 1268  1268                      ;              id crystal waveform unused */
 1269  1269                      ; line   115 : #define _80_LCD_LED_WAVEFORM_USED         (0x80U) /* memory liqu
 1270  1270                      ;              id crystal waveform used */
 1271  1271                      ; line   116 : /* SEG/COMEXP combination terminal output selection (COMEXP) */
 1272  1272                      ; line   117 : #define _00_LCD_SEGMENT_OUTPUT            (0x00U) /* segment wav
 1273  1273                      ;              eform output */
 1274  1274                      ; line   118 : #define _40_LCD_COMEXP_OUTPUT             (0x40U) /* COMEXP wave
 1275  1275                      ;              form output */
 1276  1276                      ; line   119 : /* Option clock (OPTCKE) */
 1277  1277                      ; line   120 : #define _00_LCD_OPTION_CLOCK_UNUSED       (0x00U) /* option cloc
 1278  1278                      ;              k disabled */
 1279  1279                      ; line   121 : #define _10_LCD_OPTION_CLOCK_USED         (0x10U) /* option cloc
 1280  1280                      ;              k enabled */
 1281  1281                      ; line   122 : /* Division ratio of LCD clock (LCDCL) selection (OPTCK2 - OPTCK
 1282  1282                      ;              0) */
 1283  1283                      ; line   123 : #define _00_LCD_OPTION_CLOCK_2            (0x00U) /* 2 dividing 
 1284  1284                      ;              */
 1285  1285                      ; line   124 : #define _01_LCD_OPTION_CLOCK_3            (0x01U) /* 3 dividing 
 1286  1286                      ;              */
 1287  1287                      ; line   125 : #define _02_LCD_OPTION_CLOCK_4            (0x02U) /* 4 dividing 
 1288  1288                      ;              */
 1289  1289                      ; line   126 : #define _03_LCD_OPTION_CLOCK_5            (0x03U) /* 5 dividing 
 1290  1290                      ;              */
 1291  1291                      ; line   127 : #define _04_LCD_OPTION_CLOCK_6            (0x04U) /* 6 dividing 
 1292  1292                      ;              */
 1293  1293                      ; line   128 : #define _05_LCD_OPTION_CLOCK_7            (0x05U) /* 7 dividing 
 1294  1294                      ;              */
 1295  1295                      ; line   129 : #define _06_LCD_OPTION_CLOCK_8            (0x06U) /* 8 dividing 
 1296  1296                      ;              */
 1297  1297                      ; line   130 : #define _07_LCD_OPTION_CLOCK_9            (0x07U) /* 9 dividing 
 1298  1298                      ;              */
 1299  1299                      ; line   131 : 
 1300  1300                      ; line   132 : /*
 1301  1301                      ; line   133 :     LCD boost level control register (VLCD)
 1302  1302                      ; line   134 : */
 1303  1303                      ; line   135 : /* Reference voltage selection (contrast adjustment) (VLCD4 - VL
 1304  1304                      ;              CD0) */
 1305  1305                      ; line   136 : #define _04_LCD_BOOST_VOLTAGE_100V        (0x04U) /* 1.00 V (1/3
 1306  1306                      ;               bias: 3.00 V; 1/4 bias: 4.00 V) */
 1307  1307                      ; line   137 : #define _05_LCD_BOOST_VOLTAGE_105V        (0x05U) /* 1.05 V (1/3
 1308  1308                      ;               bias: 3.15 V; 1/4 bias: 4.20 V) */
 1309  1309                      ; line   138 : #define _06_LCD_BOOST_VOLTAGE_110V        (0x06U) /* 1.10 V (1/3
 1310  1310                      ;               bias: 3.30 V; 1/4 bias: 4.40 V) */
 1311  1311                      ; line   139 : #define _07_LCD_BOOST_VOLTAGE_115V        (0x07U) /* 1.15 V (1/3
 1312  1312                      ;               bias: 3.45 V; 1/4 bias: 4.60 V) */
 1313  1313                      ; line   140 : #define _08_LCD_BOOST_VOLTAGE_120V        (0x08U) /* 1.20 V (1/3
 1314  1314                      ;               bias: 3.60 V; 1/4 bias: 4.80 V) */
 1315  1315                      ; line   141 : #define _09_LCD_BOOST_VOLTAGE_125V        (0x09U) /* 1.25 V (1/3
 1316  1316                      ;               bias: 3.75 V; 1/4 bias: 5.00 V) */
 1317  1317                      ; line   142 : #define _0A_LCD_BOOST_VOLTAGE_130V        (0x0AU) /* 1.30 V (1/3
 1318  1318                      ;               bias: 3.90 V; 1/4 bias: 5.20 V) */
 1319  1319                      ; line   143 : #define _0B_LCD_BOOST_VOLTAGE_135V        (0x0BU) /* 1.35 V (1/3
 1320  1320                      ;               bias: 4.05 V; 1/4 bias: setting prohibited) */
 1321  1321                      ; line   144 : #define _0C_LCD_BOOST_VOLTAGE_140V        (0x0CU) /* 1.40 V (1/3
 1322  1322                      ;               bias: 4.20 V; 1/4 bias: setting prohibited) */
 1323  1323                      ; line   145 : #define _0D_LCD_BOOST_VOLTAGE_145V        (0x0DU) /* 1.45 V (1/3
 1324  1324                      ;               bias: 4.35 V; 1/4 bias: setting prohibited) */
 1325  1325                      ; line   146 : #define _0E_LCD_BOOST_VOLTAGE_150V        (0x0EU) /* 1.50 V (1/3
 1326  1326                      ;               bias: 4.50 V; 1/4 bias: setting prohibited) */
 1327  1327                      ; line   147 : #define _0F_LCD_BOOST_VOLTAGE_155V        (0x0FU) /* 1.55 V (1/3
 1328  1328                      ;               bias: 4.65 V; 1/4 bias: setting prohibited) */
 1329  1329                      ; line   148 : #define _10_LCD_BOOST_VOLTAGE_160V        (0x10U) /* 1.60 V (1/3
 1330  1330                      ;               bias: 4.80 V; 1/4 bias: setting prohibited) */
 1331  1331                      ; line   149 : #define _11_LCD_BOOST_VOLTAGE_165V        (0x11U) /* 1.65 V (1/3
 1332  1332                      ;               bias: 4.95 V; 1/4 bias: setting prohibited) */
 1333  1333                      ; line   150 : #define _12_LCD_BOOST_VOLTAGE_170V        (0x12U) /* 1.70 V (1/3
 1334  1334                      ;               bias: 5.10 V; 1/4 bias: setting prohibited) */
 1335  1335                      ; line   151 : #define _13_LCD_BOOST_VOLTAGE_175V        (0x13U) /* 1.75 V (1/3
 1336  1336                      ;               bias: 5.25 V; 1/4 bias: setting prohibited) */
 1337  1337                      ; line   152 : 
 1338  1338                      ; line   153 : /* 
 1339  1339                      ; line   154 :     LCD input switch control register (ISCLCD)
 1340  1340                      ; line   155 : */
 1341  1341                      ; line   156 : /* VL3/P125 pin schmitt trigger buffer control (ISCVL3) */
 1342  1342                      ; line   157 : #define _02_LCD_VL3_BUFFER_VALID          (0x02U) /* VL3/P125 pi
 1343  1343                      ;              n buffer control valid */
 1344  1344                      ; line   158 : #define _00_LCD_VL3_BUFFER_INVALID        (0x00U) /* VL3/P125 pi
 1345  1345                      ;              n buffer control invalid */
 1346  1346                      ; line   159 : /* CAPL/P126, CAPH/P127 pins schmitt trigger buffer control (ISC
 1347  1347                      ;              CAP) */
 1348  1348                      ; line   160 : #define _01_LCD_CAPLH_BUFFER_VALID        (0x01U) /* CAPL/P126, 
 1349  1349                      ;              CAPH/P127 pins buffer control valid */
 1350  1350                      ; line   161 : #define _00_LCD_CAPLH_BUFFER_INVALID      (0x00U) /* CAPL/P126, 
 1351  1351                      ;              CAPH/P127 pins buffer control invalid */
 1352  1352                      ; line   162 : 
 1353  1353                      ; line   163 : /***************************************************************
 1354  1354                      ;              ********************************************************
 1355  1355                      ; line   164 : Macro definitions
 1356  1356                      ; line   165 : ****************************************************************
 1357  1357                      ;              *******************************************************/
 1358  1358                      ; line   166 : #define LCD_VOLTAGE_WAITTIME              (0x30D40U) /* capacito
 1359  1359                      ;              r split wait time (100 ms) */
 1360  1360                      ; line   167 : 
 1361  1361                      ; line   168 : /***************************************************************
 1362  1362                      ;              ********************************************************
 1363  1363                      ; line   169 : Typedef definitions
 1364  1364                      ; line   170 : ****************************************************************
 1365  1365                      ;              *******************************************************/
 1366  1366                      ; line   171 : 
 1367  1367                      ; line   172 : /***************************************************************
 1368  1368                      ;              ********************************************************
 1369  1369                      ; line   173 : Global functions
 1370  1370                      ; line   174 : ****************************************************************
 1371  1371                      ;              *******************************************************/
 1372  1372                      ; line   175 : void R_LCD_Create(void);
 1373  1373                      ; line   176 : void R_LCD_Start(void);
 1374  1374                      ; line   177 : void R_LCD_Stop(void);
 1375  1375                      ; line   178 : void R_LCD_Voltage_Off(void);
 1376  1376                      ; line   179 : 
 1377  1377                      ; line   180 : /* Start user code for function. Do not edit comment generated h
 1378  1378                      ;              ere */
 1379  1379                      ; line   181 : void R_LCD_Voltage_On(void);
 1380  1380                      ; line     1 : /***************************************************************
 1381  1381                      ;              ********************************************************
 1382  1382                      ; line     2 : * DISCLAIMER
 1383  1383                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
 1384  1384                      ;              nd is only 
 1385  1385                      ; line     4 : * intended for use with Renesas products. No other uses are auth
 1386  1386                      ;              orized. This 
 1387  1387                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
 1388  1388                      ;              otected under 
 1389  1389                      ; line     6 : * all applicable laws, including copyright laws.
 1390  1390                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
 1391  1391                      ;              IES REGARDING 
 1392  1392                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
 1393  1393                      ;              G BUT NOT 
 1394  1394                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
 1395  1395                      ;              ULAR PURPOSE 
 1396  1396                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
 1397  1397                      ;              AIMED.
 1398  1398                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
 1399  1399                      ;               RENESAS 
 1400  1400                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
 1401  1401                      ;              ALL BE LIABLE 
 1402  1402                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
 1403  1403                      ;               DAMAGES FOR 
 1404  1404                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
 1405  1405                      ;              FILIATES HAVE 
 1406  1406                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 1407  1407                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
 1408  1408                      ;               this software 
 1409  1409                      ; line    17 : * and to discontinue the availability of this software.  By usin
 1410  1410                      ;              g this software, 
 1411  1411                      ; line    18 : * you agree to the additional terms and conditions found by acce
 1412  1412                      ;              ssing the 
 1413  1413                      ; line    19 : * following link:
 1414  1414                      ; line    20 : * http://www.renesas.com/disclaimer
 1415  1415                      ; line    21 : *
 1416  1416                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
 1417  1417                      ;               reserved.
 1418  1418                      ; line    23 : ****************************************************************
 1419  1419                      ;              *******************************************************/
 1420  1420                      ; line    24 : 
 1421  1421                      ; line    25 : /***************************************************************
 1422  1422                      ;              ********************************************************
 1423  1423                      ; line    26 : * File Name    : lcd_panel.h
 1424  1424                      ; line    27 : * Version      : 1.00
 1425  1425                      ; line    28 : * Device(s)    : R5F10WMG
 1426  1426                      ; line    29 : * Tool-Chain   : CA78K0R
 1427  1427                      ; line    30 : * Description  : This file contains functions and definitions us
 1428  1428                      ;              ed in the lcd_panel.c file.
 1429  1429                      ; line    31 : * Creation Date: 08/10/2013
 1430  1430                      ; line    32 : ****************************************************************
 1431  1431                      ;              *******************************************************/
 1432  1432                      ; line    33 : 
 1433  1433                      ; line    34 : #ifndef LCD_PANEL_H
 1434  1434                      ; line    35 : #define LCD_PANEL_H
 1435  1435                      ; line    36 : 
 1436  1436                      ; line    37 : /***************************************************************
 1437  1437                      ;              ********************************************************
 1438  1438                      ; line    38 : Includes <System Includes> , �Project Includes
 1439  1439                      ; line    39 : ****************************************************************
 1440  1440                      ;              *******************************************************/
 1441  1441                      ; line    40 : 
 1442  1442                      ; line    41 : /***************************************************************
 1443  1443                      ;              ********************************************************
 1444  1444                      ; line    42 : Macro Definitions
 1445  1445                      ; line    43 : ****************************************************************
 1446  1446                      ;              *******************************************************/
 1447  1447                      ; line    44 : /* Set to ensure base delay */
 1448  1448                      ; line    45 : #define PANEL_DELAY_TIMING     0x05
 1449  1449                      ; line    46 : 
 1450  1450                      ; line    47 : /*  */
 1451  1451                      ; line    48 : #define ENABLE_SW2_SW3         0u
 1452  1452                      ; line    49 : #define DISABLE_SW2_SW3        1u
 1453  1453                      ; line    50 : #define DISABLE_UART           (0u)
 1454  1454                      ; line    51 : #define ENABLE_UART            (1u)
 1455  1455                      ; line    52 : #define JUMPER_SET_SEG         0x60u
 1456  1456                      ; line    53 : 
 1457  1457                      ; line    54 : /* Unsupported Segments can be Controlled by the RSK when the un
 1458  1458                      ;              connected 
 1459  1459                      ; line    55 :    pins are connected to the RSK. Set the correct pin addresses 
 1460  1460                      ;              to the 
 1461  1461                      ; line    56 :    #defines below. */
 1462  1462                      ; line    57 : #define Aux_pin5               0xFFFFu
 1463  1463                      ; line    58 : #define Aux_pin6               0xFFFFu
 1464  1464                      ; line    59 : #define Aux_pin47              0xFFFFu
 1465  1465                      ; line    60 : #define Aux_pin48              0xFFFFu
 1466  1466                      ; line    61 : 
 1467  1467                      ; line    62 : /* Use the ROM area to indicate that a data pointer is not to be
 1468  1468                      ;               used */
 1469  1469                      ; line    63 : #define PDL_NO_PTR            (uint8_t * )0xFFFFu
 1470  1470                      ; line    64 : 
 1471  1471                      ; line    65 : /* Define Section Names */
 1472  1472                      ; line    66 : #define EMPTY                  0
 1473  1473                      ; line    67 : #define SECT1                 '1'
 1474  1474                      ; line    68 : #define SECT2                 '2'
 1475  1475                      ; line    69 : #define SECT3                 '3'
 1476  1476                      ; line    70 : #define SECT4                 '4'
 1477  1477                      ; line    71 : #define CLEAR                  0x23
 1478  1478                      ; line    72 : #define ISOTEST                0x2A
 1479  1479                      ; line    73 : 
 1480  1480                      ; line    74 : #define PANEL_LCD_LINE1       '3'
 1481  1481                      ; line    75 : #define PANEL_LCD_LINE2       '1'
 1482  1482                      ; line    76 : #define PANEL_LCD_LINE3       '2'
 1483  1483                      ; line    77 : #define PANEL_LCD_SYMBOL      '4'
 1484  1484                      ; line    78 : 
 1485  1485                      ; line    79 : /* Define Symbol Names */
 1486  1486                      ; line    80 : #define LCD_HEAT_ON            0x3131u
 1487  1487                      ; line    81 : #define LCD_HEAT_OFF           0x3130u
 1488  1488                      ; line    82 : #define LCD_FAN_ON             0x3231u
 1489  1489                      ; line    83 : #define LCD_FAN_OFF            0x3230u
 1490  1490                      ; line    84 : #define LCD_ZONE_ON            0x3331u
 1491  1491                      ; line    85 : #define LCD_ZONE_OFF           0x3330u
 1492  1492                      ; line    86 : #define LCD_MGML_ON            0x3431u
 1493  1493                      ; line    87 : #define LCD_MGML_OFF           0x3430u
 1494  1494                      ; line    88 : #define LCD_MMHG_ON            0x3531u
 1495  1495                      ; line    89 : #define LCD_MMHG_OFF           0x3530u
 1496  1496                      ; line    90 : #define LCD_VOLTS_ON           0x3631u
 1497  1497                      ; line    91 : #define LCD_VOLTS_OFF          0x3630u
 1498  1498                      ; line    92 : #define LCD_HEART_ON           0x3731u
 1499  1499                      ; line    93 : #define LCD_HEART_OFF          0x3730u
 1500  1500                      ; line    94 : #define LCD_DEGREESC_ON        0x3831u
 1501  1501                      ; line    95 : #define LCD_DEGREESC_OFF       0x3830u
 1502  1502                      ; line    96 : #define LCD_DEGREESF_ON        0x3931u
 1503  1503                      ; line    97 : #define LCD_DEGREESF_OFF       0x3930u
 1504  1504                      ; line    98 : #define LCD_ALARM_ON           0x4131u
 1505  1505                      ; line    99 : #define LCD_ALARM_OFF          0x4130u
 1506  1506                      ; line   100 : #define LCD_ALARM_ON_1         0x6131u
 1507  1507                      ; line   101 : #define LCD_ALARM_OFF_1        0x6130u
 1508  1508                      ; line   102 : #define LCD_AM_ON              0x4231u
 1509  1509                      ; line   103 : #define LCD_AM_OFF             0x4230u
 1510  1510                      ; line   104 : #define LCD_AM_ON_1            0x6231u
 1511  1511                      ; line   105 : #define LCD_AM_OFF_1           0x6230u
 1512  1512                      ; line   106 : #define LCD_PM_ON              0x4331u
 1513  1513                      ; line   107 : #define LCD_PM_OFF             0x4330u
 1514  1514                      ; line   108 : #define LCD_PM_ON_1            0x6331u
 1515  1515                      ; line   109 : #define LCD_PM_OFF_1           0x6330u
 1516  1516                      ; line   110 : #define LCD_R_LOGO_ON          0x4431u
 1517  1517                      ; line   111 : #define LCD_R_LOGO_OFF         0x4430u
 1518  1518                      ; line   112 : #define LCD_R_LOGO_ON_1        0x6431u
 1519  1519                      ; line   113 : #define LCD_R_LOGO_OFF_1       0x6430u
 1520  1520                      ; line   114 : 
 1521  1521                      ; line   115 : /***************************************************************
 1522  1522                      ;              ********************************************************
 1523  1523                      ; line   116 : Type definitions
 1524  1524                      ; line   117 : ****************************************************************
 1525  1525                      ;              *******************************************************/
 1526  1526                      ; line   118 : /* Define Map Structure Used */
 1527  1527                      ; line   119 : typedef union LCD_MAP
 1528  1528                      ; line   120 : {    
 1529  1529                      ; line   121 :     int32_t WORD;
 1530  1530                      ; line   122 :     
 1531  1531                      ; line   123 :     struct
 1532  1532                      ; line   124 :     {
 1533  1533                      ; line   125 :         int8_t ONE   : 4;
 1534  1534                      ; line   126 :         int8_t TWO   : 4;
 1535  1535                      ; line   127 :         int8_t THREE : 4;
 1536  1536                      ; line   128 :         int8_t FOUR  : 4;
 1537  1537                      ; line   129 :     } BYTE;
 1538  1538                      ; line   130 : } LCDMAP;
 1539  1539                      ; line   131 : 
 1540  1540                      ; line   132 : /***************************************************************
 1541  1541                      ;              ********************************************************
 1542  1542                      ; line   133 : Function Prototypes
 1543  1543                      ; line   134 : ****************************************************************
 1544  1544                      ;              *******************************************************/
 1545  1545                      ; line   135 : /* Clears the screen by the next LCD frame duration */
 1546  1546                      ; line   136 : void Clear_Display (void);
 1547  1547                      ; line   137 : 
 1548  1548                      ; line   138 : /* Prepares the LCD Panel for use */
 1549  1549                      ; line   139 : void Init_Display_Panel (void);
 1550  1550                      ; line   140 : 
 1551  1551                      ; line   141 : /* Disables the LCD Peripheral */
 1552  1552                      ; line   142 : void Power_Off_Display(void);
 1553  1553                      ; line   143 : 
 1554  1554                      ; line   144 : /* Maps the character to a segment pattern, 
 1555  1555                      ; line   145 :    to be displayed on Section A of the LCD panel */
 1556  1556                      ; line   146 : void SECTA_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 1557  1557                      ;              ;
 1558  1558                      ; line   147 : 
 1559  1559                      ; line   148 : /* Maps the character to a segment pattern, 
 1560  1560                      ; line   149 :    to be displayed on Section B of the LCD panel */
 1561  1561                      ; line   150 : void SECTB_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 1562  1562                      ;              ;
 1563  1563                      ; line   151 : 
 1564  1564                      ; line   152 : /* Maps the character to a segment pattern, 
 1565  1565                      ; line   153 :    to be displayed on Section C of the LCD panel */
 1566  1566                      ; line   154 : void SECTC_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 1567  1567                      ;              ;
 1568  1568                      ; line   155 : 
 1569  1569                      ; line   156 : /* Maps the character to a segment pattern, 
 1570  1570                      ; line   157 :    to be displayed on Section D of the LCD panel */
 1571  1571                      ; line   158 : void SECTD_Glyph_Map (const uint8_t  level);
 1572  1572                      ; line   159 : 
 1573  1573                      ; line   160 : /* Maps the character to a segment pattern, 
 1574  1574                      ; line   161 :    to be displayed on Section E of the LCD panel */
 1575  1575                      ; line   162 : void SECTE_Glyph_Map (const uint16_t  level);
 1576  1576                      ; line   163 : 
 1577  1577                      ; line   164 : /* Maps the character to a segment pattern, 
 1578  1578                      ; line   165 :    to be displayed on Section F of the LCD panel */
 1579  1579                      ; line   166 : void SECTF_Glyph_Map (const uint8_t  day);
 1580  1580                      ; line   167 : 
 1581  1581                      ; line   168 : /* Turns on/off LCD Panel Symbols */
 1582  1582                      ; line   169 : int8_t Symbol_Map (const uint16_t  input);
 1583  1583                      ; line   170 : 
 1584  1584                      ; line   171 : /* Initialises the glyph-segment maps used to display letters, 
 1585  1585                      ; line   172 :    symbols and numbers */
 1586  1586                      ; line   173 : void Init_Maps (void);
 1587  1587                      ; line   174 : 
 1588  1588                      ; line   175 : /* Validates the input for the Update_Display */
 1589  1589                      ; line   176 : int16_t Validate_Input (const uint8_t input, uint8_t * const out
 1590  1590                      ;              put);
 1591  1591                      ; line   177 : 
 1592  1592                      ; line   178 : /* Turn on RENESAS logo */
 1593  1593                      ; line   179 : void set_logo (void);
 1594  1594                      ; line     1 : /***************************************************************
 1595  1595                      ;              ********************************************************
 1596  1596                      ; line     2 : * DISCLAIMER
 1597  1597                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
 1598  1598                      ;              nd is only 
 1599  1599                      ; line     4 : * intended for use with Renesas products. No other uses are auth
 1600  1600                      ;              orized. This 
 1601  1601                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
 1602  1602                      ;              otected under 
 1603  1603                      ; line     6 : * all applicable laws, including copyright laws.
 1604  1604                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
 1605  1605                      ;              IES REGARDING 
 1606  1606                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
 1607  1607                      ;              G BUT NOT 
 1608  1608                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
 1609  1609                      ;              ULAR PURPOSE 
 1610  1610                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
 1611  1611                      ;              AIMED.
 1612  1612                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
 1613  1613                      ;               RENESAS 
 1614  1614                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
 1615  1615                      ;              ALL BE LIABLE 
 1616  1616                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
 1617  1617                      ;               DAMAGES FOR 
 1618  1618                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
 1619  1619                      ;              FILIATES HAVE 
 1620  1620                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 1621  1621                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
 1622  1622                      ;               this software 
 1623  1623                      ; line    17 : * and to discontinue the availability of this software.  By usin
 1624  1624                      ;              g this software, 
 1625  1625                      ; line    18 : * you agree to the additional terms and conditions found by acce
 1626  1626                      ;              ssing the 
 1627  1627                      ; line    19 : * following link:
 1628  1628                      ; line    20 : * http://www.renesas.com/disclaimer
 1629  1629                      ; line    21 : *
 1630  1630                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
 1631  1631                      ;               reserved.
 1632  1632                      ; line    23 : ****************************************************************
 1633  1633                      ;              *******************************************************/
 1634  1634                      ; line    24 : 
 1635  1635                      ; line    25 : /***************************************************************
 1636  1636                      ;              ********************************************************
 1637  1637                      ; line    26 : * File Name    : r_cg_port.h
 1638  1638                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
 1639  1639                      ;              ]
 1640  1640                      ; line    28 : * Device(s)    : R5F10WMG
 1641  1641                      ; line    29 : * Tool-Chain   : CA78K0R
 1642  1642                      ; line    30 : * Description  : This file implements device driver for Port mod
 1643  1643                      ;              ule.
 1644  1644                      ; line    31 : * Creation Date: 05-Jun-21
 1645  1645                      ; line    32 : ****************************************************************
 1646  1646                      ;              *******************************************************/
 1647  1647                      ; line    33 : #ifndef PORT_H
 1648  1648                      ; line    34 : #define PORT_H
 1649  1649                      ; line    35 : 
 1650  1650                      ; line    36 : /***************************************************************
 1651  1651                      ;              ********************************************************
 1652  1652                      ; line    37 : Macro definitions (Register bit)
 1653  1653                      ; line    38 : ****************************************************************
 1654  1654                      ;              *******************************************************/
 1655  1655                      ; line    39 : /*
 1656  1656                      ; line    40 :     Port Mode Register (PMm)
 1657  1657                      ; line    41 : */
 1658  1658                      ; line    42 : /* Pmn pin I/O mode selection (PMm7 - PMm0) */
 1659  1659                      ; line    43 : #define _01_PMn0_NOT_USE        (0x01U) /* not use Pn0 as digita
 1660  1660                      ;              l I/O */
 1661  1661                      ; line    44 : #define _01_PMn0_MODE_INPUT     (0x01U) /* use Pn0 as input mode
 1662  1662                      ;               */
 1663  1663                      ; line    45 : #define _00_PMn0_MODE_OUTPUT    (0x00U) /* use Pn0 as output mod
 1664  1664                      ;              e */
 1665  1665                      ; line    46 : #define _02_PMn1_NOT_USE        (0x02U) /* not use Pn1 as digita
 1666  1666                      ;              l I/O */
 1667  1667                      ; line    47 : #define _02_PMn1_MODE_INPUT     (0x02U) /* use Pn1 as input mode
 1668  1668                      ;               */
 1669  1669                      ; line    48 : #define _00_PMn1_MODE_OUTPUT    (0x00U) /* use Pn1 as output mod
 1670  1670                      ;              e */
 1671  1671                      ; line    49 : #define _04_PMn2_NOT_USE        (0x04U) /* not use Pn2 as digita
 1672  1672                      ;              l I/O */
 1673  1673                      ; line    50 : #define _04_PMn2_MODE_INPUT     (0x04U) /* use Pn2 as input mode
 1674  1674                      ;               */
 1675  1675                      ; line    51 : #define _00_PMn2_MODE_OUTPUT    (0x00U) /* use Pn2 as output mod
 1676  1676                      ;              e */
 1677  1677                      ; line    52 : #define _08_PMn3_NOT_USE        (0x08U) /* not use Pn3 as digita
 1678  1678                      ;              l I/O */
 1679  1679                      ; line    53 : #define _08_PMn3_MODE_INPUT     (0x08U) /* use Pn3 as input mode
 1680  1680                      ;               */
 1681  1681                      ; line    54 : #define _00_PMn3_MODE_OUTPUT    (0x00U) /* use Pn3 as output mod
 1682  1682                      ;              e */
 1683  1683                      ; line    55 : #define _10_PMn4_NOT_USE        (0x10U) /* not use Pn4 as digita
 1684  1684                      ;              l I/O */
 1685  1685                      ; line    56 : #define _10_PMn4_MODE_INPUT     (0x10U) /* use Pn4 as input mode
 1686  1686                      ;               */
 1687  1687                      ; line    57 : #define _00_PMn4_MODE_OUTPUT    (0x00U) /* use Pn4 as output mod
 1688  1688                      ;              e */
 1689  1689                      ; line    58 : #define _20_PMn5_NOT_USE        (0x20U) /* not use Pn5 as digita
 1690  1690                      ;              l I/O */
 1691  1691                      ; line    59 : #define _20_PMn5_MODE_INPUT     (0x20U) /* use Pn5 as input mode
 1692  1692                      ;               */
 1693  1693                      ; line    60 : #define _00_PMn5_MODE_OUTPUT    (0x00U) /* use Pn5 as output mod
 1694  1694                      ;              e */
 1695  1695                      ; line    61 : #define _40_PMn6_NOT_USE        (0x40U) /* not use Pn6 as digita
 1696  1696                      ;              l I/O */
 1697  1697                      ; line    62 : #define _40_PMn6_MODE_INPUT     (0x40U) /* use Pn6 as input mode
 1698  1698                      ;               */
 1699  1699                      ; line    63 : #define _00_PMn6_MODE_OUTPUT    (0x00U) /* use Pn6 as output mod
 1700  1700                      ;              e */
 1701  1701                      ; line    64 : #define _80_PMn7_NOT_USE        (0x80U) /* not use Pn7 as digita
 1702  1702                      ;              l I/O */
 1703  1703                      ; line    65 : #define _80_PMn7_MODE_INPUT     (0x80U) /* use Pn7 as input mode
 1704  1704                      ;               */
 1705  1705                      ; line    66 : #define _00_PMn7_MODE_OUTPUT    (0x00U) /* use Pn7 as output mod
 1706  1706                      ;              e */
 1707  1707                      ; line    67 : 
 1708  1708                      ; line    68 : /*
 1709  1709                      ; line    69 :     Port Register (Pm)
 1710  1710                      ; line    70 : */
 1711  1711                      ; line    71 : /* Pmn pin data (Pm0 to Pm7) */
 1712  1712                      ; line    72 : #define _00_Pn0_OUTPUT_0        (0x00U) /* Pn0 output 0 */
 1713  1713                      ; line    73 : #define _01_Pn0_OUTPUT_1        (0x01U) /* Pn0 output 1 */
 1714  1714                      ; line    74 : #define _00_Pn1_OUTPUT_0        (0x00U) /* Pn1 output 0 */
 1715  1715                      ; line    75 : #define _02_Pn1_OUTPUT_1        (0x02U) /* Pn1 output 1 */
 1716  1716                      ; line    76 : #define _00_Pn2_OUTPUT_0        (0x00U) /* Pn2 output 0 */
 1717  1717                      ; line    77 : #define _04_Pn2_OUTPUT_1        (0x04U) /* Pn2 output 1 */
 1718  1718                      ; line    78 : #define _00_Pn3_OUTPUT_0        (0x00U) /* Pn3 output 0 */
 1719  1719                      ; line    79 : #define _08_Pn3_OUTPUT_1        (0x08U) /* Pn3 output 1 */
 1720  1720                      ; line    80 : #define _00_Pn4_OUTPUT_0        (0x00U) /* Pn4 output 0 */
 1721  1721                      ; line    81 : #define _10_Pn4_OUTPUT_1        (0x10U) /* Pn4 output 1 */
 1722  1722                      ; line    82 : #define _00_Pn5_OUTPUT_0        (0x00U) /* Pn5 output 0 */
 1723  1723                      ; line    83 : #define _20_Pn5_OUTPUT_1        (0x20U) /* Pn5 output 1 */
 1724  1724                      ; line    84 : #define _00_Pn6_OUTPUT_0        (0x00U) /* Pn6 output 0 */
 1725  1725                      ; line    85 : #define _40_Pn6_OUTPUT_1        (0x40U) /* Pn6 output 1 */
 1726  1726                      ; line    86 : #define _00_Pn7_OUTPUT_0        (0x00U) /* Pn7 output 0 */
 1727  1727                      ; line    87 : #define _80_Pn7_OUTPUT_1        (0x80U) /* Pn7 output 1 */
 1728  1728                      ; line    88 : 
 1729  1729                      ; line    89 : /*
 1730  1730                      ; line    90 :     Pull-up Resistor Option Register (PUm)
 1731  1731                      ; line    91 : */
 1732  1732                      ; line    92 : /* Pmn pin on-chip pull-up resistor selection (PUmn) */
 1733  1733                      ; line    93 : #define _00_PUn0_PULLUP_OFF     (0x00U) /* Pn0 pull-up resistor 
 1734  1734                      ;              not connected */
 1735  1735                      ; line    94 : #define _01_PUn0_PULLUP_ON      (0x01U) /* Pn0 pull-up resistor 
 1736  1736                      ;              connected */
 1737  1737                      ; line    95 : #define _00_PUn1_PULLUP_OFF     (0x00U) /* Pn1 pull-up resistor 
 1738  1738                      ;              not connected */
 1739  1739                      ; line    96 : #define _02_PUn1_PULLUP_ON      (0x02U) /* Pn1 pull-up resistor 
 1740  1740                      ;              connected */
 1741  1741                      ; line    97 : #define _00_PUn2_PULLUP_OFF     (0x00U) /* Pn2 Pull-up resistor 
 1742  1742                      ;              not connected */
 1743  1743                      ; line    98 : #define _04_PUn2_PULLUP_ON      (0x04U) /* Pn2 pull-up resistor 
 1744  1744                      ;              connected */
 1745  1745                      ; line    99 : #define _00_PUn3_PULLUP_OFF     (0x00U) /* Pn3 pull-up resistor 
 1746  1746                      ;              not connected */
 1747  1747                      ; line   100 : #define _08_PUn3_PULLUP_ON      (0x08U) /* Pn3 pull-up resistor 
 1748  1748                      ;              connected */
 1749  1749                      ; line   101 : #define _00_PUn4_PULLUP_OFF     (0x00U) /* Pn4 pull-up resistor 
 1750  1750                      ;              not connected */
 1751  1751                      ; line   102 : #define _10_PUn4_PULLUP_ON      (0x10U) /* Pn4 pull-up resistor 
 1752  1752                      ;              connected */
 1753  1753                      ; line   103 : #define _00_PUn5_PULLUP_OFF     (0x00U) /* Pn5 pull-up resistor 
 1754  1754                      ;              not connected */
 1755  1755                      ; line   104 : #define _20_PUn5_PULLUP_ON      (0x20U) /* Pn5 pull-up resistor 
 1756  1756                      ;              connected */
 1757  1757                      ; line   105 : #define _00_PUn6_PULLUP_OFF     (0x00U) /* Pn6 pull-up resistor 
 1758  1758                      ;              not connected */
 1759  1759                      ; line   106 : #define _40_PUn6_PULLUP_ON      (0x40U) /* Pn6 pull-up resistor 
 1760  1760                      ;              connected */
 1761  1761                      ; line   107 : #define _00_PUn7_PULLUP_OFF     (0x00U) /* Pn7 pull-up resistor 
 1762  1762                      ;              not connected */
 1763  1763                      ; line   108 : #define _80_PUn7_PULLUP_ON      (0x80U) /* Pn7 pull-up resistor 
 1764  1764                      ;              connected */
 1765  1765                      ; line   109 : 
 1766  1766                      ; line   110 : /*
 1767  1767                      ; line   111 :     Port Input Mode Register (PIMm)
 1768  1768                      ; line   112 : */
 1769  1769                      ; line   113 : /* Pmn pin input buffer selection (PIMmn) */
 1770  1770                      ; line   114 : #define _00_PIMn3_TTL_OFF       (0x00U) /* set Pn3 normal input 
 1771  1771                      ;              buffer */
 1772  1772                      ; line   115 : #define _08_PIMn3_TTL_ON        (0x08U) /* set Pn3 TTL input buf
 1773  1773                      ;              fer */
 1774  1774                      ; line   116 : #define _00_PIMn4_TTL_OFF       (0x00U) /* set Pn4 normal input 
 1775  1775                      ;              buffer */
 1776  1776                      ; line   117 : #define _10_PIMn4_TTL_ON        (0x10U) /* set Pn4 TTL input buf
 1777  1777                      ;              fer */
 1778  1778                      ; line   118 : #define _00_PIMn5_TTL_OFF       (0x00U) /* set Pn5 normal input 
 1779  1779                      ;              buffer */
 1780  1780                      ; line   119 : #define _20_PIMn5_TTL_ON        (0x20U) /* set Pn5 TTL input buf
 1781  1781                      ;              fer */
 1782  1782                      ; line   120 : #define _00_PIMn6_TTL_OFF       (0x00U) /* set Pn6 normal input 
 1783  1783                      ;              buffer */
 1784  1784                      ; line   121 : #define _40_PIMn6_TTL_ON        (0x40U) /* set Pn6 TTL input buf
 1785  1785                      ;              fer */
 1786  1786                      ; line   122 : #define _00_PIMn7_TTL_OFF       (0x00U) /* set Pn7 normal input 
 1787  1787                      ;              buffer */
 1788  1788                      ; line   123 : #define _80_PIMn7_TTL_ON        (0x80U) /* set Pn7 TTL input buf
 1789  1789                      ;              fer */
 1790  1790                      ; line   124 : 
 1791  1791                      ; line   125 : /*
 1792  1792                      ; line   126 :     Port Output Mode Register (POMm)
 1793  1793                      ; line   127 : */
 1794  1794                      ; line   128 : /* Pmn pin output mode selection (POMmn) */
 1795  1795                      ; line   129 : #define _00_POMn0_NCH_OFF       (0x00U) /* set Pn0 output normal
 1796  1796                      ;               mode */
 1797  1797                      ; line   130 : #define _01_POMn0_NCH_ON        (0x01U) /* set Pn0 output N-ch o
 1798  1798                      ;              pen-drain mode */
 1799  1799                      ; line   131 : #define _00_POMn2_NCH_OFF       (0x00U) /* set Pn2 output normal
 1800  1800                      ;               mode */
 1801  1801                      ; line   132 : #define _04_POMn2_NCH_ON        (0x04U) /* set Pn2 output N-ch o
 1802  1802                      ;              pen-drain mode */
 1803  1803                      ; line   133 : #define _00_POMn3_NCH_OFF       (0x00U) /* set Pn3 output normal
 1804  1804                      ;               mode */
 1805  1805                      ; line   134 : #define _08_POMn3_NCH_ON        (0x08U) /* set Pn3 output N-ch o
 1806  1806                      ;              pen-drain mode */
 1807  1807                      ; line   135 : #define _00_POMn4_NCH_OFF       (0x00U) /* set Pn4 output normal
 1808  1808                      ;               mode */
 1809  1809                      ; line   136 : #define _10_POMn4_NCH_ON        (0x10U) /* set Pn4 output N-ch o
 1810  1810                      ;              pen-drain mode */
 1811  1811                      ; line   137 : #define _00_POMn5_NCH_OFF       (0x00U) /* set Pn5 output normal
 1812  1812                      ;               mode */
 1813  1813                      ; line   138 : #define _20_POMn5_NCH_ON        (0x20U) /* set Pn5 output N-ch o
 1814  1814                      ;              pen-drain mode */
 1815  1815                      ; line   139 : #define _00_POMn6_NCH_OFF       (0x00U) /* set Pn6 output normal
 1816  1816                      ;               mode */
 1817  1817                      ; line   140 : #define _40_POMn6_NCH_ON        (0x40U) /* set Pn6 output N-ch o
 1818  1818                      ;              pen-drain mode */
 1819  1819                      ; line   141 : #define _00_POMn7_NCH_OFF       (0x00U) /* set Pn7 output normal
 1820  1820                      ;               mode */
 1821  1821                      ; line   142 : #define _80_POMn7_NCH_ON        (0x80U) /* set Pn7 output N-ch o
 1822  1822                      ;              pen-drain mode */
 1823  1823                      ; line   143 : 
 1824  1824                      ; line   144 : /*
 1825  1825                      ; line   145 :     Port Operation Mode Register (PMCm)
 1826  1826                      ; line   146 : */
 1827  1827                      ; line   147 : /* Pmn pin digital input buffer selection (PMCmn) */
 1828  1828                      ; line   148 : #define _01_PMCn0_NOT_USE       (0x01U) /* not use Pn0 digital i
 1829  1829                      ;              nput */
 1830  1830                      ; line   149 : #define _00_PMCn0_DI_ON         (0x00U) /* enable Pn0 digital in
 1831  1831                      ;              put */
 1832  1832                      ; line   150 : #define _02_PMCn1_NOT_USE       (0x02U) /* not use Pn1 digital i
 1833  1833                      ;              nput */
 1834  1834                      ; line   151 : #define _00_PMCn1_DI_ON         (0x00U) /* enable Pn1 digital in
 1835  1835                      ;              put */
 1836  1836                      ; line   152 : #define _04_PMCn2_NOT_USE       (0x04U) /* not use Pn2 digital i
 1837  1837                      ;              nput */
 1838  1838                      ; line   153 : #define _00_PMCn2_DI_ON         (0x00U) /* enable Pn2 digital in
 1839  1839                      ;              put */
 1840  1840                      ; line   154 : #define _08_PMCn3_NOT_USE       (0x08U) /* not use Pn3 digital i
 1841  1841                      ;              nput */
 1842  1842                      ; line   155 : #define _00_PMCn3_DI_ON         (0x00U) /* enable Pn3 digital in
 1843  1843                      ;              put */
 1844  1844                      ; line   156 : #define _10_PMCn4_NOT_USE       (0x10U) /* not use Pn4 digital i
 1845  1845                      ;              nput */
 1846  1846                      ; line   157 : #define _00_PMCn4_DI_ON         (0x00U) /* enable Pn4 digital in
 1847  1847                      ;              put */
 1848  1848                      ; line   158 : #define _20_PMCn5_NOT_USE       (0x20U) /* not use Pn5 digital i
 1849  1849                      ;              nput */
 1850  1850                      ; line   159 : #define _00_PMCn5_DI_ON         (0x00U) /* enable Pn5 digital in
 1851  1851                      ;              put */
 1852  1852                      ; line   160 : #define _40_PMCn6_NOT_USE       (0x40U) /* not use Pn6 digital i
 1853  1853                      ;              nput */
 1854  1854                      ; line   161 : #define _00_PMCn6_DI_ON         (0x00U) /* enable Pn6 digital in
 1855  1855                      ;              put */
 1856  1856                      ; line   162 : #define _80_PMCn7_NOT_USE       (0x80U) /* not use Pn7 digital i
 1857  1857                      ;              nput */
 1858  1858                      ; line   163 : #define _00_PMCn7_DI_ON         (0x00U) /* enable Pn7 digital in
 1859  1859                      ;              put */
 1860  1860                      ; line   164 : 
 1861  1861                      ; line   165 : /*
 1862  1862                      ; line   166 :     AD port configuration register (ADPC)
 1863  1863                      ; line   167 : */
 1864  1864                      ; line   168 : #define _00_ADPC_DI_OFF         (0x00U) /* use P21, P20 as analo
 1865  1865                      ;              g input */
 1866  1866                      ; line   169 : #define _01_ADPC_DI_ON          (0x01U) /* use P21, P20 as digit
 1867  1867                      ;              al input */
 1868  1868                      ; line   170 : #define _02_ADPC_DI_ON          (0x02U) /* use P20 as digital in
 1869  1869                      ;              put */
 1870  1870                      ; line   171 : 
 1871  1871                      ; line   172 : /*
 1872  1872                      ; line   173 :     LCD port function registers 00 (PFSEG00)
 1873  1873                      ; line   174 : */
 1874  1874                      ; line   175 : /* Port (other than segment output)/segment outputs specificatio
 1875  1875                      ;              n of Pmn pins (PFSEGxx) */
 1876  1876                      ; line   176 : #define _00_PFSEG04_PORT        (0x00U) /* used the P50 pin as p
 1877  1877                      ;              ort (other than segment output) */
 1878  1878                      ; line   177 : #define _10_PFSEG04_SEG         (0x10U) /* used the P50 pin as s
 1879  1879                      ;              egment output */
 1880  1880                      ; line   178 : #define _00_PFSEG05_PORT        (0x00U) /* used the P51 pin as p
 1881  1881                      ;              ort (other than segment output) */
 1882  1882                      ; line   179 : #define _20_PFSEG05_SEG         (0x20U) /* used the P51 pin as s
 1883  1883                      ;              egment output */
 1884  1884                      ; line   180 : #define _00_PFSEG06_PORT        (0x00U) /* used the P52 pin as p
 1885  1885                      ;              ort (other than segment output) */
 1886  1886                      ; line   181 : #define _40_PFSEG06_SEG         (0x40U) /* used the P52 pin as s
 1887  1887                      ;              egment output */
 1888  1888                      ; line   182 : #define _00_PFSEG07_PORT        (0x00U) /* used the P53 pin as p
 1889  1889                      ;              ort (other than segment output) */
 1890  1890                      ; line   183 : #define _80_PFSEG07_SEG         (0x80U) /* used the P53 pin as s
 1891  1891                      ;              egment output */
 1892  1892                      ; line   184 : 
 1893  1893                      ; line   185 : /*
 1894  1894                      ; line   186 :     LCD port function registers 01 (PFSEG01)
 1895  1895                      ; line   187 : */
 1896  1896                      ; line   188 : /* Port (other than segment output)/segment outputs specificatio
 1897  1897                      ;              n of Pmn pins (PFSEGxx) */
 1898  1898                      ; line   189 : #define _00_PFSEG08_PORT        (0x00U) /* used the P54 pin as p
 1899  1899                      ;              ort (other than segment output) */
 1900  1900                      ; line   190 : #define _01_PFSEG08_SEG         (0x01U) /* used the P54 pin as s
 1901  1901                      ;              egment output */
 1902  1902                      ; line   191 : #define _00_PFSEG09_PORT        (0x00U) /* used the P55 pin as p
 1903  1903                      ;              ort (other than segment output) */
 1904  1904                      ; line   192 : #define _02_PFSEG09_SEG         (0x02U) /* used the P55 pin as s
 1905  1905                      ;              egment output */
 1906  1906                      ; line   193 : #define _00_PFSEG10_PORT        (0x00U) /* used the P56 pin as p
 1907  1907                      ;              ort (other than segment output) */
 1908  1908                      ; line   194 : #define _04_PFSEG10_SEG         (0x04U) /* used the P56 pin as s
 1909  1909                      ;              egment output */
 1910  1910                      ; line   195 : #define _00_PFSEG11_PORT        (0x00U) /* used the P57 pin as p
 1911  1911                      ;              ort (other than segment output) */
 1912  1912                      ; line   196 : #define _08_PFSEG11_SEG         (0x08U) /* used the P57 pin as s
 1913  1913                      ;              egment output */
 1914  1914                      ; line   197 : #define _00_PFSEG12_PORT        (0x00U) /* used the P70 pin as p
 1915  1915                      ;              ort (other than segment output) */
 1916  1916                      ; line   198 : #define _10_PFSEG12_SEG         (0x10U) /* used the P70 pin as s
 1917  1917                      ;              egment output */
 1918  1918                      ; line   199 : #define _00_PFSEG13_PORT        (0x00U) /* used the P71 pin as p
 1919  1919                      ;              ort (other than segment output) */
 1920  1920                      ; line   200 : #define _20_PFSEG13_SEG         (0x20U) /* used the P71 pin as s
 1921  1921                      ;              egment output */
 1922  1922                      ; line   201 : #define _00_PFSEG14_PORT        (0x00U) /* used the P72 pin as p
 1923  1923                      ;              ort (other than segment output) */
 1924  1924                      ; line   202 : #define _40_PFSEG14_SEG         (0x40U) /* used the P72 pin as s
 1925  1925                      ;              egment output */
 1926  1926                      ; line   203 : #define _00_PFSEG15_PORT        (0x00U) /* used the P73 pin as p
 1927  1927                      ;              ort (other than segment output) */
 1928  1928                      ; line   204 : #define _80_PFSEG15_SEG         (0x80U) /* used the P73 pin as s
 1929  1929                      ;              egment output */
 1930  1930                      ; line   205 : 
 1931  1931                      ; line   206 : /*
 1932  1932                      ; line   207 :     LCD port function registers 02 (PFSEG02)
 1933  1933                      ; line   208 : */
 1934  1934                      ; line   209 : /* Port (other than segment output)/segment outputs specificatio
 1935  1935                      ;              n of Pmn pins (PFSEGxx) */
 1936  1936                      ; line   210 : #define _00_PFSEG16_PORT        (0x00U) /* used the P74 pin as p
 1937  1937                      ;              ort (other than segment output) */
 1938  1938                      ; line   211 : #define _01_PFSEG16_SEG         (0x01U) /* used the P74 pin as s
 1939  1939                      ;              egment output */
 1940  1940                      ; line   212 : #define _00_PFSEG17_PORT        (0x00U) /* used the P75 pin as p
 1941  1941                      ;              ort (other than segment output) */
 1942  1942                      ; line   213 : #define _02_PFSEG17_SEG         (0x02U) /* used the P75 pin as s
 1943  1943                      ;              egment output */
 1944  1944                      ; line   214 : #define _00_PFSEG18_PORT        (0x00U) /* used the P76 pin as p
 1945  1945                      ;              ort (other than segment output) */
 1946  1946                      ; line   215 : #define _04_PFSEG18_SEG         (0x04U) /* used the P76 pin as s
 1947  1947                      ;              egment output */
 1948  1948                      ; line   216 : #define _00_PFSEG19_PORT        (0x00U) /* used the P77 pin as p
 1949  1949                      ;              ort (other than segment output) */
 1950  1950                      ; line   217 : #define _08_PFSEG19_SEG         (0x08U) /* used the P77 pin as s
 1951  1951                      ;              egment output */
 1952  1952                      ; line   218 : #define _00_PFSEG20_PORT        (0x00U) /* used the P30 pin as p
 1953  1953                      ;              ort (other than segment output) */
 1954  1954                      ; line   219 : #define _10_PFSEG20_SEG         (0x10U) /* used the P30 pin as s
 1955  1955                      ;              egment output */
 1956  1956                      ; line   220 : #define _00_PFSEG21_PORT        (0x00U) /* used the P31 pin as p
 1957  1957                      ;              ort (other than segment output) */
 1958  1958                      ; line   221 : #define _20_PFSEG21_SEG         (0x20U) /* used the P31 pin as s
 1959  1959                      ;              egment output */
 1960  1960                      ; line   222 : #define _00_PFSEG22_PORT        (0x00U) /* used the P32 pin as p
 1961  1961                      ;              ort (other than segment output) */
 1962  1962                      ; line   223 : #define _40_PFSEG22_SEG         (0x40U) /* used the P32 pin as s
 1963  1963                      ;              egment output */
 1964  1964                      ; line   224 : #define _00_PFSEG23_PORT        (0x00U) /* used the P33 pin as p
 1965  1965                      ;              ort (other than segment output) */
 1966  1966                      ; line   225 : #define _80_PFSEG23_SEG         (0x80U) /* used the P33 pin as s
 1967  1967                      ;              egment output */
 1968  1968                      ; line   226 : 
 1969  1969                      ; line   227 : /*
 1970  1970                      ; line   228 :     LCD port function registers 03 (PFSEG03)
 1971  1971                      ; line   229 : */
 1972  1972                      ; line   230 : /* Port (other than segment output)/segment outputs specificatio
 1973  1973                      ;              n of Pmn pins (PFSEGxx) */
 1974  1974                      ; line   231 : #define _00_PFSEG24_PORT        (0x00U) /* used the P34 pin as p
 1975  1975                      ;              ort (other than segment output) */
 1976  1976                      ; line   232 : #define _01_PFSEG24_SEG         (0x01U) /* used the P34 pin as s
 1977  1977                      ;              egment output */
 1978  1978                      ; line   233 : #define _00_PFSEG25_PORT        (0x00U) /* used the P35 pin as p
 1979  1979                      ;              ort (other than segment output) */
 1980  1980                      ; line   234 : #define _02_PFSEG25_SEG         (0x02U) /* used the P35 pin as s
 1981  1981                      ;              egment output */
 1982  1982                      ; line   235 : #define _00_PFSEG26_PORT        (0x00U) /* used the P46 pin as p
 1983  1983                      ;              ort (other than segment output) */
 1984  1984                      ; line   236 : #define _08_PFSEG26_SEG         (0x08U) /* used the P46 pin as s
 1985  1985                      ;              egment output */
 1986  1986                      ; line   237 : #define _00_PFSEG27_PORT        (0x00U) /* used the P47 pin as p
 1987  1987                      ;              ort (other than segment output) */
 1988  1988                      ; line   238 : #define _10_PFSEG27_SEG         (0x10U) /* used the P47 pin as s
 1989  1989                      ;              egment output */
 1990  1990                      ; line   239 : #define _00_PFSEG28_PORT        (0x00U) /* used the P130 pin as 
 1991  1991                      ;              port (other than segment output) */
 1992  1992                      ; line   240 : #define _20_PFSEG28_SEG         (0x20U) /* used the P130 pin as 
 1993  1993                      ;              segment output */
 1994  1994                      ; line   241 : #define _00_PFSEG29_PORT        (0x00U) /* used the P22 pin as p
 1995  1995                      ;              ort (other than segment output) */
 1996  1996                      ; line   242 : #define _40_PFSEG29_SEG         (0x40U) /* used the P22 pin as s
 1997  1997                      ;              egment output */
 1998  1998                      ; line   243 : #define _00_PFSEG30_PORT        (0x00U) /* used the P23 pin as p
 1999  1999                      ;              ort (other than segment output) */
 2000  2000                      ; line   244 : #define _80_PFSEG30_SEG         (0x80U) /* used the P23 pin as s
 2001  2001                      ;              egment output */
 2002  2002                      ; line   245 : #define _04_PFDEG_DEFAULT       (0x04U) /* PFDEG default value *
 2003  2003                      ;              /
 2004  2004                      ; line   246 : 
 2005  2005                      ; line   247 : /*
 2006  2006                      ; line   248 :     LCD port function registers 04 (PFSEG04)
 2007  2007                      ; line   249 : */
 2008  2008                      ; line   250 : /* Port (other than segment output)/segment outputs specificatio
 2009  2009                      ;              n of Pmn pins (PFSEGxx) */
 2010  2010                      ; line   251 : #define _00_PFSEG31_PORT        (0x00U) /* used the P24 pin as p
 2011  2011                      ;              ort (other than segment output) */
 2012  2012                      ; line   252 : #define _01_PFSEG31_SEG         (0x01U) /* used the P24 pin as s
 2013  2013                      ;              egment output */
 2014  2014                      ; line   253 : #define _00_PFSEG32_PORT        (0x00U) /* used the P25 pin as p
 2015  2015                      ;              ort (other than segment output) */
 2016  2016                      ; line   254 : #define _02_PFSEG32_SEG         (0x02U) /* used the P25 pin as s
 2017  2017                      ;              egment output */
 2018  2018                      ; line   255 : #define _00_PFSEG33_PORT        (0x00U) /* used the P26 pin as p
 2019  2019                      ;              ort (other than segment output) */
 2020  2020                      ; line   256 : #define _04_PFSEG33_SEG         (0x04U) /* used the P26 pin as s
 2021  2021                      ;              egment output */
 2022  2022                      ; line   257 : #define _00_PFSEG34_PORT        (0x00U) /* used the P27 pin as p
 2023  2023                      ;              ort (other than segment output) */
 2024  2024                      ; line   258 : #define _08_PFSEG34_SEG         (0x08U) /* used the P27 pin as s
 2025  2025                      ;              egment output */
 2026  2026                      ; line   259 : #define _00_PFSEG35_PORT        (0x00U) /* used the P10 pin as p
 2027  2027                      ;              ort (other than segment output) */
 2028  2028                      ; line   260 : #define _10_PFSEG35_SEG         (0x10U) /* used the P10 pin as s
 2029  2029                      ;              egment output */
 2030  2030                      ; line   261 : #define _00_PFSEG36_PORT        (0x00U) /* used the P11 pin as p
 2031  2031                      ;              ort (other than segment output) */
 2032  2032                      ; line   262 : #define _20_PFSEG36_SEG         (0x20U) /* used the P11 pin as s
 2033  2033                      ;              egment output */
 2034  2034                      ; line   263 : #define _00_PFSEG37_PORT        (0x00U) /* used the P12 pin as p
 2035  2035                      ;              ort (other than segment output) */
 2036  2036                      ; line   264 : #define _40_PFSEG37_SEG         (0x40U) /* used the P12 pin as s
 2037  2037                      ;              egment output */
 2038  2038                      ; line   265 : #define _00_PFSEG38_PORT        (0x00U) /* used the P13 pin as p
 2039  2039                      ;              ort (other than segment output) */
 2040  2040                      ; line   266 : #define _80_PFSEG38_SEG         (0x80U) /* used the P13 pin as s
 2041  2041                      ;              egment output */
 2042  2042                      ; line   267 : 
 2043  2043                      ; line   268 : /*
 2044  2044                      ; line   269 :     LCD port function registers 05 (PFSEG05)
 2045  2045                      ; line   270 : */
 2046  2046                      ; line   271 : /* Port (other than segment output)/segment outputs specificatio
 2047  2047                      ;              n of Pmn pins (PFSEGxx) */
 2048  2048                      ; line   272 : #define _00_PFSEG39_PORT        (0x00U) /* used the P14 pin as p
 2049  2049                      ;              ort (other than segment output) */
 2050  2050                      ; line   273 : #define _01_PFSEG39_SEG         (0x01U) /* used the P14 pin as s
 2051  2051                      ;              egment output */
 2052  2052                      ; line   274 : #define _00_PFSEG40_PORT        (0x00U) /* used the P15 pin as p
 2053  2053                      ;              ort (other than segment output) */
 2054  2054                      ; line   275 : #define _02_PFSEG40_SEG         (0x02U) /* used the P15 pin as s
 2055  2055                      ;              egment output */
 2056  2056                      ; line   276 : #define _00_PFSEG41_PORT        (0x00U) /* used the P16 pin as p
 2057  2057                      ;              ort (other than segment output) */
 2058  2058                      ; line   277 : #define _04_PFSEG41_SEG         (0x04U) /* used the P16 pin as s
 2059  2059                      ;              egment output */
 2060  2060                      ; line   278 : #define _00_PFSEG42_PORT        (0x00U) /* used the P17 pin as p
 2061  2061                      ;              ort (other than segment output) */
 2062  2062                      ; line   279 : #define _08_PFSEG42_SEG         (0x08U) /* used the P17 pin as s
 2063  2063                      ;              egment output */
 2064  2064                      ; line   280 : #define _00_PFSEG43_PORT        (0x00U) /* used the P00 pin as p
 2065  2065                      ;              ort (other than segment output) */
 2066  2066                      ; line   281 : #define _10_PFSEG43_SEG         (0x10U) /* used the P00 pin as s
 2067  2067                      ;              egment output */
 2068  2068                      ; line   282 : #define _00_PFSEG44_PORT        (0x00U) /* used the P01 pin as p
 2069  2069                      ;              ort (other than segment output) */
 2070  2070                      ; line   283 : #define _20_PFSEG44_SEG         (0x20U) /* used the P01 pin as s
 2071  2071                      ;              egment output */
 2072  2072                      ; line   284 : #define _00_PFSEG45_PORT        (0x00U) /* used the P02 pin as p
 2073  2073                      ;              ort (other than segment output) */
 2074  2074                      ; line   285 : #define _40_PFSEG45_SEG         (0x40U) /* used the P02 pin as s
 2075  2075                      ;              egment output */
 2076  2076                      ; line   286 : #define _00_PFSEG46_PORT        (0x00U) /* used the P03 pin as p
 2077  2077                      ;              ort (other than segment output) */
 2078  2078                      ; line   287 : #define _80_PFSEG46_SEG         (0x80U) /* used the P03 pin as s
 2079  2079                      ;              egment output */
 2080  2080                      ; line   288 : 
 2081  2081                      ; line   289 : /*
 2082  2082                      ; line   290 :     LCD port function registers 06 (PFSEG06)
 2083  2083                      ; line   291 : */
 2084  2084                      ; line   292 : /* Port (other than segment output)/segment outputs specificatio
 2085  2085                      ;              n of Pmn pins (PFSEGxx) */
 2086  2086                      ; line   293 : #define _00_PFSEG47_PORT        (0x00U) /* used the P04 pin as p
 2087  2087                      ;              ort (other than segment output) */
 2088  2088                      ; line   294 : #define _01_PFSEG47_SEG         (0x01U) /* used the P04 pin as s
 2089  2089                      ;              egment output */
 2090  2090                      ; line   295 : #define _00_PFSEG48_PORT        (0x00U) /* used the P05 pin as p
 2091  2091                      ;              ort (other than segment output) */
 2092  2092                      ; line   296 : #define _02_PFSEG48_SEG         (0x02U) /* used the P05 pin as s
 2093  2093                      ;              egment output */
 2094  2094                      ; line   297 : #define _00_PFSEG49_PORT        (0x00U) /* used the P06 pin as p
 2095  2095                      ;              ort (other than segment output) */
 2096  2096                      ; line   298 : #define _04_PFSEG49_SEG         (0x04U) /* used the P06 pin as s
 2097  2097                      ;              egment output */
 2098  2098                      ; line   299 : #define _00_PFSEG50_PORT        (0x00U) /* used the P07 pin as p
 2099  2099                      ;              ort (other than segment output) */
 2100  2100                      ; line   300 : #define _08_PFSEG50_SEG         (0x08U) /* used the P07 pin as s
 2101  2101                      ;              egment output */
 2102  2102                      ; line   301 : 
 2103  2103                      ; line   302 : /*
 2104  2104                      ; line   303 :     LCD input switch control register (ISCLCD)
 2105  2105                      ; line   304 : */
 2106  2106                      ; line   305 : /* Control of schmitt trigger buffer of CAPL/P126 and CAPH/P127 
 2107  2107                      ;              pins (ISCCAP) */
 2108  2108                      ; line   306 : #define _00_ISCCAP_INVALID      (0x00U) /* makes digital input i
 2109  2109                      ;              nvalid */
 2110  2110                      ; line   307 : #define _01_ISCCAP_VALID        (0x01U) /* makes digital input v
 2111  2111                      ;              alid */
 2112  2112                      ; line   308 : /* Control of schmitt trigger buffer of VL3/P125 pin (ISCVL3) */
 2113  2113                      ; line   309 : #define _00_ISCVL3_INVALID      (0x00U) /* makes digital input i
 2114  2114                      ;              nvalid */
 2115  2115                      ; line   310 : #define _02_ISCVL3_VALID        (0x02U) /* makes digital input v
 2116  2116                      ;              alid */
 2117  2117                      ; line   311 : 
 2118  2118                      ; line   312 : /***************************************************************
 2119  2119                      ;              ********************************************************
 2120  2120                      ; line   313 : Macro definitions
 2121  2121                      ; line   314 : ****************************************************************
 2122  2122                      ;              *******************************************************/
 2123  2123                      ; line   315 : #define _C0_PM3_DEFAULT         (0xC0U) /* PM3 default value */
 2124  2124                      ; line   316 : #define _FC_PM6_DEFAULT         (0xFCU) /* PM6 default value */
 2125  2125                      ; line   317 : #define _1F_PM12_DEFAULT        (0x1FU) /* PM12 default value */
 2126  2126                      ; line   318 : #define _FE_PM13_DEFAULT        (0xFEU) /* PM13 default value */
 2127  2127                      ; line   319 : #define _F0_PMC1_DEFAULT        (0xF0U) /* PMC1 default value */
 2128  2128                      ; line   320 : #define _03_PMC2_DEFAULT        (0x03U) /* PMC2 default value */
 2129  2129                      ; line   321 : 
 2130  2130                      ; line   322 : /***************************************************************
 2131  2131                      ;              ********************************************************
 2132  2132                      ; line   323 : Typedef definitions
 2133  2133                      ; line   324 : ****************************************************************
 2134  2134                      ;              *******************************************************/
 2135  2135                      ; line   325 : 
 2136  2136                      ; line   326 : /***************************************************************
 2137  2137                      ;              ********************************************************
 2138  2138                      ; line   327 : Global functions
 2139  2139                      ; line   328 : ****************************************************************
 2140  2140                      ;              *******************************************************/
 2141  2141                      ; line   329 : void R_PORT_Create(void);
 2142  2142                      ; line     1 : /***************************************************************
 2143  2143                      ;              ********************************************************
 2144  2144                      ; line     2 : * DISCLAIMER
 2145  2145                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
 2146  2146                      ;              nd is only 
 2147  2147                      ; line     4 : * intended for use with Renesas products. No other uses are auth
 2148  2148                      ;              orized. This 
 2149  2149                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
 2150  2150                      ;              otected under 
 2151  2151                      ; line     6 : * all applicable laws, including copyright laws.
 2152  2152                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
 2153  2153                      ;              IES REGARDING 
 2154  2154                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
 2155  2155                      ;              G BUT NOT 
 2156  2156                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
 2157  2157                      ;              ULAR PURPOSE 
 2158  2158                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
 2159  2159                      ;              AIMED.
 2160  2160                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
 2161  2161                      ;               RENESAS 
 2162  2162                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
 2163  2163                      ;              ALL BE LIABLE 
 2164  2164                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
 2165  2165                      ;               DAMAGES FOR 
 2166  2166                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
 2167  2167                      ;              FILIATES HAVE 
 2168  2168                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 2169  2169                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
 2170  2170                      ;               this software 
 2171  2171                      ; line    17 : * and to discontinue the availability of this software.  By usin
 2172  2172                      ;              g this software, 
 2173  2173                      ; line    18 : * you agree to the additional terms and conditions found by acce
 2174  2174                      ;              ssing the 
 2175  2175                      ; line    19 : * following link:
 2176  2176                      ; line    20 : * http://www.renesas.com/disclaimer
 2177  2177                      ; line    21 : *
 2178  2178                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
 2179  2179                      ;               reserved.
 2180  2180                      ; line    23 : ****************************************************************
 2181  2181                      ;              *******************************************************/
 2182  2182                      ; line    24 : 
 2183  2183                      ; line    25 : /***************************************************************
 2184  2184                      ;              ********************************************************
 2185  2185                      ; line    26 : * File Name    : lcd_panel.c
 2186  2186                      ; line    27 : * Version      : 1.0
 2187  2187                      ; line    28 : * Device(s)    : R5F10WMG
 2188  2188                      ; line    29 : * Tool-Chain   : CA78K0R
 2189  2189                      ; line    30 : * Description  : This file contains the lcd panel driver.
 2190  2190                      ; line    31 : * Creation Date: 08/10/2013
 2191  2191                      ; line    32 : ****************************************************************
 2192  2192                      ;              *******************************************************/
 2193  2193                      ; line    33 : 
 2194  2194                      ; line    34 : /***************************************************************
 2195  2195                      ;              ********************************************************
 2196  2196                      ; line    35 : Includes <System Includes> , �Project Includes
 2197  2197                      ; line    36 : ****************************************************************
 2198  2198                      ;              *******************************************************/
 2199  2199                      ; line    37 : /* Contains string functions used in this file */
 2200  2200                      ; line    38 : #include "r_cg_macrodriver.h"
 2201  2201                      ; line    39 : #include "r_cg_lcd.h"
 2202  2202                      ; line    40 : 
 2203  2203                      ; line    41 : /* Header file contains declarations of functions defined in thi
 2204  2204                      ;              s file */
 2205  2205                      ; line    42 : #include "lcd_panel.h"
 2206  2206                      ; line    43 : #include "r_cg_port.h"
 2207  2207                      ; line    44 : 
 2208  2208                      ; line    45 : /***************************************************************
 2209  2209                      ;              ********************************************************
 2210  2210                      ; line    46 : Global Variables & Defined Constants 
 2211  2211                      ; line    47 : ****************************************************************
 2212  2212                      ;              *******************************************************/
 2213  2213                      ; line    48 : /* Declare Array Maps */
 2214  2214                      ; line    49 : LCDMAP SECTA_map[20];
 2215  2215                      ; line    50 : LCDMAP SECTB_map[20];
 2216  2216                      ; line    51 : LCDMAP SECTC_map[41];
 2217  2217                      ; line    52 : 
 2218  2218                      ; line    53 : /***************************************************************
 2219  2219                      ;              ********************************************************
 2220  2220                      ; line    54 : User Program Code
 2221  2221                      ; line    55 : ****************************************************************
 2222  2222                      ;              *******************************************************/
 2223  2223                      ; line    56 : /***************************************************************
 2224  2224                      ;              ********************************************************
 2225  2225                      ; line    57 : * Function Name : Init_Display_Panel
 2226  2226                      ; line    58 : * Description   : Calls functions in order to prepare the LCD Pa
 2227  2227                      ;              nel for use
 2228  2228                      ; line    59 : * Arguments     : None
 2229  2229                      ; line    60 : * Return Value  : None
 2230  2230                      ; line    61 : ****************************************************************
 2231  2231                      ;              *******************************************************/
 2232  2232                      ; line    62 : void Init_Display_Panel (void)
 2233  2233                      ; line    63 : {    
 2234  2234                      
 2235  2235 -----                @@CODEL CSEG
 2236  2236 00000                _Init_Display_Panel:
 2237  2237                      $DGL    1,38
 2238  2238 00000                ??bf_Init_Display_Panel:
 2239  2239                      ; line    64 :     /* Load up Segment Maps */
 2240  2240                      ; line    65 :     Init_Maps();
 2241  2241                      $DGL    0,3
 2242  2242 00000 RFCF60900              call    !!_Init_Maps                                    ;[INF] 4, 3
 2243  2243                      ; line    66 :      
 2244  2244                      ; line    67 :     /* Clear LCD Data Registers */
 2245  2245                      ; line    68 :     Clear_Display();
 2246  2246                      $DGL    0,6
 2247  2247 00004 RFCD20900              call    !!_Clear_Display                                ;[INF] 4, 3
 2248  2248                      ; line    69 :     
 2249  2249                      ; line    70 :     /* Make sure that SEG 48 is not used as this is used for LED
 2250  2250                      ;               0 */
 2251  2251                      ; line    71 :     PFSEG6 &= (uint8_t)~_02_PFSEG48_SEG;
 2252  2252                      $DGL    0,9
 2253  2253 00008  8F0603                mov     a,!PFSEG6                                       ;[INF] 3, 1
 2254  2254 0000B  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 2255  2255 0000D  9F0603                mov     !PFSEG6,a                                       ;[INF] 3, 1
 2256  2256                      ; line    72 : 
 2257  2257                      ; line    73 :     /* Make sure that IVERF0 is not used as this is used for LED
 2258  2258                      ;               1 */
 2259  2259                      ; line    74 :     PFSEG3 &= (uint8_t)~_04_PFDEG_DEFAULT;
 2260  2260                      $DGL    0,12
 2261  2261 00010  8F0303                mov     a,!PFSEG3                                       ;[INF] 3, 1
 2262  2262 00013  5CFB                  and     a,#0FBH ; 251                                   ;[INF] 2, 1
 2263  2263 00015  9F0303                mov     !PFSEG3,a                                       ;[INF] 3, 1
 2264  2264                      ; line    75 : 
 2265  2265                      ; line    76 :     /* Enable the LCD */
 2266  2266                      ; line    77 :     R_LCD_Start();
 2267  2267                      $DGL    0,15
 2268  2268 00018 RFC000000              call    !!_R_LCD_Start                                  ;[INF] 4, 3
 2269  2269                      ; line    78 :     
 2270  2270                      ; line    79 :     /* Enable the voltage boost circuit */
 2271  2271                      ; line    80 :     R_LCD_Voltage_On();
 2272  2272                      $DGL    0,18
 2273  2273 0001C RFC000000              call    !!_R_LCD_Voltage_On                             ;[INF] 4, 3
 2274  2274                      ; line    81 :     
 2275  2275                      ; line    82 : }
 2276  2276                      $DGL    0,20
 2277  2277 00020                ??ef_Init_Display_Panel:
 2278  2278 00020  D7                    ret                                                     ;[INF] 1, 6
 2279  2279 00021                ??ee_Init_Display_Panel:
 2280  2280                      ; line    83 : /***************************************************************
 2281  2281                      ;              ********************************************************
 2282  2282                      ; line    84 : End of function Init_Display_Panel
 2283  2283                      ; line    85 : ****************************************************************
 2284  2284                      ;              *******************************************************/
 2285  2285                      ; line    86 : 
 2286  2286                      ; line    87 : 
 2287  2287                      ; line    88 : /***************************************************************
 2288  2288                      ;              ********************************************************
 2289  2289                      ; line    89 : * Function Name : Validate_Input
 2290  2290                      ; line    90 : * Description   : Takes any char and validates the input for the
 2291  2291                      ;               Update_Display 
 2292  2292                      ; line    91 : *                 function. Capitalises all letters, and remaps 
 2293  2293                      ;              symbols. Outputs
 2294  2294                      ; line    92 : *                 to a variable specified by the pointer paramet
 2295  2295                      ;              er passed.
 2296  2296                      ; line    93 : * Arguments     : uint8_t input
 2297  2297                      ; line    94 : *                         to be validated
 2298  2298                      ; line    95 : *                 uint8_t * output
 2299  2299                      ; line    96 : *                         pointer to output buffer
 2300  2300                      ; line    97 : * Return Value  : 0: Unsupported Character
 2301  2301                      ; line    98 : *                 1: Number (or space)
 2302  2302                      ; line    99 : *                 2: Letter A-F
 2303  2303                      ; line   100 : *                 3: Letter G-Z
 2304  2304                      ; line   101 : *                 4: Supported Symbol
 2305  2305                      ; line   102 : ****************************************************************
 2306  2306                      ;              *******************************************************/
 2307  2307                      ; line   103 : int16_t Validate_Input (const uint8_t input, uint8_t * const out
 2308  2308                      ;              put)
 2309  2309                      ; line   104 : {
 2310  2310 00021                _Validate_Input:
 2311  2311                      $DGL    1,44
 2312  2312 00021  C7                    push    hl                                              ;[INF] 1, 1
 2313  2313 00022  C1                    push    ax                                              ;[INF] 1, 1
 2314  2314 00023  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 2315  2315 00026                ??bf_Validate_Input:
 2316  2316                      ; line   105 :     /* Is space or Carriage Return? */
 2317  2317                      ; line   106 :     if ((input == ' ') || (input == 0x0D))
 2318  2318                      $DGL    0,3
 2319  2319 00026  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2320  2320 00027  4C20                  cmp     a,#020H ; 32                                    ;[INF] 2, 1
 2321  2321 00029  DD05                  bz      $?L0007                                         ;[INF] 2, 4
 2322  2322 0002B  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2323  2323 0002C  4C0D                  cmp     a,#0DH  ; 13                                    ;[INF] 2, 1
 2324  2324 0002E  DF0D                  bnz     $?L0005                                         ;[INF] 2, 4
 2325  2325 00030                ?L0007:
 2326  2326                      ; line   107 :     {
 2327  2327 00030                ??bb00_Validate_Input:
 2328  2328                      ; line   108 :         *output = 0x29U;
 2329  2329                      $DGL    0,5
 2330  2330 00030  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2331  2331 00032  14                    movw    de,ax                                           ;[INF] 1, 1
 2332  2332 00033  CA0029                mov     [de+0],#029H    ; 41                            ;[INF] 3, 1
 2333  2333                      ; line   109 :         return 1;
 2334  2334                      $DGL    0,6
 2335  2335 00036  E7                    onew    bc                                              ;[INF] 1, 1
 2336  2336 00037  EE0A01                br      $!?L0004                                        ;[INF] 3, 3
 2337  2337 0003A                ??eb00_Validate_Input:
 2338  2338                      ; line   110 :     }
 2339  2339                      ; line   111 : 
 2340  2340                      ; line   112 :     /* Is Number? */
 2341  2341                      ; line   113 :     else if ((input < 0x3AU) && (input > 0x2FU))
 2342  2342                      $DGL    0,10
 2343  2343 0003A  EE0701                br      $!?L0006                                        ;[INF] 3, 3
 2344  2344 0003D                ?L0005:
 2345  2345 0003D  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2346  2346 0003E  4C3A                  cmp     a,#03AH ; 58                                    ;[INF] 2, 1
 2347  2347 00040  DE1A                  bnc     $?L0008                                         ;[INF] 2, 4
 2348  2348 00042  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2349  2349 00043  4C30                  cmp     a,#030H ; 48                                    ;[INF] 2, 1
 2350  2350 00045  DC15                  bc      $?L0008                                         ;[INF] 2, 4
 2351  2351                      ; line   114 :     {
 2352  2352 00047                ??bb01_Validate_Input:
 2353  2353                      ; line   115 :         /* Convert from ASCII */
 2354  2354                      ; line   116 :         *output = (uint8_t)(input - 0x30U);
 2355  2355                      $DGL    0,13
 2356  2356 00047  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2357  2357 00048  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2358  2358 0004A  243000                subw    ax,#030H        ; 48                            ;[INF] 3, 1
 2359  2359 0004D  08                    xch     a,x                                             ;[INF] 1, 1
 2360  2360 0004E  72                    mov     c,a                                             ;[INF] 1, 1
 2361  2361 0004F  08                    xch     a,x                                             ;[INF] 1, 1
 2362  2362 00050  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2363  2363 00052  14                    movw    de,ax                                           ;[INF] 1, 1
 2364  2364 00053  62                    mov     a,c                                             ;[INF] 1, 1
 2365  2365 00054  99                    mov     [de],a                                          ;[INF] 1, 1
 2366  2366                      ; line   117 :         return 1;
 2367  2367                      $DGL    0,14
 2368  2368 00055  E7                    onew    bc                                              ;[INF] 1, 1
 2369  2369 00056  EEEB00                br      $!?L0004                                        ;[INF] 3, 3
 2370  2370 00059                ??eb01_Validate_Input:
 2371  2371                      ; line   118 :     }
 2372  2372                      ; line   119 :     
 2373  2373                      ; line   120 :     /* Is Uppercase Alpha A-F ? */
 2374  2374                      ; line   121 :     else if ((input < 0x47U) && (input > 0x40U))
 2375  2375                      $DGL    0,18
 2376  2376 00059  EEE800                br      $!?L0009                                        ;[INF] 3, 3
 2377  2377 0005C                ?L0008:
 2378  2378 0005C  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2379  2379 0005D  4C47                  cmp     a,#047H ; 71                                    ;[INF] 2, 1
 2380  2380 0005F  DE1C                  bnc     $?L0010                                         ;[INF] 2, 4
 2381  2381 00061  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2382  2382 00062  4C41                  cmp     a,#041H ; 65                                    ;[INF] 2, 1
 2383  2383 00064  DC17                  bc      $?L0010                                         ;[INF] 2, 4
 2384  2384                      ; line   122 :     {
 2385  2385 00066                ??bb02_Validate_Input:
 2386  2386                      ; line   123 :         /* Convert from ASCII */
 2387  2387                      ; line   124 :         *output = (uint8_t)(input - 0x33U);
 2388  2388                      $DGL    0,21
 2389  2389 00066  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2390  2390 00067  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2391  2391 00069  243300                subw    ax,#033H        ; 51                            ;[INF] 3, 1
 2392  2392 0006C  08                    xch     a,x                                             ;[INF] 1, 1
 2393  2393 0006D  72                    mov     c,a                                             ;[INF] 1, 1
 2394  2394 0006E  08                    xch     a,x                                             ;[INF] 1, 1
 2395  2395 0006F  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2396  2396 00071  14                    movw    de,ax                                           ;[INF] 1, 1
 2397  2397 00072  62                    mov     a,c                                             ;[INF] 1, 1
 2398  2398 00073  99                    mov     [de],a                                          ;[INF] 1, 1
 2399  2399                      ; line   125 :         return 2;        
 2400  2400                      $DGL    0,22
 2401  2401 00074  320200                movw    bc,#02H ; 2                                     ;[INF] 3, 1
 2402  2402 00077  EECA00                br      $!?L0004                                        ;[INF] 3, 3
 2403  2403 0007A                ??eb02_Validate_Input:
 2404  2404                      ; line   126 :     }
 2405  2405                      ; line   127 :     
 2406  2406                      ; line   128 :     /* Is Lowercase Alpha A-F */
 2407  2407                      ; line   129 :     else if ((input < 0x67) && (input > 0x60))
 2408  2408                      $DGL    0,26
 2409  2409 0007A  EEC700                br      $!?L0011                                        ;[INF] 3, 3
 2410  2410 0007D                ?L0010:
 2411  2411 0007D  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2412  2412 0007E  4C67                  cmp     a,#067H ; 103                                   ;[INF] 2, 1
 2413  2413 00080  DE1C                  bnc     $?L0012                                         ;[INF] 2, 4
 2414  2414 00082  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2415  2415 00083  4C61                  cmp     a,#061H ; 97                                    ;[INF] 2, 1
 2416  2416 00085  DC17                  bc      $?L0012                                         ;[INF] 2, 4
 2417  2417                      ; line   130 :     {
 2418  2418 00087                ??bb03_Validate_Input:
 2419  2419                      ; line   131 :         /* Shift Case & Convert from ASCII */
 2420  2420                      ; line   132 :         *output = (uint8_t)(input - 0x53);
 2421  2421                      $DGL    0,29
 2422  2422 00087  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2423  2423 00088  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2424  2424 0008A  245300                subw    ax,#053H        ; 83                            ;[INF] 3, 1
 2425  2425 0008D  08                    xch     a,x                                             ;[INF] 1, 1
 2426  2426 0008E  72                    mov     c,a                                             ;[INF] 1, 1
 2427  2427 0008F  08                    xch     a,x                                             ;[INF] 1, 1
 2428  2428 00090  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2429  2429 00092  14                    movw    de,ax                                           ;[INF] 1, 1
 2430  2430 00093  62                    mov     a,c                                             ;[INF] 1, 1
 2431  2431 00094  99                    mov     [de],a                                          ;[INF] 1, 1
 2432  2432                      ; line   133 :         return 2;
 2433  2433                      $DGL    0,30
 2434  2434 00095  320200                movw    bc,#02H ; 2                                     ;[INF] 3, 1
 2435  2435 00098  EEA900                br      $!?L0004                                        ;[INF] 3, 3
 2436  2436 0009B                ??eb03_Validate_Input:
 2437  2437                      ; line   134 :     }
 2438  2438                      ; line   135 :     
 2439  2439                      ; line   136 :     /* Is Uppercase Alpha G-Z ? */
 2440  2440                      ; line   137 :     else if ((input > 0x46) && (input < 0x5B))
 2441  2441                      $DGL    0,34
 2442  2442 0009B  EEA600                br      $!?L0013                                        ;[INF] 3, 3
 2443  2443 0009E                ?L0012:
 2444  2444 0009E  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2445  2445 0009F  4C47                  cmp     a,#047H ; 71                                    ;[INF] 2, 1
 2446  2446 000A1  DC1C                  bc      $?L0014                                         ;[INF] 2, 4
 2447  2447 000A3  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2448  2448 000A4  4C5B                  cmp     a,#05BH ; 91                                    ;[INF] 2, 1
 2449  2449 000A6  DE17                  bnc     $?L0014                                         ;[INF] 2, 4
 2450  2450                      ; line   138 :     {
 2451  2451 000A8                ??bb04_Validate_Input:
 2452  2452                      ; line   139 :         /* Convert from ASCII */
 2453  2453                      ; line   140 :         *output = (uint8_t)(input - 0x33);
 2454  2454                      $DGL    0,37
 2455  2455 000A8  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2456  2456 000A9  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2457  2457 000AB  243300                subw    ax,#033H        ; 51                            ;[INF] 3, 1
 2458  2458 000AE  08                    xch     a,x                                             ;[INF] 1, 1
 2459  2459 000AF  72                    mov     c,a                                             ;[INF] 1, 1
 2460  2460 000B0  08                    xch     a,x                                             ;[INF] 1, 1
 2461  2461 000B1  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2462  2462 000B3  14                    movw    de,ax                                           ;[INF] 1, 1
 2463  2463 000B4  62                    mov     a,c                                             ;[INF] 1, 1
 2464  2464 000B5  99                    mov     [de],a                                          ;[INF] 1, 1
 2465  2465                      ; line   141 :         return 3;
 2466  2466                      $DGL    0,38
 2467  2467 000B6  320300                movw    bc,#03H ; 3                                     ;[INF] 3, 1
 2468  2468 000B9  EE8800                br      $!?L0004                                        ;[INF] 3, 3
 2469  2469 000BC                ??eb04_Validate_Input:
 2470  2470                      ; line   142 :     }
 2471  2471                      ; line   143 :     
 2472  2472                      ; line   144 :     /* Is Lowercase Alpha G-Z ? */
 2473  2473                      ; line   145 :     else if ((input > 0x66) && (input < 0x7B))
 2474  2474                      $DGL    0,42
 2475  2475 000BC  EE8500                br      $!?L0015                                        ;[INF] 3, 3
 2476  2476 000BF                ?L0014:
 2477  2477 000BF  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2478  2478 000C0  4C67                  cmp     a,#067H ; 103                                   ;[INF] 2, 1
 2479  2479 000C2  DC1A                  bc      $?L0016                                         ;[INF] 2, 4
 2480  2480 000C4  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2481  2481 000C5  4C7B                  cmp     a,#07BH ; 123                                   ;[INF] 2, 1
 2482  2482 000C7  DE15                  bnc     $?L0016                                         ;[INF] 2, 4
 2483  2483                      ; line   146 :     {
 2484  2484 000C9                ??bb05_Validate_Input:
 2485  2485                      ; line   147 :         /* Shift Case & Convert from ASCII */
 2486  2486                      ; line   148 :         *output = (uint8_t)(input - 0x53);
 2487  2487                      $DGL    0,45
 2488  2488 000C9  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2489  2489 000CA  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2490  2490 000CC  245300                subw    ax,#053H        ; 83                            ;[INF] 3, 1
 2491  2491 000CF  08                    xch     a,x                                             ;[INF] 1, 1
 2492  2492 000D0  72                    mov     c,a                                             ;[INF] 1, 1
 2493  2493 000D1  08                    xch     a,x                                             ;[INF] 1, 1
 2494  2494 000D2  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2495  2495 000D4  14                    movw    de,ax                                           ;[INF] 1, 1
 2496  2496 000D5  62                    mov     a,c                                             ;[INF] 1, 1
 2497  2497 000D6  99                    mov     [de],a                                          ;[INF] 1, 1
 2498  2498                      ; line   149 :         return 3;
 2499  2499                      $DGL    0,46
 2500  2500 000D7  320300                movw    bc,#03H ; 3                                     ;[INF] 3, 1
 2501  2501 000DA  EF68                  br      $?L0004                                         ;[INF] 2, 3
 2502  2502 000DC                ??eb05_Validate_Input:
 2503  2503                      ; line   150 :     }
 2504  2504                      ; line   151 :     
 2505  2505                      ; line   152 :     /* Is Symbol? */
 2506  2506                      ; line   153 :     else
 2507  2507                      $DGL    0,50
 2508  2508 000DC  EF66                  br      $?L0017                                         ;[INF] 2, 3
 2509  2509 000DE                ?L0016:
 2510  2510                      ; line   154 :     {
 2511  2511 000DE                ??bb06_Validate_Input:
 2512  2512                      ; line   155 :         /* Check input against supported symbols */
 2513  2513                      ; line   156 :         switch (input)
 2514  2514                      $DGL    0,53
 2515  2515 000DE  8B                    mov     a,[hl]  ; input                                 ;[INF] 1, 1
 2516  2516 000DF  318E                  shrw    ax,8                                            ;[INF] 2, 1
 2517  2517 000E1  242A00                subw    ax,#02AH        ; 42                            ;[INF] 3, 1
 2518  2518 000E4  DD50                  bz      $?L0025                                         ;[INF] 2, 4
 2519  2519 000E6  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 2520  2520 000E9  DD1B                  bz      $?L0019                                         ;[INF] 2, 4
 2521  2521 000EB  240200                subw    ax,#02H ; 2                                     ;[INF] 3, 1
 2522  2522 000EE  DD1E                  bz      $?L0020                                         ;[INF] 2, 4
 2523  2523 000F0  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 2524  2524 000F3  DD31                  bz      $?L0023                                         ;[INF] 2, 4
 2525  2525 000F5  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 2526  2526 000F8  DD1C                  bz      $?L0021                                         ;[INF] 2, 4
 2527  2527 000FA  240B00                subw    ax,#0BH ; 11                                    ;[INF] 3, 1
 2528  2528 000FD  DD2F                  bz      $?L0024                                         ;[INF] 2, 4
 2529  2529 000FF  242200                subw    ax,#022H        ; 34                            ;[INF] 3, 1
 2530  2530 00102  DD1A                  bz      $?L0022                                         ;[INF] 2, 4
 2531  2531 00104  EF38                  br      $?L0026                                         ;[INF] 2, 3
 2532  2532                      ; line   157 :         {
 2533  2533 00106                ??bb07_Validate_Input:
 2534  2534                      ; line   158 :             /* Is Plus */
 2535  2535                      ; line   159 :             case 0x2B:
 2536  2536 00106                ?L0019:
 2537  2537                      ; line   160 :             {
 2538  2538 00106                ??bb08_Validate_Input:
 2539  2539                      ; line   161 :                 *output = 0x0A;
 2540  2540                      $DGL    0,58
 2541  2541 00106  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2542  2542 00108  14                    movw    de,ax                                           ;[INF] 1, 1
 2543  2543 00109  CA000A                mov     [de+0],#0AH     ; 10                            ;[INF] 3, 1
 2544  2544 0010C                ??eb08_Validate_Input:
 2545  2545                      ; line   162 :             }
 2546  2546                      ; line   163 :             break;
 2547  2547                      $DGL    0,60
 2548  2548 0010C  EF33                  br      $?L0018                                         ;[INF] 2, 3
 2549  2549                      ; line   164 :             
 2550  2550                      ; line   165 :             /* Is Minus */
 2551  2551                      ; line   166 :             case 0x2D:
 2552  2552 0010E                ?L0020:
 2553  2553                      ; line   167 :             {
 2554  2554 0010E                ??bb09_Validate_Input:
 2555  2555                      ; line   168 :                 *output = 0x0B;
 2556  2556                      $DGL    0,65
 2557  2557 0010E  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2558  2558 00110  14                    movw    de,ax                                           ;[INF] 1, 1
 2559  2559 00111  CA000B                mov     [de+0],#0BH     ; 11                            ;[INF] 3, 1
 2560  2560 00114                ??eb09_Validate_Input:
 2561  2561                      ; line   169 :             }
 2562  2562                      ; line   170 :             break;
 2563  2563                      $DGL    0,67
 2564  2564 00114  EF2B                  br      $?L0018                                         ;[INF] 2, 3
 2565  2565                      ; line   171 :             
 2566  2566                      ; line   172 :             /* Is Forward Slash */
 2567  2567                      ; line   173 :             case 0x2F:
 2568  2568 00116                ?L0021:
 2569  2569                      ; line   174 :             {
 2570  2570 00116                ??bb0A_Validate_Input:
 2571  2571                      ; line   175 :                 *output = 0x0C;
 2572  2572                      $DGL    0,72
 2573  2573 00116  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2574  2574 00118  14                    movw    de,ax                                           ;[INF] 1, 1
 2575  2575 00119  CA000C                mov     [de+0],#0CH     ; 12                            ;[INF] 3, 1
 2576  2576 0011C                ??eb0A_Validate_Input:
 2577  2577                      ; line   176 :             }
 2578  2578                      ; line   177 :             break;
 2579  2579                      $DGL    0,74
 2580  2580 0011C  EF23                  br      $?L0018                                         ;[INF] 2, 3
 2581  2581                      ; line   178 :             
 2582  2582                      ; line   179 :             /* Is Back Slash */
 2583  2583                      ; line   180 :             case 0x5C:
 2584  2584 0011E                ?L0022:
 2585  2585                      ; line   181 :             {
 2586  2586 0011E                ??bb0B_Validate_Input:
 2587  2587                      ; line   182 :                 *output = 0x0D;
 2588  2588                      $DGL    0,79
 2589  2589 0011E  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2590  2590 00120  14                    movw    de,ax                                           ;[INF] 1, 1
 2591  2591 00121  CA000D                mov     [de+0],#0DH     ; 13                            ;[INF] 3, 1
 2592  2592 00124                ??eb0B_Validate_Input:
 2593  2593                      ; line   183 :             }
 2594  2594                      ; line   184 :             break;
 2595  2595                      $DGL    0,81
 2596  2596 00124  EF1B                  br      $?L0018                                         ;[INF] 2, 3
 2597  2597                      ; line   185 :             
 2598  2598                      ; line   186 :             /* Is full stop */
 2599  2599                      ; line   187 :             case 0x2E:
 2600  2600 00126                ?L0023:
 2601  2601                      ; line   188 :             {
 2602  2602 00126                ??bb0C_Validate_Input:
 2603  2603                      ; line   189 :                 *output = 0x2E;
 2604  2604                      $DGL    0,86
 2605  2605 00126  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2606  2606 00128  14                    movw    de,ax                                           ;[INF] 1, 1
 2607  2607 00129  CA002E                mov     [de+0],#02EH    ; 46                            ;[INF] 3, 1
 2608  2608 0012C                ??eb0C_Validate_Input:
 2609  2609                      ; line   190 :             }
 2610  2610                      ; line   191 :             break;
 2611  2611                      $DGL    0,88
 2612  2612 0012C  EF13                  br      $?L0018                                         ;[INF] 2, 3
 2613  2613                      ; line   192 :             
 2614  2614                      ; line   193 :             /* Is colon */
 2615  2615                      ; line   194 :             case 0x3A:
 2616  2616 0012E                ?L0024:
 2617  2617                      ; line   195 :             {
 2618  2618 0012E                ??bb0D_Validate_Input:
 2619  2619                      ; line   196 :                 *output = 0x3A;
 2620  2620                      $DGL    0,93
 2621  2621 0012E  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2622  2622 00130  14                    movw    de,ax                                           ;[INF] 1, 1
 2623  2623 00131  CA003A                mov     [de+0],#03AH    ; 58                            ;[INF] 3, 1
 2624  2624 00134                ??eb0D_Validate_Input:
 2625  2625                      ; line   197 :             }
 2626  2626                      ; line   198 :             break;
 2627  2627                      $DGL    0,95
 2628  2628 00134  EF0B                  br      $?L0018                                         ;[INF] 2, 3
 2629  2629                      ; line   199 :             
 2630  2630                      ; line   200 :             case 0x2A:
 2631  2631 00136                ?L0025:
 2632  2632                      ; line   201 :             {
 2633  2633 00136                ??bb0E_Validate_Input:
 2634  2634                      ; line   202 :                 *output = 0x28;
 2635  2635                      $DGL    0,99
 2636  2636 00136  AC08                  movw    ax,[hl+8]       ; output                        ;[INF] 2, 1
 2637  2637 00138  14                    movw    de,ax                                           ;[INF] 1, 1
 2638  2638 00139  CA0028                mov     [de+0],#028H    ; 40                            ;[INF] 3, 1
 2639  2639 0013C                ??eb0E_Validate_Input:
 2640  2640                      ; line   203 :             }
 2641  2641                      ; line   204 :             break;
 2642  2642                      $DGL    0,101
 2643  2643 0013C  EF03                  br      $?L0018                                         ;[INF] 2, 3
 2644  2644                      ; line   205 : 
 2645  2645                      ; line   206 :             /* Unsupported Character */
 2646  2646                      ; line   207 :             default:
 2647  2647 0013E                ?L0026:
 2648  2648                      ; line   208 :             {
 2649  2649 0013E                ??bb0F_Validate_Input:
 2650  2650                      ; line   209 :                 return 0;
 2651  2651                      $DGL    0,106
 2652  2652 0013E  F7                    clrw    bc                                              ;[INF] 1, 1
 2653  2653 0013F  EF03                  br      $?L0004                                         ;[INF] 2, 3
 2654  2654 00141                ??eb0F_Validate_Input:
 2655  2655                      ; line   210 :             }
 2656  2656 00141                ??eb07_Validate_Input:
 2657  2657                      ; line   211 :         }
 2658  2658 00141                ?L0018:
 2659  2659                      ; line   212 :         return 4;
 2660  2660                      $DGL    0,109
 2661  2661 00141  320400                movw    bc,#04H ; 4                                     ;[INF] 3, 1
 2662  2662 00144                ??eb06_Validate_Input:
 2663  2663                      ; line   213 :     }
 2664  2664 00144                ?L0017:
 2665  2665 00144                ?L0015:
 2666  2666 00144                ?L0013:
 2667  2667 00144                ?L0011:
 2668  2668 00144                ?L0009:
 2669  2669 00144                ?L0006:
 2670  2670                      ; line   214 : }
 2671  2671 00144                ?L0004:
 2672  2672                      $DGL    0,111
 2673  2673 00144                ??ef_Validate_Input:
 2674  2674 00144  C0                    pop     ax                                              ;[INF] 1, 1
 2675  2675 00145  C6                    pop     hl                                              ;[INF] 1, 1
 2676  2676 00146  D7                    ret                                                     ;[INF] 1, 6
 2677  2677 00147                ??ee_Validate_Input:
 2678  2678                      ; line   215 : /***************************************************************
 2679  2679                      ;              ********************************************************
 2680  2680                      ; line   216 : End of function Validate_Input
 2681  2681                      ; line   217 : ****************************************************************
 2682  2682                      ;              *******************************************************/
 2683  2683                      ; line   218 : 
 2684  2684                      ; line   219 : /***************************************************************
 2685  2685                      ;              ********************************************************
 2686  2686                      ; line   220 : * Function Name: SECTA_Glyph_Map
 2687  2687                      ; line   221 : * Description  : Takes a validated char input and maps the chara
 2688  2688                      ;              cter to a 
 2689  2689                      ; line   222 : *                segment pattern, to be displayed on Section A o
 2690  2690                      ;              f the LCD panel.
 2691  2691                      ; line   223 : * Arguments    : character to be displayed, digit position of ch
 2692  2692                      ;              aracter
 2693  2693                      ; line   224 : * Return Value : none
 2694  2694                      ; line   225 : ****************************************************************
 2695  2695                      ;              *******************************************************/
 2696  2696                      ; line   226 : void SECTA_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 2697  2697                      ; line   227 : {
 2698  2698 00147                _SECTA_Glyph_Map:
 2699  2699                      $DGL    1,117
 2700  2700 00147  C7                    push    hl                                              ;[INF] 1, 1
 2701  2701 00148  C1                    push    ax                                              ;[INF] 1, 1
 2702  2702 00149  2004                  subw    sp,#04H                                         ;[INF] 2, 1
 2703  2703 0014B  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 2704  2704 0014E                ??bf_SECTA_Glyph_Map:
 2705  2705                      ; line   228 :     volatile uint8_t * PinPtr1 = PDL_NO_PTR;
 2706  2706                      $DGL    0,2
 2707  2707 0014E  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 2708  2708 00151  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2709  2709                      ; line   229 :     volatile uint8_t * PinPtr2 = PDL_NO_PTR;
 2710  2710                      $DGL    0,3
 2711  2711 00153  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2712  2712                      ; line   230 :     
 2713  2713                      ; line   231 :     /* Set Pointers to Correct Segments */
 2714  2714                      ; line   232 :     switch (digit)
 2715  2715                      $DGL    0,6
 2716  2716 00154  AC0C                  movw    ax,[hl+12]      ; digit                         ;[INF] 2, 1
 2717  2717 00156  440400                cmpw    ax,#04H ; 4                                     ;[INF] 3, 1
 2718  2718 00159  DE31                  bnc     $?L0036                                         ;[INF] 2, 4
 2719  2719 0015B  12                    movw    bc,ax                                           ;[INF] 1, 1
 2720  2720 0015C R490800                mov     a,?L0038+8[bc]                                  ;[INF] 3, 1
 2721  2721 0015F  311C                  shlw    bc,1                                            ;[INF] 2, 1
 2722  2722 00161  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 2723  2723 00163 R790000                movw    ax,?L0038[bc]                                   ;[INF] 3, 1
 2724  2724 00166  61CB                  br      ax                                              ;[INF] 2, 3
 2725  2725                      ; line   233 :     {
 2726  2726 00168                ??bb00_SECTA_Glyph_Map:
 2727  2727                      ; line   234 :         /* First Digit */
 2728  2728                      ; line   235 :         case 0:
 2729  2729 00168                ?L0032:
 2730  2730                      ; line   236 :         {
 2731  2731 00168                ??bb01_SECTA_Glyph_Map:
 2732  2732                      ; line   237 :             PinPtr1 = &SEG11_DEF;
 2733  2733                      $DGL    0,11
 2734  2734 00168  300B04                movw    ax,#040BH       ; 1035                          ;[INF] 3, 1
 2735  2735 0016B  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2736  2736                      ; line   238 :             PinPtr2 = &SEG10_DEF;
 2737  2737                      $DGL    0,12
 2738  2738 0016D  B1                    decw    ax                                              ;[INF] 1, 1
 2739  2739 0016E  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2740  2740 0016F                ??eb01_SECTA_Glyph_Map:
 2741  2741                      ; line   239 :         }
 2742  2742                      ; line   240 :         break;
 2743  2743                      $DGL    0,14
 2744  2744 0016F  EF1B                  br      $?L0031                                         ;[INF] 2, 3
 2745  2745                      ; line   241 :         
 2746  2746                      ; line   242 :         /* Second Digit */
 2747  2747                      ; line   243 :         case 1:
 2748  2748 00171                ?L0033:
 2749  2749                      ; line   244 :         {
 2750  2750 00171                ??bb02_SECTA_Glyph_Map:
 2751  2751                      ; line   245 :             PinPtr1 = &SEG13_DEF;
 2752  2752                      $DGL    0,19
 2753  2753 00171  300D04                movw    ax,#040DH       ; 1037                          ;[INF] 3, 1
 2754  2754 00174  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2755  2755                      ; line   246 :             PinPtr2 = &SEG12_DEF;
 2756  2756                      $DGL    0,20
 2757  2757 00176  B1                    decw    ax                                              ;[INF] 1, 1
 2758  2758 00177  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2759  2759 00178                ??eb02_SECTA_Glyph_Map:
 2760  2760                      ; line   247 :         }    
 2761  2761                      ; line   248 :         break;
 2762  2762                      $DGL    0,22
 2763  2763 00178  EF12                  br      $?L0031                                         ;[INF] 2, 3
 2764  2764                      ; line   249 :         
 2765  2765                      ; line   250 :         /* Decimal Point */
 2766  2766                      ; line   251 :         case 2:
 2767  2767 0017A                ?L0034:
 2768  2768                      ; line   252 :         {
 2769  2769 0017A                ??bb03_SECTA_Glyph_Map:
 2770  2770                      ; line   253 :             PinPtr1 = &SEG14_DEF;
 2771  2771                      $DGL    0,27
 2772  2772 0017A  300E04                movw    ax,#040EH       ; 1038                          ;[INF] 3, 1
 2773  2773 0017D  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2774  2774                      ; line   254 :             PinPtr2 = PDL_NO_PTR;
 2775  2775                      $DGL    0,28
 2776  2776 0017F  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 2777  2777 00182  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2778  2778 00183                ??eb03_SECTA_Glyph_Map:
 2779  2779                      ; line   255 :         }
 2780  2780                      ; line   256 :         break;
 2781  2781                      $DGL    0,30
 2782  2782 00183  EF07                  br      $?L0031                                         ;[INF] 2, 3
 2783  2783                      ; line   257 : 
 2784  2784                      ; line   258 :         /* Third Digit */
 2785  2785                      ; line   259 :         case 3:
 2786  2786 00185                ?L0035:
 2787  2787                      ; line   260 :         {
 2788  2788 00185                ??bb04_SECTA_Glyph_Map:
 2789  2789                      ; line   261 :             PinPtr1 = &SEG15_DEF;
 2790  2790                      $DGL    0,35
 2791  2791 00185  300F04                movw    ax,#040FH       ; 1039                          ;[INF] 3, 1
 2792  2792 00188  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2793  2793                      ; line   262 :             PinPtr2 = &SEG14_DEF;
 2794  2794                      $DGL    0,36
 2795  2795 0018A  B1                    decw    ax                                              ;[INF] 1, 1
 2796  2796 0018B  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2797  2797 0018C                ??eb04_SECTA_Glyph_Map:
 2798  2798                      ; line   263 :         }    
 2799  2799                      ; line   264 :         break;
 2800  2800                      ; line   265 :         
 2801  2801                      ; line   266 :         default:
 2802  2802 0018C                ?L0036:
 2803  2803                      ; line   267 :         {
 2804  2804 0018C                ??bb05_SECTA_Glyph_Map:
 2805  2805 0018C                ??eb05_SECTA_Glyph_Map:
 2806  2806                      ; line   268 :             /* nothing */
 2807  2807                      ; line   269 :         }    
 2808  2808                      ; line   270 :         break;
 2809  2809 0018C                ??eb00_SECTA_Glyph_Map:
 2810  2810                      ; line   271 :     }
 2811  2811 0018C                ?L0031:
 2812  2812                      ; line   272 :         
 2813  2813                      ; line   273 :     /* Bit Mask Segments */
 2814  2814                      ; line   274 :     *PinPtr1 &= 0xF0U;
 2815  2815                      $DGL    0,48
 2816  2816 0018C  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 2817  2817 0018E  14                    movw    de,ax                                           ;[INF] 1, 1
 2818  2818 0018F  89                    mov     a,[de]                                          ;[INF] 1, 1
 2819  2819 00190  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 2820  2820 00192  99                    mov     [de],a                                          ;[INF] 1, 1
 2821  2821                      ; line   275 :     *PinPtr2 &= 0xF8U;
 2822  2822                      $DGL    0,49
 2823  2823 00193  AB                    movw    ax,[hl] ; PinPtr2                               ;[INF] 1, 1
 2824  2824 00194  14                    movw    de,ax                                           ;[INF] 1, 1
 2825  2825 00195  89                    mov     a,[de]                                          ;[INF] 1, 1
 2826  2826 00196  5CF8                  and     a,#0F8H ; 248                                   ;[INF] 2, 1
 2827  2827 00198  99                    mov     [de],a                                          ;[INF] 1, 1
 2828  2828                      ; line   276 :     
 2829  2829                      ; line   277 :     /* decimal point? */
 2830  2830                      ; line   278 :     if (digit == 2)
 2831  2831                      $DGL    0,52
 2832  2832 00199  300200                movw    ax,#02H ; 2                                     ;[INF] 3, 1
 2833  2833 0019C  61490C                cmpw    ax,[hl+12]      ; digit                         ;[INF] 3, 1
 2834  2834 0019F  DF18                  bnz     $?L0039                                         ;[INF] 2, 4
 2835  2835                      ; line   279 :     {
 2836  2836 001A1                ??bb06_SECTA_Glyph_Map:
 2837  2837                      ; line   280 :         if (glyph == '.')
 2838  2838                      $DGL    0,54
 2839  2839 001A1  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 2840  2840 001A3  4C2E                  cmp     a,#02EH ; 46                                    ;[INF] 2, 1
 2841  2841 001A5  DF09                  bnz     $?L0041                                         ;[INF] 2, 4
 2842  2842                      ; line   281 :         {
 2843  2843 001A7                ??bb07_SECTA_Glyph_Map:
 2844  2844                      ; line   282 :             /* Turn on Decimal Point */
 2845  2845                      ; line   283 :             *PinPtr1 |= 0x08U;
 2846  2846                      $DGL    0,57
 2847  2847 001A7  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 2848  2848 001A9  14                    movw    de,ax                                           ;[INF] 1, 1
 2849  2849 001AA  89                    mov     a,[de]                                          ;[INF] 1, 1
 2850  2850 001AB  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 2851  2851 001AD  99                    mov     [de],a                                          ;[INF] 1, 1
 2852  2852 001AE                ??eb07_SECTA_Glyph_Map:
 2853  2853                      ; line   284 :         }
 2854  2854                      ; line   285 :         else
 2855  2855                      $DGL    0,59
 2856  2856 001AE  EF07                  br      $?L0042                                         ;[INF] 2, 3
 2857  2857 001B0                ?L0041:
 2858  2858                      ; line   286 :         {
 2859  2859 001B0                ??bb08_SECTA_Glyph_Map:
 2860  2860                      ; line   287 :             /* Turn off Decimal Point */
 2861  2861                      ; line   288 :             *PinPtr1 &= 0xF7U;
 2862  2862                      $DGL    0,62
 2863  2863 001B0  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 2864  2864 001B2  14                    movw    de,ax                                           ;[INF] 1, 1
 2865  2865 001B3  89                    mov     a,[de]                                          ;[INF] 1, 1
 2866  2866 001B4  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 2867  2867 001B6  99                    mov     [de],a                                          ;[INF] 1, 1
 2868  2868 001B7                ??eb08_SECTA_Glyph_Map:
 2869  2869                      ; line   289 :         }
 2870  2870 001B7                ?L0042:
 2871  2871 001B7                ??eb06_SECTA_Glyph_Map:
 2872  2872                      ; line   290 :     }
 2873  2873                      ; line   291 :     else if (glyph != 0x29)
 2874  2874                      $DGL    0,65
 2875  2875 001B7  EF2B                  br      $?L0040                                         ;[INF] 2, 3
 2876  2876 001B9                ?L0039:
 2877  2877 001B9  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 2878  2878 001BB  4C29                  cmp     a,#029H ; 41                                    ;[INF] 2, 1
 2879  2879 001BD  DD25                  bz      $?L0043                                         ;[INF] 2, 4
 2880  2880                      ; line   292 :     { 
 2881  2881 001BF                ??bb09_SECTA_Glyph_Map:
 2882  2882                      ; line   293 :         /* Digit-Segment Mapping */
 2883  2883                      ; line   294 :         *PinPtr1 |= (uint8_t)SECTA_map[glyph].BYTE.TWO;
 2884  2884                      $DGL    0,68
 2885  2885 001BF  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 2886  2886 001C1  F0                    clrb    x                                               ;[INF] 1, 1
 2887  2887 001C2  316E                  shrw    ax,6                                            ;[INF] 2, 1
 2888  2888 001C4  12                    movw    bc,ax                                           ;[INF] 1, 1
 2889  2889 001C5 R490000                mov     a,_SECTA_map[bc]                                ;[INF] 3, 1
 2890  2890 001C8  314A                  shr     a,4                                             ;[INF] 2, 1
 2891  2891 001CA  72                    mov     c,a                                             ;[INF] 1, 1
 2892  2892 001CB  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 2893  2893 001CD  14                    movw    de,ax                                           ;[INF] 1, 1
 2894  2894 001CE  89                    mov     a,[de]                                          ;[INF] 1, 1
 2895  2895 001CF  616A                  or      a,c                                             ;[INF] 2, 1
 2896  2896 001D1  99                    mov     [de],a                                          ;[INF] 1, 1
 2897  2897                      ; line   295 :         *PinPtr2 |= (uint8_t)SECTA_map[glyph].BYTE.ONE;
 2898  2898                      $DGL    0,69
 2899  2899 001D2  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 2900  2900 001D4  F0                    clrb    x                                               ;[INF] 1, 1
 2901  2901 001D5  316E                  shrw    ax,6                                            ;[INF] 2, 1
 2902  2902 001D7  12                    movw    bc,ax                                           ;[INF] 1, 1
 2903  2903 001D8 R490000                mov     a,_SECTA_map[bc]                                ;[INF] 3, 1
 2904  2904 001DB  5C0F                  and     a,#0FH  ; 15                                    ;[INF] 2, 1
 2905  2905 001DD  72                    mov     c,a                                             ;[INF] 1, 1
 2906  2906 001DE  AB                    movw    ax,[hl] ; PinPtr2                               ;[INF] 1, 1
 2907  2907 001DF  14                    movw    de,ax                                           ;[INF] 1, 1
 2908  2908 001E0  89                    mov     a,[de]                                          ;[INF] 1, 1
 2909  2909 001E1  616A                  or      a,c                                             ;[INF] 2, 1
 2910  2910 001E3  99                    mov     [de],a                                          ;[INF] 1, 1
 2911  2911 001E4                ??eb09_SECTA_Glyph_Map:
 2912  2912                      ; line   296 :     }
 2913  2913                      ; line   297 :     else
 2914  2914 001E4                ?L0043:
 2915  2915                      ; line   298 :     {
 2916  2916 001E4                ??bb0A_SECTA_Glyph_Map:
 2917  2917 001E4                ??eb0A_SECTA_Glyph_Map:
 2918  2918                      ; line   299 :         /* Do nothing */
 2919  2919                      ; line   300 :     }
 2920  2920 001E4                ?L0044:
 2921  2921 001E4                ?L0040:
 2922  2922                      ; line   301 : 
 2923  2923                      ; line   302 : }
 2924  2924                      $DGL    0,76
 2925  2925 001E4                ??ef_SECTA_Glyph_Map:
 2926  2926 001E4  1006                  addw    sp,#06H                                         ;[INF] 2, 1
 2927  2927 001E6  C6                    pop     hl                                              ;[INF] 1, 1
 2928  2928 001E7  D7                    ret                                                     ;[INF] 1, 6
 2929  2929 001E8                ??ee_SECTA_Glyph_Map:
 2930  2930                      ; line   303 : /***************************************************************
 2931  2931                      ;              ********************************************************
 2932  2932                      ; line   304 : End of function SECTA_Glyph_Map
 2933  2933                      ; line   305 : ****************************************************************
 2934  2934                      ;              *******************************************************/
 2935  2935                      ; line   306 : /***************************************************************
 2936  2936                      ;              ********************************************************
 2937  2937                      ; line   307 : * Function Name : SECTB_Glyph_Map
 2938  2938                      ; line   308 : * Description   : Takes a validated char input and maps the char
 2939  2939                      ;              acter to a 
 2940  2940                      ; line   309 : *                 segment pattern, to be displayed on Section B 
 2941  2941                      ;              of the LCD panel.
 2942  2942                      ; line   310 : * Arguments     : character to be displayed, digit position of c
 2943  2943                      ;              haracter
 2944  2944                      ; line   311 : * Return Value  : none
 2945  2945                      ; line   312 : ****************************************************************
 2946  2946                      ;              *******************************************************/
 2947  2947                      ; line   313 : void SECTB_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 2948  2948                      ; line   314 : {
 2949  2949 001E8                _SECTB_Glyph_Map:
 2950  2950                      $DGL    1,173
 2951  2951 001E8  C7                    push    hl                                              ;[INF] 1, 1
 2952  2952 001E9  C1                    push    ax                                              ;[INF] 1, 1
 2953  2953 001EA  2004                  subw    sp,#04H                                         ;[INF] 2, 1
 2954  2954 001EC  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 2955  2955 001EF                ??bf_SECTB_Glyph_Map:
 2956  2956                      ; line   315 :     /* Declare Pointers */
 2957  2957                      ; line   316 :     volatile uint8_t * PinPtr1 = PDL_NO_PTR;
 2958  2958                      $DGL    0,3
 2959  2959 001EF  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 2960  2960 001F2  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2961  2961                      ; line   317 :     volatile uint8_t * PinPtr2 = PDL_NO_PTR;
 2962  2962                      $DGL    0,4
 2963  2963 001F4  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2964  2964                      ; line   318 :     
 2965  2965                      ; line   319 :     /* Set Pointers to Current Digit Pins */
 2966  2966                      ; line   320 :     switch (digit)
 2967  2967                      $DGL    0,7
 2968  2968 001F5  AC0C                  movw    ax,[hl+12]      ; digit                         ;[INF] 2, 1
 2969  2969 001F7  440700                cmpw    ax,#07H ; 7                                     ;[INF] 3, 1
 2970  2970 001FA  61C8                  skc                                                     ;[INF] 2, 1
 2971  2971 001FC  EE8B00                br      $!?L0055                                        ;[INF] 3, 3
 2972  2972 001FF  12                    movw    bc,ax                                           ;[INF] 1, 1
 2973  2973 00200 R491A00                mov     a,?L0057+14[bc]                                 ;[INF] 3, 1
 2974  2974 00203  311C                  shlw    bc,1                                            ;[INF] 2, 1
 2975  2975 00205  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 2976  2976 00207 R790C00                movw    ax,?L0057[bc]                                   ;[INF] 3, 1
 2977  2977 0020A  61CB                  br      ax                                              ;[INF] 2, 3
 2978  2978                      ; line   321 :     {
 2979  2979 0020C                ??bb00_SECTB_Glyph_Map:
 2980  2980                      ; line   322 :         /* First Digit */    
 2981  2981                      ; line   323 :         case 0:
 2982  2982 0020C                ?L0048:
 2983  2983                      ; line   324 :         {
 2984  2984 0020C                ??bb01_SECTB_Glyph_Map:
 2985  2985                      ; line   325 :             PinPtr1 = &SEG28_DEF;
 2986  2986                      $DGL    0,12
 2987  2987 0020C  301D04                movw    ax,#041DH       ; 1053                          ;[INF] 3, 1
 2988  2988 0020F  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 2989  2989                      ; line   326 :             PinPtr2 = &SEG29_DEF;
 2990  2990                      $DGL    0,13
 2991  2991 00211  A1                    incw    ax                                              ;[INF] 1, 1
 2992  2992 00212  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 2993  2993 00213                ??eb01_SECTB_Glyph_Map:
 2994  2994                      ; line   327 :         }
 2995  2995                      ; line   328 :         break;
 2996  2996                      $DGL    0,15
 2997  2997 00213  EF75                  br      $?L0047                                         ;[INF] 2, 3
 2998  2998                      ; line   329 : 
 2999  2999                      ; line   330 :         /* Second Digit */        
 3000  3000                      ; line   331 :         case 1:
 3001  3001 00215                ?L0049:
 3002  3002                      ; line   332 :         {
 3003  3003 00215                ??bb02_SECTB_Glyph_Map:
 3004  3004                      ; line   333 :             PinPtr1 = &SEG26_DEF;
 3005  3005                      $DGL    0,20
 3006  3006 00215  301B04                movw    ax,#041BH       ; 1051                          ;[INF] 3, 1
 3007  3007 00218  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3008  3008                      ; line   334 :             PinPtr2 = &SEG27_DEF;
 3009  3009                      $DGL    0,21
 3010  3010 0021A  A1                    incw    ax                                              ;[INF] 1, 1
 3011  3011 0021B  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3012  3012 0021C                ??eb02_SECTB_Glyph_Map:
 3013  3013                      ; line   335 :         }    
 3014  3014                      ; line   336 :         break;
 3015  3015                      $DGL    0,23
 3016  3016 0021C  EF6C                  br      $?L0047                                         ;[INF] 2, 3
 3017  3017                      ; line   337 :         
 3018  3018                      ; line   338 :         /* Third Digit */
 3019  3019                      ; line   339 :         case 2:
 3020  3020 0021E                ?L0050:
 3021  3021                      ; line   340 :         {
 3022  3022 0021E                ??bb03_SECTB_Glyph_Map:
 3023  3023                      ; line   341 :             PinPtr1 = &SEG24_DEF;
 3024  3024                      $DGL    0,28
 3025  3025 0021E  301804                movw    ax,#0418H       ; 1048                          ;[INF] 3, 1
 3026  3026 00221  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3027  3027                      ; line   342 :             PinPtr2 = &SEG25_DEF;
 3028  3028                      $DGL    0,29
 3029  3029 00223  A1                    incw    ax                                              ;[INF] 1, 1
 3030  3030 00224  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3031  3031 00225                ??eb03_SECTB_Glyph_Map:
 3032  3032                      ; line   343 :         }    
 3033  3033                      ; line   344 :         break;
 3034  3034                      $DGL    0,31
 3035  3035 00225  EF63                  br      $?L0047                                         ;[INF] 2, 3
 3036  3036                      ; line   345 :         
 3037  3037                      ; line   346 :         /* Colon/Decimal Point */
 3038  3038                      ; line   347 :         case 3:
 3039  3039 00227                ?L0051:
 3040  3040                      ; line   348 :         {
 3041  3041 00227                ??bb04_SECTB_Glyph_Map:
 3042  3042                      ; line   349 :             PinPtr1 = &SEG23_DEF;
 3043  3043                      $DGL    0,36
 3044  3044 00227  301704                movw    ax,#0417H       ; 1047                          ;[INF] 3, 1
 3045  3045 0022A  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3046  3046                      ; line   350 :             PinPtr2 = PDL_NO_PTR;
 3047  3047                      $DGL    0,37
 3048  3048 0022C  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 3049  3049 0022F  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3050  3050 00230                ??eb04_SECTB_Glyph_Map:
 3051  3051                      ; line   351 :         }    
 3052  3052                      ; line   352 :         break;
 3053  3053                      $DGL    0,39
 3054  3054 00230  EF58                  br      $?L0047                                         ;[INF] 2, 3
 3055  3055                      ; line   353 :         
 3056  3056                      ; line   354 :         /* Fourth Digit */        
 3057  3057                      ; line   355 :         case 4:
 3058  3058 00232                ?L0052:
 3059  3059                      ; line   356 :         {
 3060  3060 00232                ??bb05_SECTB_Glyph_Map:
 3061  3061                      ; line   357 :             PinPtr1 = &SEG21_DEF;
 3062  3062                      $DGL    0,44
 3063  3063 00232  301504                movw    ax,#0415H       ; 1045                          ;[INF] 3, 1
 3064  3064 00235  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3065  3065                      ; line   358 :             PinPtr2 = &SEG22_DEF;
 3066  3066                      $DGL    0,45
 3067  3067 00237  A1                    incw    ax                                              ;[INF] 1, 1
 3068  3068 00238  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3069  3069 00239                ??eb05_SECTB_Glyph_Map:
 3070  3070                      ; line   359 :         }    
 3071  3071                      ; line   360 :         break;
 3072  3072                      $DGL    0,47
 3073  3073 00239  EF4F                  br      $?L0047                                         ;[INF] 2, 3
 3074  3074                      ; line   361 : 
 3075  3075                      ; line   362 :         /* Fifth Digit */        
 3076  3076                      ; line   363 :         case 5:
 3077  3077 0023B                ?L0053:
 3078  3078                      ; line   364 :         {
 3079  3079 0023B                ??bb06_SECTB_Glyph_Map:
 3080  3080                      ; line   365 :             PinPtr1 = &SEG19_DEF;
 3081  3081                      $DGL    0,52
 3082  3082 0023B  301304                movw    ax,#0413H       ; 1043                          ;[INF] 3, 1
 3083  3083 0023E  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3084  3084                      ; line   366 :             PinPtr2 = &SEG20_DEF;
 3085  3085                      $DGL    0,53
 3086  3086 00240  A1                    incw    ax                                              ;[INF] 1, 1
 3087  3087 00241  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3088  3088 00242                ??eb06_SECTB_Glyph_Map:
 3089  3089                      ; line   367 :         }    
 3090  3090                      ; line   368 :         break;
 3091  3091                      $DGL    0,55
 3092  3092 00242  EF46                  br      $?L0047                                         ;[INF] 2, 3
 3093  3093                      ; line   369 :         
 3094  3094                      ; line   370 :         /* AM/PM Indicator */
 3095  3095                      ; line   371 :         case 6:
 3096  3096 00244                ?L0054:
 3097  3097                      ; line   372 :         {
 3098  3098 00244                ??bb07_SECTB_Glyph_Map:
 3099  3099                      ; line   373 :             /* Nullify Pointers */
 3100  3100                      ; line   374 :             PinPtr1 = PDL_NO_PTR;
 3101  3101                      $DGL    0,61
 3102  3102 00244  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 3103  3103 00247  BC02                  movw    [hl+2],ax       ; PinPtr1                       ;[INF] 2, 1
 3104  3104                      ; line   375 :             PinPtr2 = PDL_NO_PTR;
 3105  3105                      $DGL    0,62
 3106  3106 00249  BB                    movw    [hl],ax ; PinPtr2                               ;[INF] 1, 1
 3107  3107                      ; line   376 :             
 3108  3108                      ; line   377 :             /* If last digit is A */
 3109  3109                      ; line   378 :             if (glyph == 0x0E)
 3110  3110                      $DGL    0,65
 3111  3111 0024A  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3112  3112 0024C  4C0E                  cmp     a,#0EH  ; 14                                    ;[INF] 2, 1
 3113  3113 0024E  DF12                  bnz     $?L0058                                         ;[INF] 2, 4
 3114  3114                      ; line   379 :             {
 3115  3115 00250                ??bb08_SECTB_Glyph_Map:
 3116  3116                      ; line   380 :                /* AM Indicator On */
 3117  3117                      ; line   381 :                 SEG18_DEF |= 0x01U;
 3118  3118                      $DGL    0,68
 3119  3119 00250  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 3120  3120 00253  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3121  3121 00255  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 3122  3122                      ; line   382 :                 
 3123  3123                      ; line   383 :                 /* PM Indicator Off */
 3124  3124                      ; line   384 :                 SEG16_DEF &= 0xFDU;
 3125  3125                      $DGL    0,71
 3126  3126 00258  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3127  3127 0025B  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 3128  3128 0025D  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3129  3129 00260                ??eb08_SECTB_Glyph_Map:
 3130  3130                      ; line   385 :             }
 3131  3131                      ; line   386 : 
 3132  3132                      ; line   387 :             /* If last digit is P */
 3133  3133                      ; line   388 :             else if (glyph == 0x1DU)
 3134  3134                      $DGL    0,75
 3135  3135 00260  EF28                  br      $?L0059                                         ;[INF] 2, 3
 3136  3136 00262                ?L0058:
 3137  3137 00262  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3138  3138 00264  4C1D                  cmp     a,#01DH ; 29                                    ;[INF] 2, 1
 3139  3139 00266  DF12                  bnz     $?L0060                                         ;[INF] 2, 4
 3140  3140                      ; line   389 :             {
 3141  3141 00268                ??bb09_SECTB_Glyph_Map:
 3142  3142                      ; line   390 :                 /* AM Indicator Off */
 3143  3143                      ; line   391 :                 SEG18_DEF &= 0xFEU;
 3144  3144                      $DGL    0,78
 3145  3145 00268  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 3146  3146 0026B  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3147  3147 0026D  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 3148  3148                      ; line   392 :                 
 3149  3149                      ; line   393 :                 /* PM Indicator On */
 3150  3150                      ; line   394 :                 SEG16_DEF |= 0x02U;
 3151  3151                      $DGL    0,81
 3152  3152 00270  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3153  3153 00273  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 3154  3154 00275  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3155  3155 00278                ??eb09_SECTB_Glyph_Map:
 3156  3156                      ; line   395 :             }
 3157  3157                      ; line   396 :             
 3158  3158                      ; line   397 :             /* If last digit is other */
 3159  3159                      ; line   398 :             else
 3160  3160                      $DGL    0,85
 3161  3161 00278  EF10                  br      $?L0061                                         ;[INF] 2, 3
 3162  3162 0027A                ?L0060:
 3163  3163                      ; line   399 :             {
 3164  3164 0027A                ??bb0A_SECTB_Glyph_Map:
 3165  3165                      ; line   400 :                 /* AM Indicator Off */
 3166  3166                      ; line   401 :                 SEG18_DEF &= 0xFEU;
 3167  3167                      $DGL    0,88
 3168  3168 0027A  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 3169  3169 0027D  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3170  3170 0027F  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 3171  3171                      ; line   402 :                 
 3172  3172                      ; line   403 :                 /* PM Indicator Off */
 3173  3173                      ; line   404 :                 SEG16_DEF &= 0xFDU;
 3174  3174                      $DGL    0,91
 3175  3175 00282  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3176  3176 00285  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 3177  3177 00287  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3178  3178 0028A                ??eb0A_SECTB_Glyph_Map:
 3179  3179                      ; line   405 :             }
 3180  3180 0028A                ?L0061:
 3181  3181 0028A                ?L0059:
 3182  3182 0028A                ??eb07_SECTB_Glyph_Map:
 3183  3183                      ; line   406 :         }    
 3184  3184                      ; line   407 :         break;
 3185  3185                      ; line   408 :         
 3186  3186                      ; line   409 :         /* Handles undefined cases */
 3187  3187                      ; line   410 :         default:
 3188  3188 0028A                ?L0055:
 3189  3189                      ; line   411 :         {
 3190  3190 0028A                ??bb0B_SECTB_Glyph_Map:
 3191  3191 0028A                ??eb0B_SECTB_Glyph_Map:
 3192  3192                      ; line   412 :             /* Do nothing */
 3193  3193                      ; line   413 :         }
 3194  3194                      ; line   414 :         break;
 3195  3195 0028A                ??eb00_SECTB_Glyph_Map:
 3196  3196                      ; line   415 :     }
 3197  3197 0028A                ?L0047:
 3198  3198                      ; line   416 : 
 3199  3199                      ; line   417 :     /* Bit Mask Segments */
 3200  3200                      ; line   418 :     *PinPtr1 &= 0xF0U;
 3201  3201                      $DGL    0,105
 3202  3202 0028A  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 3203  3203 0028C  14                    movw    de,ax                                           ;[INF] 1, 1
 3204  3204 0028D  89                    mov     a,[de]                                          ;[INF] 1, 1
 3205  3205 0028E  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3206  3206 00290  99                    mov     [de],a                                          ;[INF] 1, 1
 3207  3207                      ; line   419 :     *PinPtr2 &= 0xF1U;
 3208  3208                      $DGL    0,106
 3209  3209 00291  AB                    movw    ax,[hl] ; PinPtr2                               ;[INF] 1, 1
 3210  3210 00292  14                    movw    de,ax                                           ;[INF] 1, 1
 3211  3211 00293  89                    mov     a,[de]                                          ;[INF] 1, 1
 3212  3212 00294  5CF1                  and     a,#0F1H ; 241                                   ;[INF] 2, 1
 3213  3213 00296  99                    mov     [de],a                                          ;[INF] 1, 1
 3214  3214                      ; line   420 :         
 3215  3215                      ; line   421 :     /* Is colon/decimal point ? */
 3216  3216                      ; line   422 :     if (digit == 3)
 3217  3217                      $DGL    0,109
 3218  3218 00297  300300                movw    ax,#03H ; 3                                     ;[INF] 3, 1
 3219  3219 0029A  61490C                cmpw    ax,[hl+12]      ; digit                         ;[INF] 3, 1
 3220  3220 0029D  DF27                  bnz     $?L0062                                         ;[INF] 2, 4
 3221  3221                      ; line   423 :     {    
 3222  3222 0029F                ??bb0C_SECTB_Glyph_Map:
 3223  3223                      ; line   424 :         /* Is Colon? */
 3224  3224                      ; line   425 :         if (glyph == ':')
 3225  3225                      $DGL    0,112
 3226  3226 0029F  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3227  3227 002A1  4C3A                  cmp     a,#03AH ; 58                                    ;[INF] 2, 1
 3228  3228 002A3  DF09                  bnz     $?L0064                                         ;[INF] 2, 4
 3229  3229                      ; line   426 :         {
 3230  3230 002A5                ??bb0D_SECTB_Glyph_Map:
 3231  3231                      ; line   427 :             /* Turn on Colon */
 3232  3232                      ; line   428 :             *PinPtr1 |= 0x02U;
 3233  3233                      $DGL    0,115
 3234  3234 002A5  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 3235  3235 002A7  14                    movw    de,ax                                           ;[INF] 1, 1
 3236  3236 002A8  89                    mov     a,[de]                                          ;[INF] 1, 1
 3237  3237 002A9  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 3238  3238 002AB  99                    mov     [de],a                                          ;[INF] 1, 1
 3239  3239 002AC                ??eb0D_SECTB_Glyph_Map:
 3240  3240                      ; line   429 :         }
 3241  3241                      ; line   430 : 
 3242  3242                      ; line   431 :         /* Is Decimal Point? */
 3243  3243                      ; line   432 :         else if (glyph == '.')
 3244  3244                      $DGL    0,119
 3245  3245 002AC  EF16                  br      $?L0065                                         ;[INF] 2, 3
 3246  3246 002AE                ?L0064:
 3247  3247 002AE  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3248  3248 002B0  4C2E                  cmp     a,#02EH ; 46                                    ;[INF] 2, 1
 3249  3249 002B2  DF09                  bnz     $?L0066                                         ;[INF] 2, 4
 3250  3250                      ; line   433 :         {
 3251  3251 002B4                ??bb0E_SECTB_Glyph_Map:
 3252  3252                      ; line   434 :             /* Turn off Colon */
 3253  3253                      ; line   435 :             *PinPtr1 &= 0xFDU;
 3254  3254                      $DGL    0,122
 3255  3255 002B4  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 3256  3256 002B6  14                    movw    de,ax                                           ;[INF] 1, 1
 3257  3257 002B7  89                    mov     a,[de]                                          ;[INF] 1, 1
 3258  3258 002B8  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 3259  3259 002BA  99                    mov     [de],a                                          ;[INF] 1, 1
 3260  3260 002BB                ??eb0E_SECTB_Glyph_Map:
 3261  3261                      ; line   436 :         }
 3262  3262                      ; line   437 :         
 3263  3263                      ; line   438 :         /* Is neither? */
 3264  3264                      ; line   439 :         else
 3265  3265                      $DGL    0,126
 3266  3266 002BB  EF07                  br      $?L0067                                         ;[INF] 2, 3
 3267  3267 002BD                ?L0066:
 3268  3268                      ; line   440 :         {
 3269  3269 002BD                ??bb0F_SECTB_Glyph_Map:
 3270  3270                      ; line   441 :            /* Turn off Decimal Point & Colon */
 3271  3271                      ; line   442 :             *PinPtr1 &= 0xFCU;
 3272  3272                      $DGL    0,129
 3273  3273 002BD  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 3274  3274 002BF  14                    movw    de,ax                                           ;[INF] 1, 1
 3275  3275 002C0  89                    mov     a,[de]                                          ;[INF] 1, 1
 3276  3276 002C1  5CFC                  and     a,#0FCH ; 252                                   ;[INF] 2, 1
 3277  3277 002C3  99                    mov     [de],a                                          ;[INF] 1, 1
 3278  3278 002C4                ??eb0F_SECTB_Glyph_Map:
 3279  3279                      ; line   443 :         }
 3280  3280 002C4                ?L0067:
 3281  3281 002C4                ?L0065:
 3282  3282 002C4                ??eb0C_SECTB_Glyph_Map:
 3283  3283                      ; line   444 :     }
 3284  3284                      ; line   445 :     else if (glyph != 0x29)
 3285  3285                      $DGL    0,132
 3286  3286 002C4  EF2B                  br      $?L0063                                         ;[INF] 2, 3
 3287  3287 002C6                ?L0062:
 3288  3288 002C6  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3289  3289 002C8  4C29                  cmp     a,#029H ; 41                                    ;[INF] 2, 1
 3290  3290 002CA  DD25                  bz      $?L0068                                         ;[INF] 2, 4
 3291  3291                      ; line   446 :     {
 3292  3292 002CC                ??bb10_SECTB_Glyph_Map:
 3293  3293                      ; line   447 :         /* Map Glyph to Segments */
 3294  3294                      ; line   448 :         *PinPtr1 |= (uint8_t)SECTB_map[glyph].BYTE.TWO;
 3295  3295                      $DGL    0,135
 3296  3296 002CC  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3297  3297 002CE  F0                    clrb    x                                               ;[INF] 1, 1
 3298  3298 002CF  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3299  3299 002D1  12                    movw    bc,ax                                           ;[INF] 1, 1
 3300  3300 002D2 R495000                mov     a,_SECTB_map[bc]                                ;[INF] 3, 1
 3301  3301 002D5  314A                  shr     a,4                                             ;[INF] 2, 1
 3302  3302 002D7  72                    mov     c,a                                             ;[INF] 1, 1
 3303  3303 002D8  AC02                  movw    ax,[hl+2]       ; PinPtr1                       ;[INF] 2, 1
 3304  3304 002DA  14                    movw    de,ax                                           ;[INF] 1, 1
 3305  3305 002DB  89                    mov     a,[de]                                          ;[INF] 1, 1
 3306  3306 002DC  616A                  or      a,c                                             ;[INF] 2, 1
 3307  3307 002DE  99                    mov     [de],a                                          ;[INF] 1, 1
 3308  3308                      ; line   449 :         *PinPtr2 |= (uint8_t)SECTB_map[glyph].BYTE.ONE;
 3309  3309                      $DGL    0,136
 3310  3310 002DF  8C04                  mov     a,[hl+4]        ; glyph                         ;[INF] 2, 1
 3311  3311 002E1  F0                    clrb    x                                               ;[INF] 1, 1
 3312  3312 002E2  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3313  3313 002E4  12                    movw    bc,ax                                           ;[INF] 1, 1
 3314  3314 002E5 R495000                mov     a,_SECTB_map[bc]                                ;[INF] 3, 1
 3315  3315 002E8  5C0F                  and     a,#0FH  ; 15                                    ;[INF] 2, 1
 3316  3316 002EA  72                    mov     c,a                                             ;[INF] 1, 1
 3317  3317 002EB  AB                    movw    ax,[hl] ; PinPtr2                               ;[INF] 1, 1
 3318  3318 002EC  14                    movw    de,ax                                           ;[INF] 1, 1
 3319  3319 002ED  89                    mov     a,[de]                                          ;[INF] 1, 1
 3320  3320 002EE  616A                  or      a,c                                             ;[INF] 2, 1
 3321  3321 002F0  99                    mov     [de],a                                          ;[INF] 1, 1
 3322  3322 002F1                ??eb10_SECTB_Glyph_Map:
 3323  3323                      ; line   450 :     }
 3324  3324                      ; line   451 :     else
 3325  3325 002F1                ?L0068:
 3326  3326                      ; line   452 :     {
 3327  3327 002F1                ??bb11_SECTB_Glyph_Map:
 3328  3328 002F1                ??eb11_SECTB_Glyph_Map:
 3329  3329                      ; line   453 :         /* Do nothing */
 3330  3330                      ; line   454 :     }
 3331  3331 002F1                ?L0069:
 3332  3332 002F1                ?L0063:
 3333  3333                      ; line   455 : }
 3334  3334                      $DGL    0,142
 3335  3335 002F1                ??ef_SECTB_Glyph_Map:
 3336  3336 002F1  1006                  addw    sp,#06H                                         ;[INF] 2, 1
 3337  3337 002F3  C6                    pop     hl                                              ;[INF] 1, 1
 3338  3338 002F4  D7                    ret                                                     ;[INF] 1, 6
 3339  3339 002F5                ??ee_SECTB_Glyph_Map:
 3340  3340                      ; line   456 : /***************************************************************
 3341  3341                      ;              ********************************************************
 3342  3342                      ; line   457 : End of function SECTB_Glyph_Map
 3343  3343                      ; line   458 : ****************************************************************
 3344  3344                      ;              *******************************************************/
 3345  3345                      ; line   459 : 
 3346  3346                      ; line   460 : /***************************************************************
 3347  3347                      ;              ********************************************************
 3348  3348                      ; line   461 : * Function Name : SECTC_Glyph_Map
 3349  3349                      ; line   462 : * Description   : Takes a validated char input and maps the char
 3350  3350                      ;              acter to a 
 3351  3351                      ; line   463 : *                 segment pattern, to be displayed on Section C 
 3352  3352                      ;              of the LCD panel.
 3353  3353                      ; line   464 : * Arguments     : uint8_t glyph 
 3354  3354                      ; line   465 : *                            - character to be displayed, 
 3355  3355                      ; line   466 :                   uint16_t digit 
 3356  3356                      ; line   467 : *                            - position of character
 3357  3357                      ; line   468 : * Return Value  : none
 3358  3358                      ; line   469 : ****************************************************************
 3359  3359                      ;              *******************************************************/
 3360  3360                      ; line   470 : void SECTC_Glyph_Map (const uint8_t glyph, const uint16_t digit)
 3361  3361                      ; line   471 : {
 3362  3362 002F5                _SECTC_Glyph_Map:
 3363  3363                      $DGL    1,257
 3364  3364 002F5  C7                    push    hl                                              ;[INF] 1, 1
 3365  3365 002F6  C1                    push    ax                                              ;[INF] 1, 1
 3366  3366 002F7  2008                  subw    sp,#08H                                         ;[INF] 2, 1
 3367  3367 002F9  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 3368  3368 002FC                ??bf_SECTC_Glyph_Map:
 3369  3369                      ; line   472 :     /* Declare Pin Address Pointers */
 3370  3370                      ; line   473 :     volatile uint8_t * PinPtr1 = PDL_NO_PTR;
 3371  3371                      $DGL    0,3
 3372  3372 002FC  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 3373  3373 002FF  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3374  3374                      ; line   474 :     volatile uint8_t * PinPtr2 = PDL_NO_PTR;
 3375  3375                      $DGL    0,4
 3376  3376 00301  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3377  3377                      ; line   475 :     volatile uint8_t * PinPtr3 = PDL_NO_PTR;
 3378  3378                      $DGL    0,5
 3379  3379 00303  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3380  3380                      ; line   476 :     volatile uint8_t * PinPtr4 = PDL_NO_PTR;
 3381  3381                      $DGL    0,6
 3382  3382 00305  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3383  3383                      ; line   477 :     
 3384  3384                      ; line   478 :     /* Set Pointers to Current Digit Pin Addresses */
 3385  3385                      ; line   479 :     switch (digit)
 3386  3386                      $DGL    0,9
 3387  3387 00306  AC10                  movw    ax,[hl+16]      ; digit                         ;[INF] 2, 1
 3388  3388 00308  440600                cmpw    ax,#06H ; 6                                     ;[INF] 3, 1
 3389  3389 0030B  DE65                  bnc     $?L0079                                         ;[INF] 2, 4
 3390  3390 0030D  12                    movw    bc,ax                                           ;[INF] 1, 1
 3391  3391 0030E R492E00                mov     a,?L0081+12[bc]                                 ;[INF] 3, 1
 3392  3392 00311  311C                  shlw    bc,1                                            ;[INF] 2, 1
 3393  3393 00313  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 3394  3394 00315 R792200                movw    ax,?L0081[bc]                                   ;[INF] 3, 1
 3395  3395 00318  61CB                  br      ax                                              ;[INF] 2, 3
 3396  3396                      ; line   480 :     {    
 3397  3397 0031A                ??bb00_SECTC_Glyph_Map:
 3398  3398                      ; line   481 :         /* First Digit (Specify Aux pins in order to use) */
 3399  3399                      ; line   482 :         case 0:
 3400  3400 0031A                ?L0073:
 3401  3401                      ; line   483 :         {
 3402  3402 0031A                ??bb01_SECTC_Glyph_Map:
 3403  3403                      ; line   484 :             PinPtr1 = (uint8_t *)Aux_pin5;
 3404  3404                      $DGL    0,14
 3405  3405 0031A  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 3406  3406 0031D  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3407  3407                      ; line   485 :             PinPtr2 = (uint8_t *)Aux_pin6;
 3408  3408                      $DGL    0,15
 3409  3409 0031F  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3410  3410                      ; line   486 :             PinPtr3 = (uint8_t *)Aux_pin47;
 3411  3411                      $DGL    0,16
 3412  3412 00321  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3413  3413                      ; line   487 :             PinPtr4 = (uint8_t *)Aux_pin48;
 3414  3414                      $DGL    0,17
 3415  3415 00323  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3416  3416 00324                ??eb01_SECTC_Glyph_Map:
 3417  3417                      ; line   488 :         }
 3418  3418                      ; line   489 :         break;
 3419  3419                      $DGL    0,19
 3420  3420 00324  EF4C                  br      $?L0072                                         ;[INF] 2, 3
 3421  3421                      ; line   490 : 
 3422  3422                      ; line   491 :         /* Second Digit */    
 3423  3423                      ; line   492 :         case 1:
 3424  3424 00326                ?L0074:
 3425  3425                      ; line   493 :         {
 3426  3426 00326                ??bb02_SECTC_Glyph_Map:
 3427  3427                      ; line   494 :             PinPtr1 = &SEG0_DEF;
 3428  3428                      $DGL    0,24
 3429  3429 00326  300004                movw    ax,#0400H       ; 1024                          ;[INF] 3, 1
 3430  3430 00329  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3431  3431                      ; line   495 :             PinPtr2 = &SEG1_DEF;
 3432  3432                      $DGL    0,25
 3433  3433 0032B  A1                    incw    ax                                              ;[INF] 1, 1
 3434  3434 0032C  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3435  3435                      ; line   496 :             PinPtr3 = &SEG38_DEF;
 3436  3436                      $DGL    0,26
 3437  3437 0032E  5027                  mov     x,#027H ; 39                                    ;[INF] 2, 1
 3438  3438 00330  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3439  3439 00332                ??eb02_SECTC_Glyph_Map:
 3440  3440                      ; line   497 :         }
 3441  3441                      ; line   498 :         break;
 3442  3442                      $DGL    0,28
 3443  3443 00332  EF3E                  br      $?L0072                                         ;[INF] 2, 3
 3444  3444                      ; line   499 :         
 3445  3445                      ; line   500 :         /* Third Digit */    
 3446  3446                      ; line   501 :         case 2:
 3447  3447 00334                ?L0075:
 3448  3448                      ; line   502 :         {
 3449  3449 00334                ??bb03_SECTC_Glyph_Map:
 3450  3450                      ; line   503 :             PinPtr1 = &SEG2_DEF;
 3451  3451                      $DGL    0,33
 3452  3452 00334  300204                movw    ax,#0402H       ; 1026                          ;[INF] 3, 1
 3453  3453 00337  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3454  3454                      ; line   504 :             PinPtr2 = &SEG3_DEF;
 3455  3455                      $DGL    0,34
 3456  3456 00339  A1                    incw    ax                                              ;[INF] 1, 1
 3457  3457 0033A  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3458  3458                      ; line   505 :             PinPtr3 = &SEG36_DEF;
 3459  3459                      $DGL    0,35
 3460  3460 0033C  5025                  mov     x,#025H ; 37                                    ;[INF] 2, 1
 3461  3461 0033E  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3462  3462                      ; line   506 :             PinPtr4 = &SEG37_DEF;
 3463  3463                      $DGL    0,36
 3464  3464 00340  A1                    incw    ax                                              ;[INF] 1, 1
 3465  3465 00341  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3466  3466 00342                ??eb03_SECTC_Glyph_Map:
 3467  3467                      ; line   507 :         }
 3468  3468                      ; line   508 :         break;
 3469  3469                      $DGL    0,38
 3470  3470 00342  EF2E                  br      $?L0072                                         ;[INF] 2, 3
 3471  3471                      ; line   509 :         
 3472  3472                      ; line   510 :         /* Four Digit */    
 3473  3473                      ; line   511 :         case 3:
 3474  3474 00344                ?L0076:
 3475  3475                      ; line   512 :         {
 3476  3476 00344                ??bb04_SECTC_Glyph_Map:
 3477  3477                      ; line   513 :             PinPtr1 = &SEG4_DEF;
 3478  3478                      $DGL    0,43
 3479  3479 00344  300404                movw    ax,#0404H       ; 1028                          ;[INF] 3, 1
 3480  3480 00347  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3481  3481                      ; line   514 :             PinPtr2 = &SEG5_DEF;
 3482  3482                      $DGL    0,44
 3483  3483 00349  A1                    incw    ax                                              ;[INF] 1, 1
 3484  3484 0034A  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3485  3485                      ; line   515 :             PinPtr3 = &SEG34_DEF;
 3486  3486                      $DGL    0,45
 3487  3487 0034C  5023                  mov     x,#023H ; 35                                    ;[INF] 2, 1
 3488  3488 0034E  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3489  3489                      ; line   516 :             PinPtr4 = &SEG35_DEF;
 3490  3490                      $DGL    0,46
 3491  3491 00350  A1                    incw    ax                                              ;[INF] 1, 1
 3492  3492 00351  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3493  3493 00352                ??eb04_SECTC_Glyph_Map:
 3494  3494                      ; line   517 :         }
 3495  3495                      ; line   518 :         break;
 3496  3496                      $DGL    0,48
 3497  3497 00352  EF1E                  br      $?L0072                                         ;[INF] 2, 3
 3498  3498                      ; line   519 :         
 3499  3499                      ; line   520 :         /* Fifth Digit */
 3500  3500                      ; line   521 :         case 4:
 3501  3501 00354                ?L0077:
 3502  3502                      ; line   522 :         {
 3503  3503 00354                ??bb05_SECTC_Glyph_Map:
 3504  3504                      ; line   523 :             PinPtr1 = &SEG6_DEF;
 3505  3505                      $DGL    0,53
 3506  3506 00354  300604                movw    ax,#0406H       ; 1030                          ;[INF] 3, 1
 3507  3507 00357  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3508  3508                      ; line   524 :             PinPtr2 = &SEG7_DEF;
 3509  3509                      $DGL    0,54
 3510  3510 00359  A1                    incw    ax                                              ;[INF] 1, 1
 3511  3511 0035A  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3512  3512                      ; line   525 :             PinPtr3 = &SEG32_DEF;
 3513  3513                      $DGL    0,55
 3514  3514 0035C  5021                  mov     x,#021H ; 33                                    ;[INF] 2, 1
 3515  3515 0035E  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3516  3516                      ; line   526 :             PinPtr4 = &SEG33_DEF;
 3517  3517                      $DGL    0,56
 3518  3518 00360  A1                    incw    ax                                              ;[INF] 1, 1
 3519  3519 00361  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3520  3520 00362                ??eb05_SECTC_Glyph_Map:
 3521  3521                      ; line   527 :         }
 3522  3522                      ; line   528 :         break;
 3523  3523                      $DGL    0,58
 3524  3524 00362  EF0E                  br      $?L0072                                         ;[INF] 2, 3
 3525  3525                      ; line   529 :         
 3526  3526                      ; line   530 :         /* Sixth Digit */
 3527  3527                      ; line   531 :         case 5:
 3528  3528 00364                ?L0078:
 3529  3529                      ; line   532 :         {
 3530  3530 00364                ??bb06_SECTC_Glyph_Map:
 3531  3531                      ; line   533 :             PinPtr1 = &SEG8_DEF;
 3532  3532                      $DGL    0,63
 3533  3533 00364  300804                movw    ax,#0408H       ; 1032                          ;[INF] 3, 1
 3534  3534 00367  BC06                  movw    [hl+6],ax       ; PinPtr1                       ;[INF] 2, 1
 3535  3535                      ; line   534 :             PinPtr2 = &SEG9_DEF;
 3536  3536                      $DGL    0,64
 3537  3537 00369  A1                    incw    ax                                              ;[INF] 1, 1
 3538  3538 0036A  BC04                  movw    [hl+4],ax       ; PinPtr2                       ;[INF] 2, 1
 3539  3539                      ; line   535 :             PinPtr3 = &SEG30_DEF;
 3540  3540                      $DGL    0,65
 3541  3541 0036C  501F                  mov     x,#01FH ; 31                                    ;[INF] 2, 1
 3542  3542 0036E  BC02                  movw    [hl+2],ax       ; PinPtr3                       ;[INF] 2, 1
 3543  3543                      ; line   536 :             PinPtr4 = &SEG31_DEF;
 3544  3544                      $DGL    0,66
 3545  3545 00370  A1                    incw    ax                                              ;[INF] 1, 1
 3546  3546 00371  BB                    movw    [hl],ax ; PinPtr4                               ;[INF] 1, 1
 3547  3547 00372                ??eb06_SECTC_Glyph_Map:
 3548  3548                      ; line   537 :         }
 3549  3549                      ; line   538 :         break;
 3550  3550                      ; line   539 :         
 3551  3551                      ; line   540 :         /* LCD display only has 6 alpha-numeric segments */
 3552  3552                      ; line   541 :         default:
 3553  3553 00372                ?L0079:
 3554  3554                      ; line   542 :         {
 3555  3555 00372                ??bb07_SECTC_Glyph_Map:
 3556  3556 00372                ??eb07_SECTC_Glyph_Map:
 3557  3557                      ; line   543 :             /* Bad Selection */
 3558  3558                      ; line   544 :         }
 3559  3559                      ; line   545 :         break;
 3560  3560 00372                ??eb00_SECTC_Glyph_Map:
 3561  3561                      ; line   546 :     }
 3562  3562 00372                ?L0072:
 3563  3563                      ; line   547 :     
 3564  3564                      ; line   548 :     /* Bit Mask All Segments */
 3565  3565                      ; line   549 :     *PinPtr1 &= 0xF0U;
 3566  3566                      $DGL    0,79
 3567  3567 00372  AC06                  movw    ax,[hl+6]       ; PinPtr1                       ;[INF] 2, 1
 3568  3568 00374  14                    movw    de,ax                                           ;[INF] 1, 1
 3569  3569 00375  89                    mov     a,[de]                                          ;[INF] 1, 1
 3570  3570 00376  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3571  3571 00378  99                    mov     [de],a                                          ;[INF] 1, 1
 3572  3572                      ; line   550 :     *PinPtr2 &= 0xF0U;
 3573  3573                      $DGL    0,80
 3574  3574 00379  AC04                  movw    ax,[hl+4]       ; PinPtr2                       ;[INF] 2, 1
 3575  3575 0037B  14                    movw    de,ax                                           ;[INF] 1, 1
 3576  3576 0037C  89                    mov     a,[de]                                          ;[INF] 1, 1
 3577  3577 0037D  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3578  3578 0037F  99                    mov     [de],a                                          ;[INF] 1, 1
 3579  3579                      ; line   551 :     *PinPtr3 &= 0xF1U;
 3580  3580                      $DGL    0,81
 3581  3581 00380  AC02                  movw    ax,[hl+2]       ; PinPtr3                       ;[INF] 2, 1
 3582  3582 00382  14                    movw    de,ax                                           ;[INF] 1, 1
 3583  3583 00383  89                    mov     a,[de]                                          ;[INF] 1, 1
 3584  3584 00384  5CF1                  and     a,#0F1H ; 241                                   ;[INF] 2, 1
 3585  3585 00386  99                    mov     [de],a                                          ;[INF] 1, 1
 3586  3586                      ; line   552 :     *PinPtr4 &= 0xF0U;
 3587  3587                      $DGL    0,82
 3588  3588 00387  AB                    movw    ax,[hl] ; PinPtr4                               ;[INF] 1, 1
 3589  3589 00388  14                    movw    de,ax                                           ;[INF] 1, 1
 3590  3590 00389  89                    mov     a,[de]                                          ;[INF] 1, 1
 3591  3591 0038A  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3592  3592 0038C  99                    mov     [de],a                                          ;[INF] 1, 1
 3593  3593                      ; line   553 :     
 3594  3594                      ; line   554 :     /* Check if glyph is not 0x29 */
 3595  3595                      ; line   555 :     if (glyph != 0x29)   /* LA8A is 0x28 */
 3596  3596                      $DGL    0,85
 3597  3597 0038D  8C08                  mov     a,[hl+8]        ; glyph                         ;[INF] 2, 1
 3598  3598 0038F  4C29                  cmp     a,#029H ; 41                                    ;[INF] 2, 1
 3599  3599 00391  DD4B                  bz      $?L0082                                         ;[INF] 2, 4
 3600  3600                      ; line   556 :     {
 3601  3601 00393                ??bb08_SECTC_Glyph_Map:
 3602  3602                      ; line   557 :         /* Map Glyph To Segments */
 3603  3603                      ; line   558 :         *PinPtr4 |= (uint8_t)SECTC_map[glyph].BYTE.ONE;
 3604  3604                      $DGL    0,88
 3605  3605 00393  8C08                  mov     a,[hl+8]        ; glyph                         ;[INF] 2, 1
 3606  3606 00395  F0                    clrb    x                                               ;[INF] 1, 1
 3607  3607 00396  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3608  3608 00398  12                    movw    bc,ax                                           ;[INF] 1, 1
 3609  3609 00399 R49A000                mov     a,_SECTC_map[bc]                                ;[INF] 3, 1
 3610  3610 0039C  5C0F                  and     a,#0FH  ; 15                                    ;[INF] 2, 1
 3611  3611 0039E  72                    mov     c,a                                             ;[INF] 1, 1
 3612  3612 0039F  AB                    movw    ax,[hl] ; PinPtr4                               ;[INF] 1, 1
 3613  3613 003A0  14                    movw    de,ax                                           ;[INF] 1, 1
 3614  3614 003A1  89                    mov     a,[de]                                          ;[INF] 1, 1
 3615  3615 003A2  616A                  or      a,c                                             ;[INF] 2, 1
 3616  3616 003A4  99                    mov     [de],a                                          ;[INF] 1, 1
 3617  3617                      ; line   559 :         *PinPtr3 |= (uint8_t)SECTC_map[glyph].BYTE.TWO;
 3618  3618                      $DGL    0,89
 3619  3619 003A5  8C08                  mov     a,[hl+8]        ; glyph                         ;[INF] 2, 1
 3620  3620 003A7  F0                    clrb    x                                               ;[INF] 1, 1
 3621  3621 003A8  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3622  3622 003AA  12                    movw    bc,ax                                           ;[INF] 1, 1
 3623  3623 003AB R49A000                mov     a,_SECTC_map[bc]                                ;[INF] 3, 1
 3624  3624 003AE  314A                  shr     a,4                                             ;[INF] 2, 1
 3625  3625 003B0  72                    mov     c,a                                             ;[INF] 1, 1
 3626  3626 003B1  AC02                  movw    ax,[hl+2]       ; PinPtr3                       ;[INF] 2, 1
 3627  3627 003B3  14                    movw    de,ax                                           ;[INF] 1, 1
 3628  3628 003B4  89                    mov     a,[de]                                          ;[INF] 1, 1
 3629  3629 003B5  616A                  or      a,c                                             ;[INF] 2, 1
 3630  3630 003B7  99                    mov     [de],a                                          ;[INF] 1, 1
 3631  3631                      ; line   560 :         *PinPtr2 |= (uint8_t)SECTC_map[glyph].BYTE.THREE;
 3632  3632                      $DGL    0,90
 3633  3633 003B8  8C08                  mov     a,[hl+8]        ; glyph                         ;[INF] 2, 1
 3634  3634 003BA  F0                    clrb    x                                               ;[INF] 1, 1
 3635  3635 003BB  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3636  3636 003BD  12                    movw    bc,ax                                           ;[INF] 1, 1
 3637  3637 003BE R49A100                mov     a,_SECTC_map+1[bc]                              ;[INF] 3, 1
 3638  3638 003C1  5C0F                  and     a,#0FH  ; 15                                    ;[INF] 2, 1
 3639  3639 003C3  72                    mov     c,a                                             ;[INF] 1, 1
 3640  3640 003C4  AC04                  movw    ax,[hl+4]       ; PinPtr2                       ;[INF] 2, 1
 3641  3641 003C6  14                    movw    de,ax                                           ;[INF] 1, 1
 3642  3642 003C7  89                    mov     a,[de]                                          ;[INF] 1, 1
 3643  3643 003C8  616A                  or      a,c                                             ;[INF] 2, 1
 3644  3644 003CA  99                    mov     [de],a                                          ;[INF] 1, 1
 3645  3645                      ; line   561 :         *PinPtr1 |= (uint8_t)SECTC_map[glyph].BYTE.FOUR;
 3646  3646                      $DGL    0,91
 3647  3647 003CB  8C08                  mov     a,[hl+8]        ; glyph                         ;[INF] 2, 1
 3648  3648 003CD  F0                    clrb    x                                               ;[INF] 1, 1
 3649  3649 003CE  316E                  shrw    ax,6                                            ;[INF] 2, 1
 3650  3650 003D0  12                    movw    bc,ax                                           ;[INF] 1, 1
 3651  3651 003D1 R49A100                mov     a,_SECTC_map+1[bc]                              ;[INF] 3, 1
 3652  3652 003D4  314A                  shr     a,4                                             ;[INF] 2, 1
 3653  3653 003D6  72                    mov     c,a                                             ;[INF] 1, 1
 3654  3654 003D7  AC06                  movw    ax,[hl+6]       ; PinPtr1                       ;[INF] 2, 1
 3655  3655 003D9  14                    movw    de,ax                                           ;[INF] 1, 1
 3656  3656 003DA  89                    mov     a,[de]                                          ;[INF] 1, 1
 3657  3657 003DB  616A                  or      a,c                                             ;[INF] 2, 1
 3658  3658 003DD  99                    mov     [de],a                                          ;[INF] 1, 1
 3659  3659 003DE                ??eb08_SECTC_Glyph_Map:
 3660  3660                      ; line   562 :     }
 3661  3661 003DE                ?L0082:
 3662  3662 003DE                ?L0083:
 3663  3663                      ; line   563 : }
 3664  3664                      $DGL    0,93
 3665  3665 003DE                ??ef_SECTC_Glyph_Map:
 3666  3666 003DE  100A                  addw    sp,#0AH                                         ;[INF] 2, 1
 3667  3667 003E0  C6                    pop     hl                                              ;[INF] 1, 1
 3668  3668 003E1  D7                    ret                                                     ;[INF] 1, 6
 3669  3669 003E2                ??ee_SECTC_Glyph_Map:
 3670  3670                      ; line   564 : /***************************************************************
 3671  3671                      ;              ********************************************************
 3672  3672                      ; line   565 : End of function SECTC_Glyph_Map
 3673  3673                      ; line   566 : ****************************************************************
 3674  3674                      ;              *******************************************************/
 3675  3675                      ; line   567 : 
 3676  3676                      ; line   568 : 
 3677  3677                      ; line   569 : /***************************************************************
 3678  3678                      ;              ********************************************************
 3679  3679                      ; line   570 : Function Name : SECTD_Glyph_Map
 3680  3680                      ; line   571 : Description   : Takes a number input, and sets the level of the 
 3681  3681                      ;              battery indicator (section D)
 3682  3682                      ; line   572 : Argument      : uint8_t level 
 3683  3683                      ; line   573 : *                  - Indicator Level (char)
 3684  3684                      ; line   574 : Return Values : None
 3685  3685                      ; line   575 : ****************************************************************
 3686  3686                      ;              *******************************************************/
 3687  3687                      ; line   576 : void SECTD_Glyph_Map (const uint8_t level)
 3688  3688                      ; line   577 : {
 3689  3689 003E2                _SECTD_Glyph_Map:
 3690  3690                      $DGL    1,309
 3691  3691 003E2  C7                    push    hl                                              ;[INF] 1, 1
 3692  3692 003E3  C1                    push    ax                                              ;[INF] 1, 1
 3693  3693 003E4  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 3694  3694 003E7                ??bf_SECTD_Glyph_Map:
 3695  3695                      ; line   578 :     /* Switch to segment option */
 3696  3696                      ; line   579 :     switch (level)
 3697  3697                      $DGL    0,3
 3698  3698 003E7  8B                    mov     a,[hl]  ; level                                 ;[INF] 1, 1
 3699  3699 003E8  318E                  shrw    ax,8                                            ;[INF] 2, 1
 3700  3700 003EA  440500                cmpw    ax,#05H ; 5                                     ;[INF] 3, 1
 3701  3701 003ED  61C8                  skc                                                     ;[INF] 2, 1
 3702  3702 003EF  EE7D00                br      $!?L0092                                        ;[INF] 3, 3
 3703  3703 003F2  12                    movw    bc,ax                                           ;[INF] 1, 1
 3704  3704 003F3 R493E00                mov     a,?L0094+10[bc]                                 ;[INF] 3, 1
 3705  3705 003F6  311C                  shlw    bc,1                                            ;[INF] 2, 1
 3706  3706 003F8  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 3707  3707 003FA R793400                movw    ax,?L0094[bc]                                   ;[INF] 3, 1
 3708  3708 003FD  61CB                  br      ax                                              ;[INF] 2, 3
 3709  3709                      ; line   580 :     {    
 3710  3710 003FF                ??bb00_SECTD_Glyph_Map:
 3711  3711                      ; line   581 :         /* Battery Outline On */    
 3712  3712                      ; line   582 :         case 0:
 3713  3713 003FF                ?L0087:
 3714  3714                      ; line   583 :         {
 3715  3715 003FF                ??bb01_SECTD_Glyph_Map:
 3716  3716                      ; line   584 :             SEG17_DEF &= 0xF0U;
 3717  3717                      $DGL    0,8
 3718  3718 003FF  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3719  3719 00402  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3720  3720 00404  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3721  3721                      ; line   585 :             SEG16_DEF |= 0x01U;
 3722  3722                      $DGL    0,9
 3723  3723 00407  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3724  3724 0040A  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3725  3725 0040C  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3726  3726 0040F                ??eb01_SECTD_Glyph_Map:
 3727  3727                      ; line   586 :         }
 3728  3728                      ; line   587 :         break;
 3729  3729                      $DGL    0,11
 3730  3730 0040F  EF5E                  br      $?L0086                                         ;[INF] 2, 3
 3731  3731                      ; line   588 :         
 3732  3732                      ; line   589 :         /* Battery Outline & 1 Level */
 3733  3733                      ; line   590 :         case 1:
 3734  3734 00411                ?L0088:
 3735  3735                      ; line   591 :         {
 3736  3736 00411                ??bb02_SECTD_Glyph_Map:
 3737  3737                      ; line   592 :             SEG17_DEF &= 0xF0U;
 3738  3738                      $DGL    0,16
 3739  3739 00411  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3740  3740 00414  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3741  3741 00416  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3742  3742                      ; line   593 :             SEG17_DEF |= 0x08U;
 3743  3743                      $DGL    0,17
 3744  3744 00419  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3745  3745 0041C  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 3746  3746 0041E  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3747  3747                      ; line   594 :             SEG16_DEF |= 0x01U;
 3748  3748                      $DGL    0,18
 3749  3749 00421  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3750  3750 00424  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3751  3751 00426  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3752  3752 00429                ??eb02_SECTD_Glyph_Map:
 3753  3753                      ; line   595 :         }
 3754  3754                      ; line   596 :         break; 
 3755  3755                      $DGL    0,20
 3756  3756 00429  EF44                  br      $?L0086                                         ;[INF] 2, 3
 3757  3757                      ; line   597 :         
 3758  3758                      ; line   598 :         /* Battery Outline & 2 Levels */
 3759  3759                      ; line   599 :         case 2:
 3760  3760 0042B                ?L0089:
 3761  3761                      ; line   600 :         {
 3762  3762 0042B                ??bb03_SECTD_Glyph_Map:
 3763  3763                      ; line   601 :             SEG17_DEF &= 0xF0U;
 3764  3764                      $DGL    0,25
 3765  3765 0042B  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3766  3766 0042E  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3767  3767 00430  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3768  3768                      ; line   602 :             SEG17_DEF |= 0x0CU;
 3769  3769                      $DGL    0,26
 3770  3770 00433  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3771  3771 00436  6C0C                  or      a,#0CH  ; 12                                    ;[INF] 2, 1
 3772  3772 00438  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3773  3773                      ; line   603 :             SEG16_DEF |= 0x01U;
 3774  3774                      $DGL    0,27
 3775  3775 0043B  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3776  3776 0043E  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3777  3777 00440  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3778  3778 00443                ??eb03_SECTD_Glyph_Map:
 3779  3779                      ; line   604 :         }
 3780  3780                      ; line   605 :         break;
 3781  3781                      $DGL    0,29
 3782  3782 00443  EF2A                  br      $?L0086                                         ;[INF] 2, 3
 3783  3783                      ; line   606 :         
 3784  3784                      ; line   607 :         /* Battery Outline & 3 Levels */
 3785  3785                      ; line   608 :         case 3:
 3786  3786 00445                ?L0090:
 3787  3787                      ; line   609 :         {
 3788  3788 00445                ??bb04_SECTD_Glyph_Map:
 3789  3789                      ; line   610 :             SEG17_DEF &= 0xF0U;
 3790  3790                      $DGL    0,34
 3791  3791 00445  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3792  3792 00448  5CF0                  and     a,#0F0H ; 240                                   ;[INF] 2, 1
 3793  3793 0044A  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3794  3794                      ; line   611 :             SEG17_DEF |= 0x0EU;
 3795  3795                      $DGL    0,35
 3796  3796 0044D  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3797  3797 00450  6C0E                  or      a,#0EH  ; 14                                    ;[INF] 2, 1
 3798  3798 00452  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3799  3799                      ; line   612 :             SEG16_DEF |= 0x01U;
 3800  3800                      $DGL    0,36
 3801  3801 00455  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3802  3802 00458  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3803  3803 0045A  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3804  3804 0045D                ??eb04_SECTD_Glyph_Map:
 3805  3805                      ; line   613 :         }
 3806  3806                      ; line   614 :         break;    
 3807  3807                      $DGL    0,38
 3808  3808 0045D  EF10                  br      $?L0086                                         ;[INF] 2, 3
 3809  3809                      ; line   615 :         
 3810  3810                      ; line   616 :         /* Battery Outline & All Levels */
 3811  3811                      ; line   617 :         case 4:
 3812  3812 0045F                ?L0091:
 3813  3813                      ; line   618 :         {
 3814  3814 0045F                ??bb05_SECTD_Glyph_Map:
 3815  3815                      ; line   619 :             SEG17_DEF |= 0x0FU;
 3816  3816                      $DGL    0,43
 3817  3817 0045F  8F1104                mov     a,!SEG17                                        ;[INF] 3, 1
 3818  3818 00462  6C0F                  or      a,#0FH  ; 15                                    ;[INF] 2, 1
 3819  3819 00464  9F1104                mov     !SEG17,a                                        ;[INF] 3, 1
 3820  3820                      ; line   620 :             SEG16_DEF |= 0x01U;
 3821  3821                      $DGL    0,44
 3822  3822 00467  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 3823  3823 0046A  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3824  3824 0046C  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 3825  3825 0046F                ??eb05_SECTD_Glyph_Map:
 3826  3826                      ; line   621 :         }
 3827  3827                      ; line   622 :         break;
 3828  3828                      ; line   623 :         
 3829  3829                      ; line   624 :         default:
 3830  3830 0046F                ?L0092:
 3831  3831                      ; line   625 :         {
 3832  3832 0046F                ??bb06_SECTD_Glyph_Map:
 3833  3833 0046F                ??eb06_SECTD_Glyph_Map:
 3834  3834                      ; line   626 :             /* Bad Selection */
 3835  3835                      ; line   627 :         }
 3836  3836                      ; line   628 :         break;
 3837  3837 0046F                ??eb00_SECTD_Glyph_Map:
 3838  3838                      ; line   629 :     }
 3839  3839 0046F                ?L0086:
 3840  3840                      ; line   630 : }
 3841  3841                      $DGL    0,54
 3842  3842 0046F                ??ef_SECTD_Glyph_Map:
 3843  3843 0046F  C0                    pop     ax                                              ;[INF] 1, 1
 3844  3844 00470  C6                    pop     hl                                              ;[INF] 1, 1
 3845  3845 00471  D7                    ret                                                     ;[INF] 1, 6
 3846  3846 00472                ??ee_SECTD_Glyph_Map:
 3847  3847                      ; line   631 : /***************************************************************
 3848  3848                      ;              ********************************************************
 3849  3849                      ; line   632 : End of function SECTD_Glyph_Map
 3850  3850                      ; line   633 : ****************************************************************
 3851  3851                      ;              *******************************************************/
 3852  3852                      ; line   634 : 
 3853  3853                      ; line   635 : /***************************************************************
 3854  3854                      ;              ********************************************************
 3855  3855                      ; line   636 : * Function Name : SECTE_Glyph_Map
 3856  3856                      ; line   637 : * Description    : Takes a number input, and sets the level of t
 3857  3857                      ;              he bar graph (Section E)
 3858  3858                      ; line   638 : * Argument      : int16_t Bar Graph Level
 3859  3859                      ; line   639 : * Return Values : None
 3860  3860                      ; line   640 : ****************************************************************
 3861  3861                      ;              *******************************************************/
 3862  3862                      ; line   641 : void SECTE_Glyph_Map (const uint16_t level)
 3863  3863                      ; line   642 : {
 3864  3864 00472                _SECTE_Glyph_Map:
 3865  3865                      $DGL    1,344
 3866  3866 00472  C7                    push    hl                                              ;[INF] 1, 1
 3867  3867 00473  C1                    push    ax                                              ;[INF] 1, 1
 3868  3868 00474  2004                  subw    sp,#04H                                         ;[INF] 2, 1
 3869  3869 00476  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 3870  3870 00479                ??bf_SECTE_Glyph_Map:
 3871  3871                      ; line   643 :     /* Initialise Missing Pin Pointers */
 3872  3872                      ; line   644 :     uint8_t * const Pin47Ptr = (uint8_t *)Aux_pin47;
 3873  3873                      $DGL    0,3
 3874  3874 00479  30FFFF                movw    ax,#0FFFFH      ; -1                            ;[INF] 3, 1
 3875  3875 0047C  BC02                  movw    [hl+2],ax       ; Pin47Ptr                      ;[INF] 2, 1
 3876  3876                      ; line   645 :     uint8_t * const Pin48Ptr = (uint8_t *)Aux_pin48;
 3877  3877                      $DGL    0,4
 3878  3878 0047E  BB                    movw    [hl],ax ; Pin48Ptr                              ;[INF] 1, 1
 3879  3879                      ; line   646 :     
 3880  3880                      ; line   647 :     /* Switch to segment option */
 3881  3881                      ; line   648 :     switch (level)
 3882  3882                      $DGL    0,7
 3883  3883 0047F  AC04                  movw    ax,[hl+4]       ; level                         ;[INF] 2, 1
 3884  3884 00481  440700                cmpw    ax,#07H ; 7                                     ;[INF] 3, 1
 3885  3885 00484  61C8                  skc                                                     ;[INF] 2, 1
 3886  3886 00486  EE1F01                br      $!?L0105                                        ;[INF] 3, 3
 3887  3887 00489  12                    movw    bc,ax                                           ;[INF] 1, 1
 3888  3888 0048A R495200                mov     a,?L0107+14[bc]                                 ;[INF] 3, 1
 3889  3889 0048D  311C                  shlw    bc,1                                            ;[INF] 2, 1
 3890  3890 0048F  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 3891  3891 00491 R794400                movw    ax,?L0107[bc]                                   ;[INF] 3, 1
 3892  3892 00494  61CB                  br      ax                                              ;[INF] 2, 3
 3893  3893                      ; line   649 :     {
 3894  3894 00496                ??bb00_SECTE_Glyph_Map:
 3895  3895                      ; line   650 :         /* All Bars Off */
 3896  3896                      ; line   651 :         case 0:
 3897  3897 00496                ?L0098:
 3898  3898                      ; line   652 :         {
 3899  3899 00496                ??bb01_SECTE_Glyph_Map:
 3900  3900                      ; line   653 :             *Pin47Ptr &= 0xFEU;
 3901  3901                      $DGL    0,12
 3902  3902 00496  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 3903  3903 00498  14                    movw    de,ax                                           ;[INF] 1, 1
 3904  3904 00499  89                    mov     a,[de]                                          ;[INF] 1, 1
 3905  3905 0049A  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3906  3906 0049C  99                    mov     [de],a                                          ;[INF] 1, 1
 3907  3907                      ; line   654 :             *Pin48Ptr &= 0xFEU;
 3908  3908                      $DGL    0,13
 3909  3909 0049D  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 3910  3910 0049E  14                    movw    de,ax                                           ;[INF] 1, 1
 3911  3911 0049F  89                    mov     a,[de]                                          ;[INF] 1, 1
 3912  3912 004A0  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3913  3913 004A2  99                    mov     [de],a                                          ;[INF] 1, 1
 3914  3914                      ; line   655 :             SEG38_DEF &= 0xFEU;
 3915  3915                      $DGL    0,14
 3916  3916 004A3  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 3917  3917 004A6  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3918  3918 004A8  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 3919  3919                      ; line   656 :             SEG37_DEF &= 0xFEU;
 3920  3920                      $DGL    0,15
 3921  3921 004AB  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 3922  3922 004AE  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3923  3923 004B0  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 3924  3924                      ; line   657 :             SEG36_DEF &= 0xFEU;
 3925  3925                      $DGL    0,16
 3926  3926 004B3  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 3927  3927 004B6  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3928  3928 004B8  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 3929  3929 004BB                ??eb01_SECTE_Glyph_Map:
 3930  3930                      ; line   658 :         }
 3931  3931                      ; line   659 :         break;
 3932  3932                      $DGL    0,18
 3933  3933 004BB  EEEA00                br      $!?L0097                                        ;[INF] 3, 3
 3934  3934                      ; line   660 :         
 3935  3935                      ; line   661 :         /* First Bar Only */
 3936  3936                      ; line   662 :         case 1:
 3937  3937 004BE                ?L0099:
 3938  3938                      ; line   663 :         {
 3939  3939 004BE                ??bb02_SECTE_Glyph_Map:
 3940  3940                      ; line   664 :             *Pin47Ptr |= 0x01U;
 3941  3941                      $DGL    0,23
 3942  3942 004BE  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 3943  3943 004C0  14                    movw    de,ax                                           ;[INF] 1, 1
 3944  3944 004C1  89                    mov     a,[de]                                          ;[INF] 1, 1
 3945  3945 004C2  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3946  3946 004C4  99                    mov     [de],a                                          ;[INF] 1, 1
 3947  3947                      ; line   665 :             *Pin48Ptr &= 0xFEU;
 3948  3948                      $DGL    0,24
 3949  3949 004C5  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 3950  3950 004C6  14                    movw    de,ax                                           ;[INF] 1, 1
 3951  3951 004C7  89                    mov     a,[de]                                          ;[INF] 1, 1
 3952  3952 004C8  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3953  3953 004CA  99                    mov     [de],a                                          ;[INF] 1, 1
 3954  3954                      ; line   666 :             SEG38_DEF &= 0xFEU;
 3955  3955                      $DGL    0,25
 3956  3956 004CB  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 3957  3957 004CE  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3958  3958 004D0  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 3959  3959                      ; line   667 :             SEG37_DEF &= 0xFEU;
 3960  3960                      $DGL    0,26
 3961  3961 004D3  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 3962  3962 004D6  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3963  3963 004D8  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 3964  3964                      ; line   668 :             SEG36_DEF &= 0xFEU;
 3965  3965                      $DGL    0,27
 3966  3966 004DB  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 3967  3967 004DE  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3968  3968 004E0  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 3969  3969 004E3                ??eb02_SECTE_Glyph_Map:
 3970  3970                      ; line   669 :         }
 3971  3971                      ; line   670 :         break;
 3972  3972                      $DGL    0,29
 3973  3973 004E3  EEC200                br      $!?L0097                                        ;[INF] 3, 3
 3974  3974                      ; line   671 :         
 3975  3975                      ; line   672 :         /* Bars 1 - 2 */
 3976  3976                      ; line   673 :         case 2:
 3977  3977 004E6                ?L0100:
 3978  3978                      ; line   674 :         {
 3979  3979 004E6                ??bb03_SECTE_Glyph_Map:
 3980  3980                      ; line   675 :             *Pin47Ptr |= 0x01U;
 3981  3981                      $DGL    0,34
 3982  3982 004E6  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 3983  3983 004E8  14                    movw    de,ax                                           ;[INF] 1, 1
 3984  3984 004E9  89                    mov     a,[de]                                          ;[INF] 1, 1
 3985  3985 004EA  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3986  3986 004EC  99                    mov     [de],a                                          ;[INF] 1, 1
 3987  3987                      ; line   676 :             *Pin48Ptr |= 0x01U;
 3988  3988                      $DGL    0,35
 3989  3989 004ED  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 3990  3990 004EE  14                    movw    de,ax                                           ;[INF] 1, 1
 3991  3991 004EF  89                    mov     a,[de]                                          ;[INF] 1, 1
 3992  3992 004F0  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 3993  3993 004F2  99                    mov     [de],a                                          ;[INF] 1, 1
 3994  3994                      ; line   677 :             SEG38_DEF &= 0xFEU;
 3995  3995                      $DGL    0,36
 3996  3996 004F3  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 3997  3997 004F6  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 3998  3998 004F8  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 3999  3999                      ; line   678 :             SEG37_DEF &= 0xFEU;
 4000  4000                      $DGL    0,37
 4001  4001 004FB  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 4002  4002 004FE  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4003  4003 00500  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 4004  4004                      ; line   679 :             SEG36_DEF &= 0xFEU;
 4005  4005                      $DGL    0,38
 4006  4006 00503  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 4007  4007 00506  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4008  4008 00508  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 4009  4009 0050B                ??eb03_SECTE_Glyph_Map:
 4010  4010                      ; line   680 :         }
 4011  4011                      ; line   681 :         break;
 4012  4012                      $DGL    0,40
 4013  4013 0050B  EE9A00                br      $!?L0097                                        ;[INF] 3, 3
 4014  4014                      ; line   682 :         
 4015  4015                      ; line   683 :         /* Bars 1 - 3 */
 4016  4016                      ; line   684 :         case 3:
 4017  4017 0050E                ?L0101:
 4018  4018                      ; line   685 :         {
 4019  4019 0050E                ??bb04_SECTE_Glyph_Map:
 4020  4020                      ; line   686 :             *Pin47Ptr |= 0x01U;
 4021  4021                      $DGL    0,45
 4022  4022 0050E  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 4023  4023 00510  14                    movw    de,ax                                           ;[INF] 1, 1
 4024  4024 00511  89                    mov     a,[de]                                          ;[INF] 1, 1
 4025  4025 00512  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4026  4026 00514  99                    mov     [de],a                                          ;[INF] 1, 1
 4027  4027                      ; line   687 :             *Pin48Ptr |= 0x01U;
 4028  4028                      $DGL    0,46
 4029  4029 00515  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 4030  4030 00516  14                    movw    de,ax                                           ;[INF] 1, 1
 4031  4031 00517  89                    mov     a,[de]                                          ;[INF] 1, 1
 4032  4032 00518  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4033  4033 0051A  99                    mov     [de],a                                          ;[INF] 1, 1
 4034  4034                      ; line   688 :             SEG38_DEF &= 0xFEU;
 4035  4035                      $DGL    0,47
 4036  4036 0051B  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 4037  4037 0051E  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4038  4038 00520  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 4039  4039                      ; line   689 :             SEG37_DEF &= 0xFEU;
 4040  4040                      $DGL    0,48
 4041  4041 00523  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 4042  4042 00526  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4043  4043 00528  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 4044  4044                      ; line   690 :             SEG36_DEF &= 0xFEU;
 4045  4045                      $DGL    0,49
 4046  4046 0052B  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 4047  4047 0052E  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4048  4048 00530  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 4049  4049 00533                ??eb04_SECTE_Glyph_Map:
 4050  4050                      ; line   691 :         }
 4051  4051                      ; line   692 :         break;
 4052  4052                      $DGL    0,51
 4053  4053 00533  EF73                  br      $?L0097                                         ;[INF] 2, 3
 4054  4054                      ; line   693 :         
 4055  4055                      ; line   694 :         /* Bars 1 - 4 */
 4056  4056                      ; line   695 :         case 4:
 4057  4057 00535                ?L0102:
 4058  4058                      ; line   696 :         {
 4059  4059 00535                ??bb05_SECTE_Glyph_Map:
 4060  4060                      ; line   697 :             *Pin47Ptr |= 0x01U;
 4061  4061                      $DGL    0,56
 4062  4062 00535  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 4063  4063 00537  14                    movw    de,ax                                           ;[INF] 1, 1
 4064  4064 00538  89                    mov     a,[de]                                          ;[INF] 1, 1
 4065  4065 00539  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4066  4066 0053B  99                    mov     [de],a                                          ;[INF] 1, 1
 4067  4067                      ; line   698 :             *Pin48Ptr |= 0x01U;
 4068  4068                      $DGL    0,57
 4069  4069 0053C  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 4070  4070 0053D  14                    movw    de,ax                                           ;[INF] 1, 1
 4071  4071 0053E  89                    mov     a,[de]                                          ;[INF] 1, 1
 4072  4072 0053F  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4073  4073 00541  99                    mov     [de],a                                          ;[INF] 1, 1
 4074  4074                      ; line   699 :             SEG38_DEF |= 0x01U;
 4075  4075                      $DGL    0,58
 4076  4076 00542  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 4077  4077 00545  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4078  4078 00547  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 4079  4079                      ; line   700 :             SEG37_DEF &= 0xFEU;
 4080  4080                      $DGL    0,59
 4081  4081 0054A  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 4082  4082 0054D  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4083  4083 0054F  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 4084  4084                      ; line   701 :             SEG36_DEF &= 0xFEU;
 4085  4085                      $DGL    0,60
 4086  4086 00552  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 4087  4087 00555  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4088  4088 00557  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 4089  4089 0055A                ??eb05_SECTE_Glyph_Map:
 4090  4090                      ; line   702 :         }
 4091  4091                      ; line   703 :         break;
 4092  4092                      $DGL    0,62
 4093  4093 0055A  EF4C                  br      $?L0097                                         ;[INF] 2, 3
 4094  4094                      ; line   704 :         
 4095  4095                      ; line   705 :         /* Bars 1 - 5 */
 4096  4096                      ; line   706 :         case 5:
 4097  4097 0055C                ?L0103:
 4098  4098                      ; line   707 :         {
 4099  4099 0055C                ??bb06_SECTE_Glyph_Map:
 4100  4100                      ; line   708 :             *Pin47Ptr |= 0x01U;
 4101  4101                      $DGL    0,67
 4102  4102 0055C  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 4103  4103 0055E  14                    movw    de,ax                                           ;[INF] 1, 1
 4104  4104 0055F  89                    mov     a,[de]                                          ;[INF] 1, 1
 4105  4105 00560  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4106  4106 00562  99                    mov     [de],a                                          ;[INF] 1, 1
 4107  4107                      ; line   709 :             *Pin48Ptr |= 0x01U;
 4108  4108                      $DGL    0,68
 4109  4109 00563  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 4110  4110 00564  14                    movw    de,ax                                           ;[INF] 1, 1
 4111  4111 00565  89                    mov     a,[de]                                          ;[INF] 1, 1
 4112  4112 00566  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4113  4113 00568  99                    mov     [de],a                                          ;[INF] 1, 1
 4114  4114                      ; line   710 :             SEG38_DEF |= 0x01U;
 4115  4115                      $DGL    0,69
 4116  4116 00569  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 4117  4117 0056C  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4118  4118 0056E  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 4119  4119                      ; line   711 :             SEG37_DEF |= 0x01U;
 4120  4120                      $DGL    0,70
 4121  4121 00571  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 4122  4122 00574  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4123  4123 00576  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 4124  4124                      ; line   712 :             SEG36_DEF &= 0xFEU;
 4125  4125                      $DGL    0,71
 4126  4126 00579  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 4127  4127 0057C  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4128  4128 0057E  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 4129  4129 00581                ??eb06_SECTE_Glyph_Map:
 4130  4130                      ; line   713 :         }
 4131  4131                      ; line   714 :         break; 
 4132  4132                      $DGL    0,73
 4133  4133 00581  EF25                  br      $?L0097                                         ;[INF] 2, 3
 4134  4134                      ; line   715 :         
 4135  4135                      ; line   716 :         /* All Levels */
 4136  4136                      ; line   717 :         case 6:
 4137  4137 00583                ?L0104:
 4138  4138                      ; line   718 :         {
 4139  4139 00583                ??bb07_SECTE_Glyph_Map:
 4140  4140                      ; line   719 :             *Pin47Ptr |= 0x01U;
 4141  4141                      $DGL    0,78
 4142  4142 00583  AC02                  movw    ax,[hl+2]       ; Pin47Ptr                      ;[INF] 2, 1
 4143  4143 00585  14                    movw    de,ax                                           ;[INF] 1, 1
 4144  4144 00586  89                    mov     a,[de]                                          ;[INF] 1, 1
 4145  4145 00587  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4146  4146 00589  99                    mov     [de],a                                          ;[INF] 1, 1
 4147  4147                      ; line   720 :             *Pin48Ptr |= 0x01U;
 4148  4148                      $DGL    0,79
 4149  4149 0058A  AB                    movw    ax,[hl] ; Pin48Ptr                              ;[INF] 1, 1
 4150  4150 0058B  14                    movw    de,ax                                           ;[INF] 1, 1
 4151  4151 0058C  89                    mov     a,[de]                                          ;[INF] 1, 1
 4152  4152 0058D  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4153  4153 0058F  99                    mov     [de],a                                          ;[INF] 1, 1
 4154  4154                      ; line   721 :             SEG38_DEF |= 0x01U;
 4155  4155                      $DGL    0,80
 4156  4156 00590  8F2704                mov     a,!SEG38                                        ;[INF] 3, 1
 4157  4157 00593  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4158  4158 00595  9F2704                mov     !SEG38,a                                        ;[INF] 3, 1
 4159  4159                      ; line   722 :             SEG37_DEF |= 0x01U;
 4160  4160                      $DGL    0,81
 4161  4161 00598  8F2604                mov     a,!SEG37                                        ;[INF] 3, 1
 4162  4162 0059B  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4163  4163 0059D  9F2604                mov     !SEG37,a                                        ;[INF] 3, 1
 4164  4164                      ; line   723 :             SEG36_DEF |= 0x01U;
 4165  4165                      $DGL    0,82
 4166  4166 005A0  8F2504                mov     a,!SEG36                                        ;[INF] 3, 1
 4167  4167 005A3  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4168  4168 005A5  9F2504                mov     !SEG36,a                                        ;[INF] 3, 1
 4169  4169 005A8                ??eb07_SECTE_Glyph_Map:
 4170  4170                      ; line   724 :         }
 4171  4171                      ; line   725 :         break;
 4172  4172                      ; line   726 :         
 4173  4173                      ; line   727 :         default:
 4174  4174 005A8                ?L0105:
 4175  4175                      ; line   728 :         {
 4176  4176 005A8                ??bb08_SECTE_Glyph_Map:
 4177  4177 005A8                ??eb08_SECTE_Glyph_Map:
 4178  4178                      ; line   729 :             /* Bad Selection */
 4179  4179                      ; line   730 :         }
 4180  4180                      ; line   731 :         break;
 4181  4181 005A8                ??eb00_SECTE_Glyph_Map:
 4182  4182                      ; line   732 :     }
 4183  4183 005A8                ?L0097:
 4184  4184                      ; line   733 : }
 4185  4185                      $DGL    0,92
 4186  4186 005A8                ??ef_SECTE_Glyph_Map:
 4187  4187 005A8  1006                  addw    sp,#06H                                         ;[INF] 2, 1
 4188  4188 005AA  C6                    pop     hl                                              ;[INF] 1, 1
 4189  4189 005AB  D7                    ret                                                     ;[INF] 1, 6
 4190  4190 005AC                ??ee_SECTE_Glyph_Map:
 4191  4191                      ; line   734 : /***************************************************************
 4192  4192                      ;              ********************************************************
 4193  4193                      ; line   735 : End of function SECTE_Glyph_Map
 4194  4194                      ; line   736 : ****************************************************************
 4195  4195                      ;              *******************************************************/
 4196  4196                      ; line   737 : 
 4197  4197                      ; line   738 : /***************************************************************
 4198  4198                      ;              ********************************************************
 4199  4199                      ; line   739 : * Function Name : SECTF_Glyph_Map
 4200  4200                      ; line   740 : * Description   : Sets the week calendar (Section F) based on a 
 4201  4201                      ;              number input
 4202  4202                      ; line   741 : *                 0: OFF            4: Thursday
 4203  4203                      ; line   742 : *                 1: Monday         5: Friday    
 4204  4204                      ; line   743 : *                 2: Tuesday        6: Saturday
 4205  4205                      ; line   744 : *                 3: Wednesday      7: Sunday
 4206  4206                      ; line   745 : * Arguments     : uint8_t day - character to be displayed, digit
 4207  4207                      ;               position of character
 4208  4208                      ; line   746 : * Return Value  : None
 4209  4209                      ; line   747 : ****************************************************************
 4210  4210                      ;              *******************************************************/
 4211  4211                      ; line   748 : void SECTF_Glyph_Map (const uint8_t day)
 4212  4212                      ; line   749 : {    
 4213  4213 005AC                _SECTF_Glyph_Map:
 4214  4214                      $DGL    1,391
 4215  4215 005AC  C7                    push    hl                                              ;[INF] 1, 1
 4216  4216 005AD  C1                    push    ax                                              ;[INF] 1, 1
 4217  4217 005AE  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 4218  4218 005B1                ??bf_SECTF_Glyph_Map:
 4219  4219                      ; line   750 :    /* Switch to segment option */
 4220  4220                      ; line   751 :     switch (day)
 4221  4221                      $DGL    0,3
 4222  4222 005B1  8B                    mov     a,[hl]  ; day                                   ;[INF] 1, 1
 4223  4223 005B2  318E                  shrw    ax,8                                            ;[INF] 2, 1
 4224  4224 005B4  440800                cmpw    ax,#08H ; 8                                     ;[INF] 3, 1
 4225  4225 005B7  61C8                  skc                                                     ;[INF] 2, 1
 4226  4226 005B9  EE8001                br      $!?L0119                                        ;[INF] 3, 3
 4227  4227 005BC  12                    movw    bc,ax                                           ;[INF] 1, 1
 4228  4228 005BD R496A00                mov     a,?L0121+16[bc]                                 ;[INF] 3, 1
 4229  4229 005C0  311C                  shlw    bc,1                                            ;[INF] 2, 1
 4230  4230 005C2  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 4231  4231 005C4 R795A00                movw    ax,?L0121[bc]                                   ;[INF] 3, 1
 4232  4232 005C7  61CB                  br      ax                                              ;[INF] 2, 3
 4233  4233                      ; line   752 :     {
 4234  4234 005C9                ??bb00_SECTF_Glyph_Map:
 4235  4235                      ; line   753 :          /* All Days Off */
 4236  4236                      ; line   754 :         case 0:
 4237  4237 005C9                ?L0111:
 4238  4238                      ; line   755 :         {    
 4239  4239 005C9                ??bb01_SECTF_Glyph_Map:
 4240  4240                      ; line   756 :             SEG25_DEF &= 0x0EU;
 4241  4241                      $DGL    0,8
 4242  4242 005C9  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4243  4243 005CC  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4244  4244 005CE  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4245  4245                      ; line   757 :             SEG23_DEF &= 0x03U;
 4246  4246                      $DGL    0,9
 4247  4247 005D1  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4248  4248 005D4  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4249  4249 005D6  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4250  4250                      ; line   758 :             SEG22_DEF &= 0x0EU;
 4251  4251                      $DGL    0,10
 4252  4252 005D9  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4253  4253 005DC  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4254  4254 005DE  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4255  4255                      ; line   759 :             SEG20_DEF &= 0x0EU;
 4256  4256                      $DGL    0,11
 4257  4257 005E1  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4258  4258 005E4  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4259  4259 005E6  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4260  4260                      ; line   760 :             SEG18_DEF &= 0x03U;
 4261  4261                      $DGL    0,12
 4262  4262 005E9  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4263  4263 005EC  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4264  4264 005EE  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4265  4265 005F1                ??eb01_SECTF_Glyph_Map:
 4266  4266                      ; line   761 :         }    
 4267  4267                      ; line   762 :         break;
 4268  4268                      $DGL    0,14
 4269  4269 005F1  EE4801                br      $!?L0110                                        ;[INF] 3, 3
 4270  4270                      ; line   763 :         
 4271  4271                      ; line   764 :         /* Monday Lit */
 4272  4272                      ; line   765 :         case 1:
 4273  4273 005F4                ?L0112:
 4274  4274                      ; line   766 :         {    
 4275  4275 005F4                ??bb02_SECTF_Glyph_Map:
 4276  4276                      ; line   767 :             SEG25_DEF &= 0x0EU;
 4277  4277                      $DGL    0,19
 4278  4278 005F4  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4279  4279 005F7  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4280  4280 005F9  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4281  4281                      ; line   768 :             SEG23_DEF &= 0x03U;
 4282  4282                      $DGL    0,20
 4283  4283 005FC  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4284  4284 005FF  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4285  4285 00601  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4286  4286                      ; line   769 :             SEG23_DEF |= 0x08U;
 4287  4287                      $DGL    0,21
 4288  4288 00604  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4289  4289 00607  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 4290  4290 00609  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4291  4291                      ; line   770 :             SEG22_DEF &= 0x0EU;
 4292  4292                      $DGL    0,22
 4293  4293 0060C  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4294  4294 0060F  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4295  4295 00611  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4296  4296                      ; line   771 :             SEG20_DEF &= 0x0EU;
 4297  4297                      $DGL    0,23
 4298  4298 00614  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4299  4299 00617  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4300  4300 00619  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4301  4301                      ; line   772 :             SEG18_DEF &= 0x03U;
 4302  4302                      $DGL    0,24
 4303  4303 0061C  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4304  4304 0061F  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4305  4305 00621  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4306  4306 00624                ??eb02_SECTF_Glyph_Map:
 4307  4307                      ; line   773 :         }    
 4308  4308                      ; line   774 :         break;
 4309  4309                      $DGL    0,26
 4310  4310 00624  EE1501                br      $!?L0110                                        ;[INF] 3, 3
 4311  4311                      ; line   775 :         
 4312  4312                      ; line   776 :         /* Tuesday Lit */
 4313  4313                      ; line   777 :         case 2:
 4314  4314 00627                ?L0113:
 4315  4315                      ; line   778 :         {   
 4316  4316 00627                ??bb03_SECTF_Glyph_Map:
 4317  4317                      ; line   779 :             SEG25_DEF &= 0x0EU;
 4318  4318                      $DGL    0,31
 4319  4319 00627  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4320  4320 0062A  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4321  4321 0062C  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4322  4322                      ; line   780 :             SEG23_DEF &= 0x03U;
 4323  4323                      $DGL    0,32
 4324  4324 0062F  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4325  4325 00632  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4326  4326 00634  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4327  4327                      ; line   781 :             SEG23_DEF |= 0x04U;
 4328  4328                      $DGL    0,33
 4329  4329 00637  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4330  4330 0063A  6C04                  or      a,#04H  ; 4                                     ;[INF] 2, 1
 4331  4331 0063C  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4332  4332                      ; line   782 :             SEG22_DEF &= 0x0EU;
 4333  4333                      $DGL    0,34
 4334  4334 0063F  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4335  4335 00642  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4336  4336 00644  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4337  4337                      ; line   783 :             SEG20_DEF &= 0x0EU;
 4338  4338                      $DGL    0,35
 4339  4339 00647  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4340  4340 0064A  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4341  4341 0064C  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4342  4342                      ; line   784 :             SEG18_DEF &= 0x03U;
 4343  4343                      $DGL    0,36
 4344  4344 0064F  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4345  4345 00652  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4346  4346 00654  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4347  4347 00657                ??eb03_SECTF_Glyph_Map:
 4348  4348                      ; line   785 :         }   
 4349  4349                      ; line   786 :         break;
 4350  4350                      $DGL    0,38
 4351  4351 00657  EEE200                br      $!?L0110                                        ;[INF] 3, 3
 4352  4352                      ; line   787 :         
 4353  4353                      ; line   788 :         /* Wednesday Lit */
 4354  4354                      ; line   789 :         case 3:
 4355  4355 0065A                ?L0114:
 4356  4356                      ; line   790 :         {    
 4357  4357 0065A                ??bb04_SECTF_Glyph_Map:
 4358  4358                      ; line   791 :             SEG25_DEF &= 0x0EU;
 4359  4359                      $DGL    0,43
 4360  4360 0065A  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4361  4361 0065D  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4362  4362 0065F  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4363  4363                      ; line   792 :             SEG31_DEF &= 0x03U;
 4364  4364                      $DGL    0,44
 4365  4365 00662  8F2004                mov     a,!SEG31                                        ;[INF] 3, 1
 4366  4366 00665  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4367  4367 00667  9F2004                mov     !SEG31,a                                        ;[INF] 3, 1
 4368  4368                      ; line   793 :             SEG22_DEF |= 0x01U;
 4369  4369                      $DGL    0,45
 4370  4370 0066A  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4371  4371 0066D  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4372  4372 0066F  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4373  4373                      ; line   794 :             SEG20_DEF &= 0x0EU;
 4374  4374                      $DGL    0,46
 4375  4375 00672  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4376  4376 00675  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4377  4377 00677  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4378  4378                      ; line   795 :             SEG18_DEF &= 0x03U;
 4379  4379                      $DGL    0,47
 4380  4380 0067A  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4381  4381 0067D  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4382  4382 0067F  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4383  4383 00682                ??eb04_SECTF_Glyph_Map:
 4384  4384                      ; line   796 :         }    
 4385  4385                      ; line   797 :         break;
 4386  4386                      $DGL    0,49
 4387  4387 00682  EEB700                br      $!?L0110                                        ;[INF] 3, 3
 4388  4388                      ; line   798 : 
 4389  4389                      ; line   799 :         /* Thursday Lit */
 4390  4390                      ; line   800 :         case 4:
 4391  4391 00685                ?L0115:
 4392  4392                      ; line   801 :         {   
 4393  4393 00685                ??bb05_SECTF_Glyph_Map:
 4394  4394                      ; line   802 :             SEG25_DEF &= 0x0EU;
 4395  4395                      $DGL    0,54
 4396  4396 00685  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4397  4397 00688  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4398  4398 0068A  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4399  4399                      ; line   803 :             SEG23_DEF &= 0x03U;
 4400  4400                      $DGL    0,55
 4401  4401 0068D  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4402  4402 00690  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4403  4403 00692  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4404  4404                      ; line   804 :             SEG22_DEF &= 0x0EU;
 4405  4405                      $DGL    0,56
 4406  4406 00695  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4407  4407 00698  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4408  4408 0069A  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4409  4409                      ; line   805 :             SEG20_DEF |= 0x01U;
 4410  4410                      $DGL    0,57
 4411  4411 0069D  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4412  4412 006A0  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4413  4413 006A2  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4414  4414                      ; line   806 :             SEG18_DEF &= 0x03U;
 4415  4415                      $DGL    0,58
 4416  4416 006A5  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4417  4417 006A8  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4418  4418 006AA  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4419  4419 006AD                ??eb05_SECTF_Glyph_Map:
 4420  4420                      ; line   807 :         }    
 4421  4421                      ; line   808 :         break;
 4422  4422                      $DGL    0,60
 4423  4423 006AD  EE8C00                br      $!?L0110                                        ;[INF] 3, 3
 4424  4424                      ; line   809 :     
 4425  4425                      ; line   810 :         /* Friday Lit */
 4426  4426                      ; line   811 :         case 5:
 4427  4427 006B0                ?L0116:
 4428  4428                      ; line   812 :         {    
 4429  4429 006B0                ??bb06_SECTF_Glyph_Map:
 4430  4430                      ; line   813 :             SEG25_DEF &= 0x0EU;
 4431  4431                      $DGL    0,65
 4432  4432 006B0  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4433  4433 006B3  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4434  4434 006B5  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4435  4435                      ; line   814 :             SEG23_DEF &= 0x03U;
 4436  4436                      $DGL    0,66
 4437  4437 006B8  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4438  4438 006BB  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4439  4439 006BD  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4440  4440                      ; line   815 :             SEG22_DEF &= 0x0EU;
 4441  4441                      $DGL    0,67
 4442  4442 006C0  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4443  4443 006C3  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4444  4444 006C5  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4445  4445                      ; line   816 :             SEG20_DEF &= 0x0EU;
 4446  4446                      $DGL    0,68
 4447  4447 006C8  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4448  4448 006CB  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4449  4449 006CD  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4450  4450                      ; line   817 :             SEG18_DEF &= 0x03U;
 4451  4451                      $DGL    0,69
 4452  4452 006D0  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4453  4453 006D3  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4454  4454 006D5  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4455  4455                      ; line   818 :             SEG18_DEF |= 0x08U;
 4456  4456                      $DGL    0,70
 4457  4457 006D8  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4458  4458 006DB  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 4459  4459 006DD  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4460  4460 006E0                ??eb06_SECTF_Glyph_Map:
 4461  4461                      ; line   819 :         }
 4462  4462                      ; line   820 :         break;
 4463  4463                      $DGL    0,72
 4464  4464 006E0  EF5A                  br      $?L0110                                         ;[INF] 2, 3
 4465  4465                      ; line   821 :         
 4466  4466                      ; line   822 :         /* Saturday Lit */
 4467  4467                      ; line   823 :         case 6:
 4468  4468 006E2                ?L0117:
 4469  4469                      ; line   824 :         {    
 4470  4470 006E2                ??bb07_SECTF_Glyph_Map:
 4471  4471                      ; line   825 :             SEG25_DEF &= 0x0EU;
 4472  4472                      $DGL    0,77
 4473  4473 006E2  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4474  4474 006E5  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4475  4475 006E7  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4476  4476                      ; line   826 :             SEG23_DEF &= 0x03U;
 4477  4477                      $DGL    0,78
 4478  4478 006EA  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4479  4479 006ED  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4480  4480 006EF  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4481  4481                      ; line   827 :             SEG22_DEF &= 0x0EU;
 4482  4482                      $DGL    0,79
 4483  4483 006F2  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4484  4484 006F5  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4485  4485 006F7  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4486  4486                      ; line   828 :             SEG20_DEF &= 0x0EU;
 4487  4487                      $DGL    0,80
 4488  4488 006FA  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4489  4489 006FD  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4490  4490 006FF  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4491  4491                      ; line   829 :             SEG18_DEF &= 0x03U;
 4492  4492                      $DGL    0,81
 4493  4493 00702  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4494  4494 00705  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4495  4495 00707  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4496  4496                      ; line   830 :             SEG18_DEF |= 0x04U;
 4497  4497                      $DGL    0,82
 4498  4498 0070A  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4499  4499 0070D  6C04                  or      a,#04H  ; 4                                     ;[INF] 2, 1
 4500  4500 0070F  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4501  4501 00712                ??eb07_SECTF_Glyph_Map:
 4502  4502                      ; line   831 :         }    
 4503  4503                      ; line   832 :         break;
 4504  4504                      $DGL    0,84
 4505  4505 00712  EF28                  br      $?L0110                                         ;[INF] 2, 3
 4506  4506                      ; line   833 :         
 4507  4507                      ; line   834 :         /* Sunday Lit */
 4508  4508                      ; line   835 :         case 7:
 4509  4509 00714                ?L0118:
 4510  4510                      ; line   836 :         {    
 4511  4511 00714                ??bb08_SECTF_Glyph_Map:
 4512  4512                      ; line   837 :             SEG25_DEF |= 0x01U;
 4513  4513                      $DGL    0,89
 4514  4514 00714  8F1904                mov     a,!SEG25                                        ;[INF] 3, 1
 4515  4515 00717  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4516  4516 00719  9F1904                mov     !SEG25,a                                        ;[INF] 3, 1
 4517  4517                      ; line   838 :             SEG23_DEF &= 0x03U;
 4518  4518                      $DGL    0,90
 4519  4519 0071C  8F1704                mov     a,!SEG23                                        ;[INF] 3, 1
 4520  4520 0071F  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4521  4521 00721  9F1704                mov     !SEG23,a                                        ;[INF] 3, 1
 4522  4522                      ; line   839 :             SEG22_DEF &= 0x0EU;
 4523  4523                      $DGL    0,91
 4524  4524 00724  8F1604                mov     a,!SEG22                                        ;[INF] 3, 1
 4525  4525 00727  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4526  4526 00729  9F1604                mov     !SEG22,a                                        ;[INF] 3, 1
 4527  4527                      ; line   840 :             SEG20_DEF &= 0x0EU;
 4528  4528                      $DGL    0,92
 4529  4529 0072C  8F1404                mov     a,!SEG20                                        ;[INF] 3, 1
 4530  4530 0072F  5C0E                  and     a,#0EH  ; 14                                    ;[INF] 2, 1
 4531  4531 00731  9F1404                mov     !SEG20,a                                        ;[INF] 3, 1
 4532  4532                      ; line   841 :             SEG18_DEF &= 0x03U;
 4533  4533                      $DGL    0,93
 4534  4534 00734  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4535  4535 00737  5C03                  and     a,#03H  ; 3                                     ;[INF] 2, 1
 4536  4536 00739  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4537  4537 0073C                ??eb08_SECTF_Glyph_Map:
 4538  4538                      ; line   842 :         }
 4539  4539                      ; line   843 :         break;
 4540  4540                      ; line   844 :         
 4541  4541                      ; line   845 :         default:
 4542  4542 0073C                ?L0119:
 4543  4543                      ; line   846 :         {
 4544  4544 0073C                ??bb09_SECTF_Glyph_Map:
 4545  4545 0073C                ??eb09_SECTF_Glyph_Map:
 4546  4546                      ; line   847 :             /* Bad Selection */
 4547  4547                      ; line   848 :         }
 4548  4548                      ; line   849 :         break;
 4549  4549 0073C                ??eb00_SECTF_Glyph_Map:
 4550  4550                      ; line   850 :     }
 4551  4551 0073C                ?L0110:
 4552  4552                      ; line   851 : }
 4553  4553                      $DGL    0,103
 4554  4554 0073C                ??ef_SECTF_Glyph_Map:
 4555  4555 0073C  C0                    pop     ax                                              ;[INF] 1, 1
 4556  4556 0073D  C6                    pop     hl                                              ;[INF] 1, 1
 4557  4557 0073E  D7                    ret                                                     ;[INF] 1, 6
 4558  4558 0073F                ??ee_SECTF_Glyph_Map:
 4559  4559                      ; line   852 : /***************************************************************
 4560  4560                      ;              ********************************************************
 4561  4561                      ; line   853 : End of function SECTF_Glyph_Map
 4562  4562                      ; line   854 : ****************************************************************
 4563  4563                      ;              *******************************************************/
 4564  4564                      ; line   855 : 
 4565  4565                      ; line   856 : /***************************************************************
 4566  4566                      ;              ********************************************************
 4567  4567                      ; line   857 : * Function Name : Symbol_Map
 4568  4568                      ; line   858 : * Description   : Takes a symbol code and turns on/off LCD Panel
 4569  4569                      ;               Symbols. The 
 4570  4570                      ; line   859 : *                 first digit should be which symbol to control 
 4571  4571                      ;              (see symbols 
 4572  4572                      ; line   860 : *                 listed below) 
 4573  4573                      ; line   861 : *                 The second should be either a 1 or a 0. 
 4574  4574                      ; line   862 : *                 (1 - Turn on, 0 - Turn Off)
 4575  4575                      ; line   863 : *                 1 - Heat         5 - mmHg             9 - Degr
 4576  4576                      ;              ees F
 4577  4577                      ; line   864 : *                 2 - Fan          6 - Volts            A - Alar
 4578  4578                      ;              m
 4579  4579                      ; line   865 : *                 3 - Zone         7 - Heart            B - AM
 4580  4580                      ; line   866 : *                 4 - mg/ml        8 - Degrees C        C - PM
 4581  4581                      ; line   867 : *                 For example '61' would turn on the Volts symbo
 4582  4582                      ;              l and 
 4583  4583                      ; line   868 : *                 C0 would turn off the PM symbol.
 4584  4584                      ; line   869 : * Arguments     : int16_t input 
 4585  4585                      ; line   870 : *                           0 - valid input
 4586  4586                      ; line   871 : *                          -1 - invalid input
 4587  4587                      ; line   872 : * Return Value  : int8_t
 4588  4588                      ; line   873 : ****************************************************************
 4589  4589                      ;              *******************************************************/
 4590  4590                      ; line   874 : int8_t Symbol_Map (const uint16_t input)
 4591  4591                      ; line   875 : {
 4592  4592 0073F                _Symbol_Map:
 4593  4593                      $DGL    1,438
 4594  4594 0073F  C7                    push    hl                                              ;[INF] 1, 1
 4595  4595 00740  C1                    push    ax                                              ;[INF] 1, 1
 4596  4596 00741  C1                    push    ax                                              ;[INF] 1, 1
 4597  4597 00742  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 4598  4598 00745                ??bf_Symbol_Map:
 4599  4599                      ; line   876 :     /* Declare a status variable */
 4600  4600                      ; line   877 :     int8_t status = 0;
 4601  4601                      $DGL    0,3
 4602  4602 00745  CC0100                mov     [hl+1],#00H     ; status,0                      ;[INF] 3, 1
 4603  4603                      ; line   878 :     
 4604  4604                      ; line   879 :     switch (input)
 4605  4605                      $DGL    0,5
 4606  4606 00748  AC02                  movw    ax,[hl+2]       ; input                         ;[INF] 2, 1
 4607  4607 0074A  243031                subw    ax,#03130H      ; 12592                         ;[INF] 3, 1
 4608  4608 0074D  61F8                  sknz                                                    ;[INF] 2, 1
 4609  4609 0074F  EE1601                br      $!?L0126                                        ;[INF] 3, 3
 4610  4610 00752  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4611  4611 00755  61F8                  sknz                                                    ;[INF] 2, 1
 4612  4612 00757  EE0301                br      $!?L0125                                        ;[INF] 3, 3
 4613  4613 0075A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4614  4614 0075D  61F8                  sknz                                                    ;[INF] 2, 1
 4615  4615 0075F  EE1C01                br      $!?L0128                                        ;[INF] 3, 3
 4616  4616 00762  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4617  4617 00765  61F8                  sknz                                                    ;[INF] 2, 1
 4618  4618 00767  EE0901                br      $!?L0127                                        ;[INF] 3, 3
 4619  4619 0076A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4620  4620 0076D  61F8                  sknz                                                    ;[INF] 2, 1
 4621  4621 0076F  EE2201                br      $!?L0130                                        ;[INF] 3, 3
 4622  4622 00772  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4623  4623 00775  61F8                  sknz                                                    ;[INF] 2, 1
 4624  4624 00777  EE0F01                br      $!?L0129                                        ;[INF] 3, 3
 4625  4625 0077A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4626  4626 0077D  61F8                  sknz                                                    ;[INF] 2, 1
 4627  4627 0077F  EE2801                br      $!?L0132                                        ;[INF] 3, 3
 4628  4628 00782  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4629  4629 00785  61F8                  sknz                                                    ;[INF] 2, 1
 4630  4630 00787  EE1501                br      $!?L0131                                        ;[INF] 3, 3
 4631  4631 0078A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4632  4632 0078D  61F8                  sknz                                                    ;[INF] 2, 1
 4633  4633 0078F  EE2E01                br      $!?L0134                                        ;[INF] 3, 3
 4634  4634 00792  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4635  4635 00795  61F8                  sknz                                                    ;[INF] 2, 1
 4636  4636 00797  EE1B01                br      $!?L0133                                        ;[INF] 3, 3
 4637  4637 0079A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4638  4638 0079D  61F8                  sknz                                                    ;[INF] 2, 1
 4639  4639 0079F  EE3401                br      $!?L0136                                        ;[INF] 3, 3
 4640  4640 007A2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4641  4641 007A5  61F8                  sknz                                                    ;[INF] 2, 1
 4642  4642 007A7  EE2101                br      $!?L0135                                        ;[INF] 3, 3
 4643  4643 007AA  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4644  4644 007AD  61F8                  sknz                                                    ;[INF] 2, 1
 4645  4645 007AF  EE3A01                br      $!?L0138                                        ;[INF] 3, 3
 4646  4646 007B2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4647  4647 007B5  61F8                  sknz                                                    ;[INF] 2, 1
 4648  4648 007B7  EE2701                br      $!?L0137                                        ;[INF] 3, 3
 4649  4649 007BA  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4650  4650 007BD  61F8                  sknz                                                    ;[INF] 2, 1
 4651  4651 007BF  EE4001                br      $!?L0140                                        ;[INF] 3, 3
 4652  4652 007C2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4653  4653 007C5  61F8                  sknz                                                    ;[INF] 2, 1
 4654  4654 007C7  EE2D01                br      $!?L0139                                        ;[INF] 3, 3
 4655  4655 007CA  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4656  4656 007CD  61F8                  sknz                                                    ;[INF] 2, 1
 4657  4657 007CF  EE4601                br      $!?L0142                                        ;[INF] 3, 3
 4658  4658 007D2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4659  4659 007D5  61F8                  sknz                                                    ;[INF] 2, 1
 4660  4660 007D7  EE3301                br      $!?L0141                                        ;[INF] 3, 3
 4661  4661 007DA  24FF07                subw    ax,#07FFH       ; 2047                          ;[INF] 3, 1
 4662  4662 007DD  61F8                  sknz                                                    ;[INF] 2, 1
 4663  4663 007DF  EE4C01                br      $!?L0144                                        ;[INF] 3, 3
 4664  4664 007E2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4665  4665 007E5  61F8                  sknz                                                    ;[INF] 2, 1
 4666  4666 007E7  EE3901                br      $!?L0143                                        ;[INF] 3, 3
 4667  4667 007EA  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4668  4668 007ED  61F8                  sknz                                                    ;[INF] 2, 1
 4669  4669 007EF  EE6601                br      $!?L0148                                        ;[INF] 3, 3
 4670  4670 007F2  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4671  4671 007F5  61F8                  sknz                                                    ;[INF] 2, 1
 4672  4672 007F7  EE5401                br      $!?L0147                                        ;[INF] 3, 3
 4673  4673 007FA  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4674  4674 007FD  61F8                  sknz                                                    ;[INF] 2, 1
 4675  4675 007FF  EE7E01                br      $!?L0152                                        ;[INF] 3, 3
 4676  4676 00802  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4677  4677 00805  61F8                  sknz                                                    ;[INF] 2, 1
 4678  4678 00807  EE6C01                br      $!?L0151                                        ;[INF] 3, 3
 4679  4679 0080A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4680  4680 0080D  61F8                  sknz                                                    ;[INF] 2, 1
 4681  4681 0080F  EE9601                br      $!?L0156                                        ;[INF] 3, 3
 4682  4682 00812  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4683  4683 00815  61F8                  sknz                                                    ;[INF] 2, 1
 4684  4684 00817  EE8401                br      $!?L0155                                        ;[INF] 3, 3
 4685  4685 0081A  24FF1C                subw    ax,#01CFFH      ; 7423                          ;[INF] 3, 1
 4686  4686 0081D  61F8                  sknz                                                    ;[INF] 2, 1
 4687  4687 0081F  EE2201                br      $!?L0146                                        ;[INF] 3, 3
 4688  4688 00822  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4689  4689 00825  61F8                  sknz                                                    ;[INF] 2, 1
 4690  4690 00827  EE0F01                br      $!?L0145                                        ;[INF] 3, 3
 4691  4691 0082A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4692  4692 0082D  61F8                  sknz                                                    ;[INF] 2, 1
 4693  4693 0082F  EE3A01                br      $!?L0150                                        ;[INF] 3, 3
 4694  4694 00832  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4695  4695 00835  61F8                  sknz                                                    ;[INF] 2, 1
 4696  4696 00837  EE2801                br      $!?L0149                                        ;[INF] 3, 3
 4697  4697 0083A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4698  4698 0083D  61F8                  sknz                                                    ;[INF] 2, 1
 4699  4699 0083F  EE5201                br      $!?L0154                                        ;[INF] 3, 3
 4700  4700 00842  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4701  4701 00845  61F8                  sknz                                                    ;[INF] 2, 1
 4702  4702 00847  EE4001                br      $!?L0153                                        ;[INF] 3, 3
 4703  4703 0084A  24FF00                subw    ax,#0FFH        ; 255                           ;[INF] 3, 1
 4704  4704 0084D  61F8                  sknz                                                    ;[INF] 2, 1
 4705  4705 0084F  EE6A01                br      $!?L0158                                        ;[INF] 3, 3
 4706  4706 00852  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 4707  4707 00855  61F8                  sknz                                                    ;[INF] 2, 1
 4708  4708 00857  EE5801                br      $!?L0157                                        ;[INF] 3, 3
 4709  4709 0085A  EE6901                br      $!?L0159                                        ;[INF] 3, 3
 4710  4710                      ; line   880 :     {
 4711  4711 0085D                ??bb00_Symbol_Map:
 4712  4712                      ; line   881 :         /* Heat Symbol On/Off */
 4713  4713                      ; line   882 :         case LCD_HEAT_ON:
 4714  4714 0085D                ?L0125:
 4715  4715                      ; line   883 :         {
 4716  4716 0085D                ??bb01_Symbol_Map:
 4717  4717                      ; line   884 :             SEG27_DEF |= 0x01U;
 4718  4718                      $DGL    0,10
 4719  4719 0085D  8F1C04                mov     a,!SEG27                                        ;[INF] 3, 1
 4720  4720 00860  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4721  4721 00862  9F1C04                mov     !SEG27,a                                        ;[INF] 3, 1
 4722  4722 00865                ??eb01_Symbol_Map:
 4723  4723                      ; line   885 :         }
 4724  4724                      ; line   886 :         break;
 4725  4725                      $DGL    0,12
 4726  4726 00865  EE6101                br      $!?L0124                                        ;[INF] 3, 3
 4727  4727                      ; line   887 :         
 4728  4728                      ; line   888 :         case LCD_HEAT_OFF:
 4729  4729 00868                ?L0126:
 4730  4730                      ; line   889 :         {
 4731  4731 00868                ??bb02_Symbol_Map:
 4732  4732                      ; line   890 :             SEG27_DEF &= 0xFEU;
 4733  4733                      $DGL    0,16
 4734  4734 00868  8F1C04                mov     a,!SEG27                                        ;[INF] 3, 1
 4735  4735 0086B  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4736  4736 0086D  9F1C04                mov     !SEG27,a                                        ;[INF] 3, 1
 4737  4737 00870                ??eb02_Symbol_Map:
 4738  4738                      ; line   891 :         }    
 4739  4739                      ; line   892 :         break;
 4740  4740                      $DGL    0,18
 4741  4741 00870  EE5601                br      $!?L0124                                        ;[INF] 3, 3
 4742  4742                      ; line   893 : 
 4743  4743                      ; line   894 :         /* Fan Symbol On/Off */
 4744  4744                      ; line   895 :         case LCD_FAN_ON:
 4745  4745 00873                ?L0127:
 4746  4746                      ; line   896 :         {
 4747  4747 00873                ??bb03_Symbol_Map:
 4748  4748                      ; line   897 :             SEG33_DEF |= 0x01U;
 4749  4749                      $DGL    0,23
 4750  4750 00873  8F2204                mov     a,!SEG33                                        ;[INF] 3, 1
 4751  4751 00876  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4752  4752 00878  9F2204                mov     !SEG33,a                                        ;[INF] 3, 1
 4753  4753 0087B                ??eb03_Symbol_Map:
 4754  4754                      ; line   898 :         }    
 4755  4755                      ; line   899 :         break;
 4756  4756                      $DGL    0,25
 4757  4757 0087B  EE4B01                br      $!?L0124                                        ;[INF] 3, 3
 4758  4758                      ; line   900 :         
 4759  4759                      ; line   901 :         case LCD_FAN_OFF:
 4760  4760 0087E                ?L0128:
 4761  4761                      ; line   902 :         {
 4762  4762 0087E                ??bb04_Symbol_Map:
 4763  4763                      ; line   903 :             SEG33_DEF &= 0xFEU;
 4764  4764                      $DGL    0,29
 4765  4765 0087E  8F2204                mov     a,!SEG33                                        ;[INF] 3, 1
 4766  4766 00881  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4767  4767 00883  9F2204                mov     !SEG33,a                                        ;[INF] 3, 1
 4768  4768 00886                ??eb04_Symbol_Map:
 4769  4769                      ; line   904 :         }    
 4770  4770                      ; line   905 :         break;
 4771  4771                      $DGL    0,31
 4772  4772 00886  EE4001                br      $!?L0124                                        ;[INF] 3, 3
 4773  4773                      ; line   906 :         
 4774  4774                      ; line   907 :         /* Zone Symbol On/Off */
 4775  4775                      ; line   908 :         case LCD_ZONE_ON:
 4776  4776 00889                ?L0129:
 4777  4777                      ; line   909 :         {
 4778  4778 00889                ??bb05_Symbol_Map:
 4779  4779                      ; line   910 :             SEG32_DEF |= 0x01U;
 4780  4780                      $DGL    0,36
 4781  4781 00889  8F2104                mov     a,!SEG32                                        ;[INF] 3, 1
 4782  4782 0088C  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4783  4783 0088E  9F2104                mov     !SEG32,a                                        ;[INF] 3, 1
 4784  4784 00891                ??eb05_Symbol_Map:
 4785  4785                      ; line   911 :         }   
 4786  4786                      ; line   912 :         break;
 4787  4787                      $DGL    0,38
 4788  4788 00891  EE3501                br      $!?L0124                                        ;[INF] 3, 3
 4789  4789                      ; line   913 :         
 4790  4790                      ; line   914 :         case LCD_ZONE_OFF:
 4791  4791 00894                ?L0130:
 4792  4792                      ; line   915 :         {
 4793  4793 00894                ??bb06_Symbol_Map:
 4794  4794                      ; line   916 :             SEG32_DEF &= 0xFEU;
 4795  4795                      $DGL    0,42
 4796  4796 00894  8F2104                mov     a,!SEG32                                        ;[INF] 3, 1
 4797  4797 00897  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4798  4798 00899  9F2104                mov     !SEG32,a                                        ;[INF] 3, 1
 4799  4799 0089C                ??eb06_Symbol_Map:
 4800  4800                      ; line   917 :         }    
 4801  4801                      ; line   918 :         break;
 4802  4802                      $DGL    0,44
 4803  4803 0089C  EE2A01                br      $!?L0124                                        ;[INF] 3, 3
 4804  4804                      ; line   919 :         
 4805  4805                      ; line   920 :         /* MGML Symbol On/Off */
 4806  4806                      ; line   921 :         case LCD_MGML_ON:
 4807  4807 0089F                ?L0131:
 4808  4808                      ; line   922 :         {
 4809  4809 0089F                ??bb07_Symbol_Map:
 4810  4810                      ; line   923 :             SEG34_DEF |= 0x01U;
 4811  4811                      $DGL    0,49
 4812  4812 0089F  8F2304                mov     a,!SEG34                                        ;[INF] 3, 1
 4813  4813 008A2  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4814  4814 008A4  9F2304                mov     !SEG34,a                                        ;[INF] 3, 1
 4815  4815 008A7                ??eb07_Symbol_Map:
 4816  4816                      ; line   924 :         }    
 4817  4817                      ; line   925 :         break;
 4818  4818                      $DGL    0,51
 4819  4819 008A7  EE1F01                br      $!?L0124                                        ;[INF] 3, 3
 4820  4820                      ; line   926 : 
 4821  4821                      ; line   927 :         case LCD_MGML_OFF:
 4822  4822 008AA                ?L0132:
 4823  4823                      ; line   928 :         {
 4824  4824 008AA                ??bb08_Symbol_Map:
 4825  4825                      ; line   929 :             SEG34_DEF &= 0xFEU;
 4826  4826                      $DGL    0,55
 4827  4827 008AA  8F2304                mov     a,!SEG34                                        ;[INF] 3, 1
 4828  4828 008AD  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4829  4829 008AF  9F2304                mov     !SEG34,a                                        ;[INF] 3, 1
 4830  4830 008B2                ??eb08_Symbol_Map:
 4831  4831                      ; line   930 :         }    
 4832  4832                      ; line   931 :         break;    
 4833  4833                      $DGL    0,57
 4834  4834 008B2  EE1401                br      $!?L0124                                        ;[INF] 3, 3
 4835  4835                      ; line   932 :         
 4836  4836                      ; line   933 :         /* MMHG Symbol On/Off */
 4837  4837                      ; line   934 :         case LCD_MMHG_ON:
 4838  4838 008B5                ?L0133:
 4839  4839                      ; line   935 :         {
 4840  4840 008B5                ??bb09_Symbol_Map:
 4841  4841                      ; line   936 :             SEG35_DEF |= 0x01U;
 4842  4842                      $DGL    0,62
 4843  4843 008B5  8F2404                mov     a,!SEG35                                        ;[INF] 3, 1
 4844  4844 008B8  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4845  4845 008BA  9F2404                mov     !SEG35,a                                        ;[INF] 3, 1
 4846  4846 008BD                ??eb09_Symbol_Map:
 4847  4847                      ; line   937 :         }    
 4848  4848                      ; line   938 :         break;
 4849  4849                      $DGL    0,64
 4850  4850 008BD  EE0901                br      $!?L0124                                        ;[INF] 3, 3
 4851  4851                      ; line   939 :         
 4852  4852                      ; line   940 :         case LCD_MMHG_OFF:
 4853  4853 008C0                ?L0134:
 4854  4854                      ; line   941 :         {
 4855  4855 008C0                ??bb0A_Symbol_Map:
 4856  4856                      ; line   942 :             SEG35_DEF &= 0xFEU;
 4857  4857                      $DGL    0,68
 4858  4858 008C0  8F2404                mov     a,!SEG35                                        ;[INF] 3, 1
 4859  4859 008C3  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4860  4860 008C5  9F2404                mov     !SEG35,a                                        ;[INF] 3, 1
 4861  4861 008C8                ??eb0A_Symbol_Map:
 4862  4862                      ; line   943 :         }    
 4863  4863                      ; line   944 :         break;
 4864  4864                      $DGL    0,70
 4865  4865 008C8  EEFE00                br      $!?L0124                                        ;[INF] 3, 3
 4866  4866                      ; line   945 :         
 4867  4867                      ; line   946 :         /* Volts Symbol On/Off */
 4868  4868                      ; line   947 :         case LCD_VOLTS_ON:
 4869  4869 008CB                ?L0135:
 4870  4870                      ; line   948 :         {
 4871  4871 008CB                ??bb0B_Symbol_Map:
 4872  4872                      ; line   949 :             SEG31_DEF |= 0x01U;
 4873  4873                      $DGL    0,75
 4874  4874 008CB  8F2004                mov     a,!SEG31                                        ;[INF] 3, 1
 4875  4875 008CE  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4876  4876 008D0  9F2004                mov     !SEG31,a                                        ;[INF] 3, 1
 4877  4877 008D3                ??eb0B_Symbol_Map:
 4878  4878                      ; line   950 :         }    
 4879  4879                      ; line   951 :         break;
 4880  4880                      $DGL    0,77
 4881  4881 008D3  EEF300                br      $!?L0124                                        ;[INF] 3, 3
 4882  4882                      ; line   952 :         
 4883  4883                      ; line   953 :         case LCD_VOLTS_OFF:
 4884  4884 008D6                ?L0136:
 4885  4885                      ; line   954 :         {
 4886  4886 008D6                ??bb0C_Symbol_Map:
 4887  4887                      ; line   955 :             SEG31_DEF &= 0xFEU;
 4888  4888                      $DGL    0,81
 4889  4889 008D6  8F2004                mov     a,!SEG31                                        ;[INF] 3, 1
 4890  4890 008D9  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4891  4891 008DB  9F2004                mov     !SEG31,a                                        ;[INF] 3, 1
 4892  4892 008DE                ??eb0C_Symbol_Map:
 4893  4893                      ; line   956 :         }    
 4894  4894                      ; line   957 :         break;
 4895  4895                      $DGL    0,83
 4896  4896 008DE  EEE800                br      $!?L0124                                        ;[INF] 3, 3
 4897  4897                      ; line   958 :                 
 4898  4898                      ; line   959 :         /* Heart Symbol On/Off */
 4899  4899                      ; line   960 :         case LCD_HEART_ON:
 4900  4900 008E1                ?L0137:
 4901  4901                      ; line   961 :         {
 4902  4902 008E1                ??bb0D_Symbol_Map:
 4903  4903                      ; line   962 :             SEG30_DEF |= 0x01U;
 4904  4904                      $DGL    0,88
 4905  4905 008E1  8F1F04                mov     a,!SEG30                                        ;[INF] 3, 1
 4906  4906 008E4  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 4907  4907 008E6  9F1F04                mov     !SEG30,a                                        ;[INF] 3, 1
 4908  4908 008E9                ??eb0D_Symbol_Map:
 4909  4909                      ; line   963 :         }    
 4910  4910                      ; line   964 :         break;
 4911  4911                      $DGL    0,90
 4912  4912 008E9  EEDD00                br      $!?L0124                                        ;[INF] 3, 3
 4913  4913                      ; line   965 :         
 4914  4914                      ; line   966 :         case LCD_HEART_OFF:
 4915  4915 008EC                ?L0138:
 4916  4916                      ; line   967 :         {
 4917  4917 008EC                ??bb0E_Symbol_Map:
 4918  4918                      ; line   968 :             SEG30_DEF &= 0xFEU;
 4919  4919                      $DGL    0,94
 4920  4920 008EC  8F1F04                mov     a,!SEG30                                        ;[INF] 3, 1
 4921  4921 008EF  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 4922  4922 008F1  9F1F04                mov     !SEG30,a                                        ;[INF] 3, 1
 4923  4923 008F4                ??eb0E_Symbol_Map:
 4924  4924                      ; line   969 :         }    
 4925  4925                      ; line   970 :         break;
 4926  4926                      $DGL    0,96
 4927  4927 008F4  EED200                br      $!?L0124                                        ;[INF] 3, 3
 4928  4928                      ; line   971 :         
 4929  4929                      ; line   972 :         /* Degrees C Symbol On/Off */
 4930  4930                      ; line   973 :         case LCD_DEGREESC_ON:
 4931  4931 008F7                ?L0139:
 4932  4932                      ; line   974 :             SEG16_DEF |= 0x04U;
 4933  4933                      $DGL    0,100
 4934  4934 008F7  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 4935  4935 008FA  6C04                  or      a,#04H  ; 4                                     ;[INF] 2, 1
 4936  4936 008FC  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 4937  4937                      ; line   975 :         break;
 4938  4938                      $DGL    0,101
 4939  4939 008FF  EEC700                br      $!?L0124                                        ;[INF] 3, 3
 4940  4940                      ; line   976 : 
 4941  4941                      ; line   977 :         case LCD_DEGREESC_OFF:
 4942  4942 00902                ?L0140:
 4943  4943                      ; line   978 :         {
 4944  4944 00902                ??bb0F_Symbol_Map:
 4945  4945                      ; line   979 :             SEG16_DEF &= 0xFBU;
 4946  4946                      $DGL    0,105
 4947  4947 00902  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 4948  4948 00905  5CFB                  and     a,#0FBH ; 251                                   ;[INF] 2, 1
 4949  4949 00907  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 4950  4950 0090A                ??eb0F_Symbol_Map:
 4951  4951                      ; line   980 :         }    
 4952  4952                      ; line   981 :         break;
 4953  4953                      $DGL    0,107
 4954  4954 0090A  EEBC00                br      $!?L0124                                        ;[INF] 3, 3
 4955  4955                      ; line   982 :         
 4956  4956                      ; line   983 :         /* Degrees F Symbol On/Off */
 4957  4957                      ; line   984 :         case LCD_DEGREESF_ON:
 4958  4958 0090D                ?L0141:
 4959  4959                      ; line   985 :         {
 4960  4960 0090D                ??bb10_Symbol_Map:
 4961  4961                      ; line   986 :             SEG16_DEF |= 0x08U;
 4962  4962                      $DGL    0,112
 4963  4963 0090D  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 4964  4964 00910  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 4965  4965 00912  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 4966  4966 00915                ??eb10_Symbol_Map:
 4967  4967                      ; line   987 :         }    
 4968  4968                      ; line   988 :         break;
 4969  4969                      $DGL    0,114
 4970  4970 00915  EEB100                br      $!?L0124                                        ;[INF] 3, 3
 4971  4971                      ; line   989 :  
 4972  4972                      ; line   990 :         case LCD_DEGREESF_OFF:
 4973  4973 00918                ?L0142:
 4974  4974                      ; line   991 :         {
 4975  4975 00918                ??bb11_Symbol_Map:
 4976  4976                      ; line   992 :             SEG16_DEF &= 0xF7U;
 4977  4977                      $DGL    0,118
 4978  4978 00918  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 4979  4979 0091B  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 4980  4980 0091D  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 4981  4981 00920                ??eb11_Symbol_Map:
 4982  4982                      ; line   993 :         }    
 4983  4983                      ; line   994 :         break;            
 4984  4984                      $DGL    0,120
 4985  4985 00920  EEA600                br      $!?L0124                                        ;[INF] 3, 3
 4986  4986                      ; line   995 :         
 4987  4987                      ; line   996 :         /* Alarm Symbol On/Off */
 4988  4988                      ; line   997 :         case LCD_ALARM_ON:
 4989  4989 00923                ?L0143:
 4990  4990                      ; line   998 :         {
 4991  4991 00923                ??bb12_Symbol_Map:
 4992  4992                      ; line   999 :             SEG18_DEF |= 0x02U;
 4993  4993                      $DGL    0,125
 4994  4994 00923  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 4995  4995 00926  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 4996  4996 00928  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 4997  4997 0092B                ??eb12_Symbol_Map:
 4998  4998                      ; line  1000 :         }    
 4999  4999                      ; line  1001 :         break;
 5000  5000                      $DGL    0,127
 5001  5001 0092B  EE9B00                br      $!?L0124                                        ;[INF] 3, 3
 5002  5002                      ; line  1002 : 
 5003  5003                      ; line  1003 :         case LCD_ALARM_OFF:
 5004  5004 0092E                ?L0144:
 5005  5005                      ; line  1004 :         {
 5006  5006 0092E                ??bb13_Symbol_Map:
 5007  5007                      ; line  1005 :             SEG18_DEF &= 0xFDU;
 5008  5008                      $DGL    0,131
 5009  5009 0092E  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5010  5010 00931  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 5011  5011 00933  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5012  5012 00936                ??eb13_Symbol_Map:
 5013  5013                      ; line  1006 :         }
 5014  5014                      ; line  1007 :         break;
 5015  5015                      $DGL    0,133
 5016  5016 00936  EE9000                br      $!?L0124                                        ;[INF] 3, 3
 5017  5017                      ; line  1008 : 
 5018  5018                      ; line  1009 :         /* Alarm Symbol On/Off */
 5019  5019                      ; line  1010 :         case LCD_ALARM_ON_1:
 5020  5020 00939                ?L0145:
 5021  5021                      ; line  1011 :             SEG18_DEF |= 0x02U;
 5022  5022                      $DGL    0,137
 5023  5023 00939  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5024  5024 0093C  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 5025  5025 0093E  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5026  5026                      ; line  1012 :         break;
 5027  5027                      $DGL    0,138
 5028  5028 00941  EE8500                br      $!?L0124                                        ;[INF] 3, 3
 5029  5029                      ; line  1013 :  
 5030  5030                      ; line  1014 :         case LCD_ALARM_OFF_1:
 5031  5031 00944                ?L0146:
 5032  5032                      ; line  1015 :         {
 5033  5033 00944                ??bb14_Symbol_Map:
 5034  5034                      ; line  1016 :             SEG18_DEF &= 0xFDU;
 5035  5035                      $DGL    0,142
 5036  5036 00944  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5037  5037 00947  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 5038  5038 00949  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5039  5039 0094C                ??eb14_Symbol_Map:
 5040  5040                      ; line  1017 :         }    
 5041  5041                      ; line  1018 :        break;    
 5042  5042                      $DGL    0,144
 5043  5043 0094C  EF7B                  br      $?L0124                                         ;[INF] 2, 3
 5044  5044                      ; line  1019 :         
 5045  5045                      ; line  1020 :         /* AM Symbol On/Off */
 5046  5046                      ; line  1021 :         case LCD_AM_ON:
 5047  5047 0094E                ?L0147:
 5048  5048                      ; line  1022 :         {
 5049  5049 0094E                ??bb15_Symbol_Map:
 5050  5050                      ; line  1023 :             SEG18_DEF |= 0x01U;
 5051  5051                      $DGL    0,149
 5052  5052 0094E  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5053  5053 00951  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 5054  5054 00953  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5055  5055 00956                ??eb15_Symbol_Map:
 5056  5056                      ; line  1024 :         }
 5057  5057                      ; line  1025 :         break;
 5058  5058                      $DGL    0,151
 5059  5059 00956  EF71                  br      $?L0124                                         ;[INF] 2, 3
 5060  5060                      ; line  1026 :  
 5061  5061                      ; line  1027 :         case LCD_AM_OFF:
 5062  5062 00958                ?L0148:
 5063  5063                      ; line  1028 :         {
 5064  5064 00958                ??bb16_Symbol_Map:
 5065  5065                      ; line  1029 :             SEG18_DEF &= 0xFEU;
 5066  5066                      $DGL    0,155
 5067  5067 00958  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5068  5068 0095B  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 5069  5069 0095D  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5070  5070 00960                ??eb16_Symbol_Map:
 5071  5071                      ; line  1030 :         }    
 5072  5072                      ; line  1031 :         break;    
 5073  5073                      $DGL    0,157
 5074  5074 00960  EF67                  br      $?L0124                                         ;[INF] 2, 3
 5075  5075                      ; line  1032 : 
 5076  5076                      ; line  1033 :         /* AM Symbol On/Off */
 5077  5077                      ; line  1034 :         case LCD_AM_ON_1:
 5078  5078 00962                ?L0149:
 5079  5079                      ; line  1035 :         {
 5080  5080 00962                ??bb17_Symbol_Map:
 5081  5081                      ; line  1036 :             SEG18_DEF |= 0x01U;
 5082  5082                      $DGL    0,162
 5083  5083 00962  8F1204                mov     a,!SEG18                                        ;[INF] 3, 1
 5084  5084 00965  6C01                  or      a,#01H  ; 1                                     ;[INF] 2, 1
 5085  5085 00967  9F1204                mov     !SEG18,a                                        ;[INF] 3, 1
 5086  5086 0096A                ??eb17_Symbol_Map:
 5087  5087                      ; line  1037 :         }
 5088  5088                      ; line  1038 :         break;
 5089  5089                      $DGL    0,164
 5090  5090 0096A  EF5D                  br      $?L0124                                         ;[INF] 2, 3
 5091  5091                      ; line  1039 :         
 5092  5092                      ; line  1040 :         case LCD_AM_OFF_1:
 5093  5093 0096C                ?L0150:
 5094  5094                      ; line  1041 :         {
 5095  5095 0096C                ??bb18_Symbol_Map:
 5096  5096                      ; line  1042 :             SEG27_DEF &= 0xFEU;
 5097  5097                      $DGL    0,168
 5098  5098 0096C  8F1C04                mov     a,!SEG27                                        ;[INF] 3, 1
 5099  5099 0096F  5CFE                  and     a,#0FEH ; 254                                   ;[INF] 2, 1
 5100  5100 00971  9F1C04                mov     !SEG27,a                                        ;[INF] 3, 1
 5101  5101 00974                ??eb18_Symbol_Map:
 5102  5102                      ; line  1043 :         }    
 5103  5103                      ; line  1044 :         break;    
 5104  5104                      $DGL    0,170
 5105  5105 00974  EF53                  br      $?L0124                                         ;[INF] 2, 3
 5106  5106                      ; line  1045 :         
 5107  5107                      ; line  1046 :         /* PM Symbol On/Off */
 5108  5108                      ; line  1047 :         case LCD_PM_ON:
 5109  5109 00976                ?L0151:
 5110  5110                      ; line  1048 :         {
 5111  5111 00976                ??bb19_Symbol_Map:
 5112  5112                      ; line  1049 :             SEG16_DEF |= 0x02U;
 5113  5113                      $DGL    0,175
 5114  5114 00976  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 5115  5115 00979  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 5116  5116 0097B  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 5117  5117 0097E                ??eb19_Symbol_Map:
 5118  5118                      ; line  1050 :         }    
 5119  5119                      ; line  1051 :         break;
 5120  5120                      $DGL    0,177
 5121  5121 0097E  EF49                  br      $?L0124                                         ;[INF] 2, 3
 5122  5122                      ; line  1052 :         
 5123  5123                      ; line  1053 :         case LCD_PM_OFF:
 5124  5124 00980                ?L0152:
 5125  5125                      ; line  1054 :         {
 5126  5126 00980                ??bb1A_Symbol_Map:
 5127  5127                      ; line  1055 :             SEG16_DEF &= 0xFDU;
 5128  5128                      $DGL    0,181
 5129  5129 00980  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 5130  5130 00983  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 5131  5131 00985  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 5132  5132 00988                ??eb1A_Symbol_Map:
 5133  5133                      ; line  1056 :         }    
 5134  5134                      ; line  1057 :         break;
 5135  5135                      $DGL    0,183
 5136  5136 00988  EF3F                  br      $?L0124                                         ;[INF] 2, 3
 5137  5137                      ; line  1058 :         
 5138  5138                      ; line  1059 :         /* PM Symbol On/Off */
 5139  5139                      ; line  1060 :         case LCD_PM_ON_1:
 5140  5140 0098A                ?L0153:
 5141  5141                      ; line  1061 :         {
 5142  5142 0098A                ??bb1B_Symbol_Map:
 5143  5143                      ; line  1062 :            SEG16_DEF |= 0x02U;
 5144  5144                      $DGL    0,188
 5145  5145 0098A  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 5146  5146 0098D  6C02                  or      a,#02H  ; 2                                     ;[INF] 2, 1
 5147  5147 0098F  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 5148  5148 00992                ??eb1B_Symbol_Map:
 5149  5149                      ; line  1063 :         }    
 5150  5150                      ; line  1064 :         break;
 5151  5151                      $DGL    0,190
 5152  5152 00992  EF35                  br      $?L0124                                         ;[INF] 2, 3
 5153  5153                      ; line  1065 :         
 5154  5154                      ; line  1066 :         case LCD_PM_OFF_1:
 5155  5155 00994                ?L0154:
 5156  5156                      ; line  1067 :         {
 5157  5157 00994                ??bb1C_Symbol_Map:
 5158  5158                      ; line  1068 :             SEG16_DEF &= 0xFDU;
 5159  5159                      $DGL    0,194
 5160  5160 00994  8F1004                mov     a,!SEG16                                        ;[INF] 3, 1
 5161  5161 00997  5CFD                  and     a,#0FDH ; 253                                   ;[INF] 2, 1
 5162  5162 00999  9F1004                mov     !SEG16,a                                        ;[INF] 3, 1
 5163  5163 0099C                ??eb1C_Symbol_Map:
 5164  5164                      ; line  1069 :         }
 5165  5165                      ; line  1070 :         break;
 5166  5166                      $DGL    0,196
 5167  5167 0099C  EF2B                  br      $?L0124                                         ;[INF] 2, 3
 5168  5168                      ; line  1071 :         
 5169  5169                      ; line  1072 :         /* Renesas Logo On/Off */
 5170  5170                      ; line  1073 :         case LCD_R_LOGO_ON:
 5171  5171 0099E                ?L0155:
 5172  5172                      ; line  1074 :         {
 5173  5173 0099E                ??bb1D_Symbol_Map:
 5174  5174                      ; line  1075 :             SEG12_DEF |= 0x08U;
 5175  5175                      $DGL    0,201
 5176  5176 0099E  8F0C04                mov     a,!SEG12                                        ;[INF] 3, 1
 5177  5177 009A1  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 5178  5178 009A3  9F0C04                mov     !SEG12,a                                        ;[INF] 3, 1
 5179  5179 009A6                ??eb1D_Symbol_Map:
 5180  5180                      ; line  1076 :         }    
 5181  5181                      ; line  1077 :         break;
 5182  5182                      $DGL    0,203
 5183  5183 009A6  EF21                  br      $?L0124                                         ;[INF] 2, 3
 5184  5184                      ; line  1078 :         
 5185  5185                      ; line  1079 :         case LCD_R_LOGO_OFF:
 5186  5186 009A8                ?L0156:
 5187  5187                      ; line  1080 :         {
 5188  5188 009A8                ??bb1E_Symbol_Map:
 5189  5189                      ; line  1081 :             SEG12_DEF &= 0xF7U;
 5190  5190                      $DGL    0,207
 5191  5191 009A8  8F0C04                mov     a,!SEG12                                        ;[INF] 3, 1
 5192  5192 009AB  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 5193  5193 009AD  9F0C04                mov     !SEG12,a                                        ;[INF] 3, 1
 5194  5194 009B0                ??eb1E_Symbol_Map:
 5195  5195                      ; line  1082 :         }
 5196  5196                      ; line  1083 :         break;
 5197  5197                      $DGL    0,209
 5198  5198 009B0  EF17                  br      $?L0124                                         ;[INF] 2, 3
 5199  5199                      ; line  1084 :         
 5200  5200                      ; line  1085 :         /* Renesas Logo On/Off */
 5201  5201                      ; line  1086 :         case LCD_R_LOGO_ON_1:
 5202  5202 009B2                ?L0157:
 5203  5203                      ; line  1087 :         {
 5204  5204 009B2                ??bb1F_Symbol_Map:
 5205  5205                      ; line  1088 :             SEG12_DEF |= 0x08U;
 5206  5206                      $DGL    0,214
 5207  5207 009B2  8F0C04                mov     a,!SEG12                                        ;[INF] 3, 1
 5208  5208 009B5  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 5209  5209 009B7  9F0C04                mov     !SEG12,a                                        ;[INF] 3, 1
 5210  5210 009BA                ??eb1F_Symbol_Map:
 5211  5211                      ; line  1089 :         }    
 5212  5212                      ; line  1090 :         break;
 5213  5213                      $DGL    0,216
 5214  5214 009BA  EF0D                  br      $?L0124                                         ;[INF] 2, 3
 5215  5215                      ; line  1091 :         
 5216  5216                      ; line  1092 :         case LCD_R_LOGO_OFF_1:
 5217  5217 009BC                ?L0158:
 5218  5218                      ; line  1093 :         {
 5219  5219 009BC                ??bb20_Symbol_Map:
 5220  5220                      ; line  1094 :             SEG12_DEF &= 0xF7U;
 5221  5221                      $DGL    0,220
 5222  5222 009BC  8F0C04                mov     a,!SEG12                                        ;[INF] 3, 1
 5223  5223 009BF  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 5224  5224 009C1  9F0C04                mov     !SEG12,a                                        ;[INF] 3, 1
 5225  5225 009C4                ??eb20_Symbol_Map:
 5226  5226                      ; line  1095 :         }    
 5227  5227                      ; line  1096 :         break;
 5228  5228                      $DGL    0,222
 5229  5229 009C4  EF03                  br      $?L0124                                         ;[INF] 2, 3
 5230  5230                      ; line  1097 :         
 5231  5231                      ; line  1098 :         default:
 5232  5232 009C6                ?L0159:
 5233  5233                      ; line  1099 :         {
 5234  5234 009C6                ??bb21_Symbol_Map:
 5235  5235                      ; line  1100 :             /* Bad Selection */
 5236  5236                      ; line  1101 :             status = 1;
 5237  5237                      $DGL    0,227
 5238  5238 009C6  CC0101                mov     [hl+1],#01H     ; status,1                      ;[INF] 3, 1
 5239  5239 009C9                ??eb21_Symbol_Map:
 5240  5240                      ; line  1102 :         }    
 5241  5241                      ; line  1103 :         break;
 5242  5242 009C9                ??eb00_Symbol_Map:
 5243  5243                      ; line  1104 :     }
 5244  5244 009C9                ?L0124:
 5245  5245                      ; line  1105 :     return status;
 5246  5246                      $DGL    0,231
 5247  5247 009C9  8C01                  mov     a,[hl+1]        ; status                        ;[INF] 2, 1
 5248  5248 009CB  318F                  sarw    ax,8                                            ;[INF] 2, 1
 5249  5249 009CD  12                    movw    bc,ax                                           ;[INF] 1, 1
 5250  5250                      ; line  1106 : }
 5251  5251 009CE                ?L0123:
 5252  5252                      $DGL    0,232
 5253  5253 009CE                ??ef_Symbol_Map:
 5254  5254 009CE  1004                  addw    sp,#04H                                         ;[INF] 2, 1
 5255  5255 009D0  C6                    pop     hl                                              ;[INF] 1, 1
 5256  5256 009D1  D7                    ret                                                     ;[INF] 1, 6
 5257  5257 009D2                ??ee_Symbol_Map:
 5258  5258                      ; line  1107 : /***************************************************************
 5259  5259                      ;              ********************************************************
 5260  5260                      ; line  1108 : End of function Symbol_Map
 5261  5261                      ; line  1109 : ****************************************************************
 5262  5262                      ;              *******************************************************/
 5263  5263                      ; line  1110 : 
 5264  5264                      ; line  1111 : 
 5265  5265                      ; line  1112 : /***************************************************************
 5266  5266                      ;              ********************************************************
 5267  5267                      ; line  1113 : * Function Name : Clear_Display
 5268  5268                      ; line  1114 : * Description   : Clears all the segment data registers, thereby
 5269  5269                      ;               clearing the screen by the next LCD frame duration.
 5270  5270                      ; line  1115 : * Arguments     : none
 5271  5271                      ; line  1116 : * Return Value  : none
 5272  5272                      ; line  1117 : ****************************************************************
 5273  5273                      ;              *******************************************************/
 5274  5274                      ; line  1118 : void Clear_Display (void)
 5275  5275                      ; line  1119 : {
 5276  5276 009D2                _Clear_Display:
 5277  5277                      $DGL    1,582
 5278  5278 009D2  C7                    push    hl                                              ;[INF] 1, 1
 5279  5279 009D3  2004                  subw    sp,#04H                                         ;[INF] 2, 1
 5280  5280 009D5  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 5281  5281 009D8                ??bf_Clear_Display:
 5282  5282                      ; line  1120 :     /* Declare a loop count variable */
 5283  5283                      ; line  1121 :     unsigned char      i;
 5284  5284                      ; line  1122 :      
 5285  5285                      ; line  1123 :      /* Initialise pointer to start of registers */
 5286  5286                      ; line  1124 :     volatile uint8_t * RegPtr = &SEG0_DEF;
 5287  5287                      $DGL    0,6
 5288  5288 009D8  300004                movw    ax,#0400H       ; 1024                          ;[INF] 3, 1
 5289  5289 009DB  BB                    movw    [hl],ax ; RegPtr                                ;[INF] 1, 1
 5290  5290                      ; line  1125 : 
 5291  5291                      ; line  1126 :     /* Execute the instructions in the loop 40 times */
 5292  5292                      ; line  1127 :     for (i = 0; i < 40; i++)
 5293  5293                      $DGL    0,9
 5294  5294 009DC  CC0300                mov     [hl+3],#00H     ; i,0                           ;[INF] 3, 1
 5295  5295 009DF                ?L0164:
 5296  5296 009DF  8C03                  mov     a,[hl+3]        ; i                             ;[INF] 2, 1
 5297  5297 009E1  4C28                  cmp     a,#028H ; 40                                    ;[INF] 2, 1
 5298  5298 009E3  DE0D                  bnc     $?L0165                                         ;[INF] 2, 4
 5299  5299                      ; line  1128 :     {
 5300  5300 009E5                ??bb00_Clear_Display:
 5301  5301                      ; line  1129 :         /* Write 0 to the register being pointed to.*/
 5302  5302                      ; line  1130 :         *RegPtr = 0;
 5303  5303                      $DGL    0,12
 5304  5304 009E5  AB                    movw    ax,[hl] ; RegPtr                                ;[INF] 1, 1
 5305  5305 009E6  14                    movw    de,ax                                           ;[INF] 1, 1
 5306  5306 009E7  CA0000                mov     [de+0],#00H     ; 0                             ;[INF] 3, 1
 5307  5307                      ; line  1131 :         
 5308  5308                      ; line  1132 :         /* Increment the pointer */
 5309  5309                      ; line  1133 :         RegPtr++;
 5310  5310                      $DGL    0,15
 5311  5311 009EA  617900                incw    [hl+0]  ; RegPtr                                ;[INF] 3, 2
 5312  5312 009ED                ??eb00_Clear_Display:
 5313  5313                      ; line  1134 :     }
 5314  5314                      $DGL    0,16
 5315  5315 009ED                ?L0166:
 5316  5316 009ED  615903                inc     [hl+3]  ; i                                     ;[INF] 3, 2
 5317  5317 009F0  EFED                  br      $?L0164                                         ;[INF] 2, 3
 5318  5318 009F2                ?L0165:
 5319  5319                      ; line  1135 : }
 5320  5320                      $DGL    0,17
 5321  5321 009F2                ??ef_Clear_Display:
 5322  5322 009F2  1004                  addw    sp,#04H                                         ;[INF] 2, 1
 5323  5323 009F4  C6                    pop     hl                                              ;[INF] 1, 1
 5324  5324 009F5  D7                    ret                                                     ;[INF] 1, 6
 5325  5325 009F6                ??ee_Clear_Display:
 5326  5326                      ; line  1136 : /***************************************************************
 5327  5327                      ;              ********************************************************
 5328  5328                      ; line  1137 : End of function Clear_Display
 5329  5329                      ; line  1138 : ****************************************************************
 5330  5330                      ;              *******************************************************/
 5331  5331                      ; line  1139 : 
 5332  5332                      ; line  1140 : /***************************************************************
 5333  5333                      ;              ********************************************************
 5334  5334                      ; line  1141 : * Function Name : Init_Maps
 5335  5335                      ; line  1142 : * Description   : Initialises the glyph-segment maps used to dis
 5336  5336                      ;              play letters, symbols and numbers.
 5337  5337                      ; line  1143 : * Arguments     : none
 5338  5338                      ; line  1144 : * Return Value  : none
 5339  5339                      ; line  1145 : ****************************************************************
 5340  5340                      ;              *******************************************************/
 5341  5341                      ; line  1146 : void Init_Maps (void)
 5342  5342                      ; line  1147 :  {
 5343  5343 009F6                _Init_Maps:
 5344  5344                      $DGL    1,595
 5345  5345 009F6                ??bf_Init_Maps:
 5346  5346                      ; line  1148 :      /* Section A maps START */
 5347  5347                      ; line  1149 :      SECTA_map[0x0].WORD = 0x00F5u; /* 0 */
 5348  5348                      $DGL    0,3
 5349  5349 009F6  30F500                movw    ax,#0F5H        ; 245                           ;[INF] 3, 1
 5350  5350 009F9 RBF0000                movw    !_SECTA_map,ax                                  ;[INF] 3, 1
 5351  5351 009FC  F6                    clrw    ax                                              ;[INF] 1, 1
 5352  5352 009FD RBF0200                movw    !_SECTA_map+2,ax                                ;[INF] 3, 1
 5353  5353                      ; line  1150 :      SECTA_map[0x1].WORD = 0x0060u; /* 1 */
 5354  5354                      $DGL    0,4
 5355  5355 00A00  5060                  mov     x,#060H ; 96                                    ;[INF] 2, 1
 5356  5356 00A02 RBF0400                movw    !_SECTA_map+4,ax                                ;[INF] 3, 1
 5357  5357 00A05  F6                    clrw    ax                                              ;[INF] 1, 1
 5358  5358 00A06 RBF0600                movw    !_SECTA_map+6,ax                                ;[INF] 3, 1
 5359  5359                      ; line  1151 :      SECTA_map[0x2].WORD = 0x00B6u; /* 2 */
 5360  5360                      $DGL    0,5
 5361  5361 00A09  50B6                  mov     x,#0B6H ; 182                                   ;[INF] 2, 1
 5362  5362 00A0B RBF0800                movw    !_SECTA_map+8,ax                                ;[INF] 3, 1
 5363  5363 00A0E  F6                    clrw    ax                                              ;[INF] 1, 1
 5364  5364 00A0F RBF0A00                movw    !_SECTA_map+10,ax                               ;[INF] 3, 1
 5365  5365                      ; line  1152 :      SECTA_map[0x3].WORD = 0x00F2u; /* 3 */ 
 5366  5366                      $DGL    0,6
 5367  5367 00A12  50F2                  mov     x,#0F2H ; 242                                   ;[INF] 2, 1
 5368  5368 00A14 RBF0C00                movw    !_SECTA_map+12,ax                               ;[INF] 3, 1
 5369  5369 00A17  F6                    clrw    ax                                              ;[INF] 1, 1
 5370  5370 00A18 RBF0E00                movw    !_SECTA_map+14,ax                               ;[INF] 3, 1
 5371  5371                      ; line  1153 :      SECTA_map[0x4].WORD = 0x0063u; /* 4 */
 5372  5372                      $DGL    0,7
 5373  5373 00A1B  5063                  mov     x,#063H ; 99                                    ;[INF] 2, 1
 5374  5374 00A1D RBF1000                movw    !_SECTA_map+16,ax                               ;[INF] 3, 1
 5375  5375 00A20  F6                    clrw    ax                                              ;[INF] 1, 1
 5376  5376 00A21 RBF1200                movw    !_SECTA_map+18,ax                               ;[INF] 3, 1
 5377  5377                      ; line  1154 :      SECTA_map[0x5].WORD = 0x00D3u; /* 5 */
 5378  5378                      $DGL    0,8
 5379  5379 00A24  50D3                  mov     x,#0D3H ; 211                                   ;[INF] 2, 1
 5380  5380 00A26 RBF1400                movw    !_SECTA_map+20,ax                               ;[INF] 3, 1
 5381  5381 00A29  F6                    clrw    ax                                              ;[INF] 1, 1
 5382  5382 00A2A RBF1600                movw    !_SECTA_map+22,ax                               ;[INF] 3, 1
 5383  5383                      ; line  1155 :      SECTA_map[0x6].WORD = 0x00D7u; /* 6 */
 5384  5384                      $DGL    0,9
 5385  5385 00A2D  50D7                  mov     x,#0D7H ; 215                                   ;[INF] 2, 1
 5386  5386 00A2F RBF1800                movw    !_SECTA_map+24,ax                               ;[INF] 3, 1
 5387  5387 00A32  F6                    clrw    ax                                              ;[INF] 1, 1
 5388  5388 00A33 RBF1A00                movw    !_SECTA_map+26,ax                               ;[INF] 3, 1
 5389  5389                      ; line  1156 :      SECTA_map[0x7].WORD = 0x0070u; /* 7 */
 5390  5390                      $DGL    0,10
 5391  5391 00A36  5070                  mov     x,#070H ; 112                                   ;[INF] 2, 1
 5392  5392 00A38 RBF1C00                movw    !_SECTA_map+28,ax                               ;[INF] 3, 1
 5393  5393 00A3B  F6                    clrw    ax                                              ;[INF] 1, 1
 5394  5394 00A3C RBF1E00                movw    !_SECTA_map+30,ax                               ;[INF] 3, 1
 5395  5395                      ; line  1157 :      SECTA_map[0x8].WORD = 0x00F7u; /* 8 */
 5396  5396                      $DGL    0,11
 5397  5397 00A3F  50F7                  mov     x,#0F7H ; 247                                   ;[INF] 2, 1
 5398  5398 00A41 RBF2000                movw    !_SECTA_map+32,ax                               ;[INF] 3, 1
 5399  5399 00A44  F6                    clrw    ax                                              ;[INF] 1, 1
 5400  5400 00A45 RBF2200                movw    !_SECTA_map+34,ax                               ;[INF] 3, 1
 5401  5401                      ; line  1158 :      SECTA_map[0x9].WORD = 0x00F3u; /* 9 */
 5402  5402                      $DGL    0,12
 5403  5403 00A48  50F3                  mov     x,#0F3H ; 243                                   ;[INF] 2, 1
 5404  5404 00A4A RBF2400                movw    !_SECTA_map+36,ax                               ;[INF] 3, 1
 5405  5405 00A4D  F6                    clrw    ax                                              ;[INF] 1, 1
 5406  5406 00A4E RBF2600                movw    !_SECTA_map+38,ax                               ;[INF] 3, 1
 5407  5407                      ; line  1159 :      SECTB_map[0xA].WORD = 0x0000u; /* dummy */
 5408  5408                      $DGL    0,13
 5409  5409 00A51 RBF7800                movw    !_SECTB_map+40,ax                               ;[INF] 3, 1
 5410  5410 00A54 RBF7A00                movw    !_SECTB_map+42,ax                               ;[INF] 3, 1
 5411  5411                      ; line  1160 :      SECTB_map[0xB].WORD = 0x0000u; /* dummy */
 5412  5412                      $DGL    0,14
 5413  5413 00A57 RBF7C00                movw    !_SECTB_map+44,ax                               ;[INF] 3, 1
 5414  5414 00A5A RBF7E00                movw    !_SECTB_map+46,ax                               ;[INF] 3, 1
 5415  5415                      ; line  1161 :      SECTB_map[0xC].WORD = 0x0000u; /* dummy */
 5416  5416                      $DGL    0,15
 5417  5417 00A5D RBF8000                movw    !_SECTB_map+48,ax                               ;[INF] 3, 1
 5418  5418 00A60 RBF8200                movw    !_SECTB_map+50,ax                               ;[INF] 3, 1
 5419  5419                      ; line  1162 :      SECTB_map[0xD].WORD = 0x0000u; /* dummy */
 5420  5420                      $DGL    0,16
 5421  5421 00A63 RBF8400                movw    !_SECTB_map+52,ax                               ;[INF] 3, 1
 5422  5422 00A66 RBF8600                movw    !_SECTB_map+54,ax                               ;[INF] 3, 1
 5423  5423                      ; line  1163 :      SECTA_map[0xE].WORD = 0x0077u; /* A */
 5424  5424                      $DGL    0,17
 5425  5425 00A69  5077                  mov     x,#077H ; 119                                   ;[INF] 2, 1
 5426  5426 00A6B RBF3800                movw    !_SECTA_map+56,ax                               ;[INF] 3, 1
 5427  5427 00A6E  F6                    clrw    ax                                              ;[INF] 1, 1
 5428  5428 00A6F RBF3A00                movw    !_SECTA_map+58,ax                               ;[INF] 3, 1
 5429  5429                      ; line  1164 :      SECTA_map[0xF].WORD = 0x00C7u; /* B */
 5430  5430                      $DGL    0,18
 5431  5431 00A72  50C7                  mov     x,#0C7H ; 199                                   ;[INF] 2, 1
 5432  5432 00A74 RBF3C00                movw    !_SECTA_map+60,ax                               ;[INF] 3, 1
 5433  5433 00A77  F6                    clrw    ax                                              ;[INF] 1, 1
 5434  5434 00A78 RBF3E00                movw    !_SECTA_map+62,ax                               ;[INF] 3, 1
 5435  5435                      ; line  1165 :      SECTA_map[0x10].WORD = 0x0095u; /* C */
 5436  5436                      $DGL    0,19
 5437  5437 00A7B  5095                  mov     x,#095H ; 149                                   ;[INF] 2, 1
 5438  5438 00A7D RBF4000                movw    !_SECTA_map+64,ax                               ;[INF] 3, 1
 5439  5439 00A80  F6                    clrw    ax                                              ;[INF] 1, 1
 5440  5440 00A81 RBF4200                movw    !_SECTA_map+66,ax                               ;[INF] 3, 1
 5441  5441                      ; line  1166 :      SECTA_map[0x11].WORD = 0x00E6u; /* D */
 5442  5442                      $DGL    0,20
 5443  5443 00A84  50E6                  mov     x,#0E6H ; 230                                   ;[INF] 2, 1
 5444  5444 00A86 RBF4400                movw    !_SECTA_map+68,ax                               ;[INF] 3, 1
 5445  5445 00A89  F6                    clrw    ax                                              ;[INF] 1, 1
 5446  5446 00A8A RBF4600                movw    !_SECTA_map+70,ax                               ;[INF] 3, 1
 5447  5447                      ; line  1167 :      SECTA_map[0x12].WORD = 0x0097u; /* E */
 5448  5448                      $DGL    0,21
 5449  5449 00A8D  5097                  mov     x,#097H ; 151                                   ;[INF] 2, 1
 5450  5450 00A8F RBF4800                movw    !_SECTA_map+72,ax                               ;[INF] 3, 1
 5451  5451 00A92  F6                    clrw    ax                                              ;[INF] 1, 1
 5452  5452 00A93 RBF4A00                movw    !_SECTA_map+74,ax                               ;[INF] 3, 1
 5453  5453                      ; line  1168 :      SECTA_map[0x13].WORD = 0x0017u; /* F */
 5454  5454                      $DGL    0,22
 5455  5455 00A96  5017                  mov     x,#017H ; 23                                    ;[INF] 2, 1
 5456  5456 00A98 RBF4C00                movw    !_SECTA_map+76,ax                               ;[INF] 3, 1
 5457  5457 00A9B  F6                    clrw    ax                                              ;[INF] 1, 1
 5458  5458 00A9C RBF4E00                movw    !_SECTA_map+78,ax                               ;[INF] 3, 1
 5459  5459                      ; line  1169 :      /* Section A maps END */
 5460  5460                      ; line  1170 : 
 5461  5461                      ; line  1171 :      /* Section B maps START */
 5462  5462                      ; line  1172 :      SECTB_map[0x0].WORD = 0x00FAu; /* 0 */
 5463  5463                      $DGL    0,26
 5464  5464 00A9F  50FA                  mov     x,#0FAH ; 250                                   ;[INF] 2, 1
 5465  5465 00AA1 RBF5000                movw    !_SECTB_map,ax                                  ;[INF] 3, 1
 5466  5466 00AA4  F6                    clrw    ax                                              ;[INF] 1, 1
 5467  5467 00AA5 RBF5200                movw    !_SECTB_map+2,ax                                ;[INF] 3, 1
 5468  5468                      ; line  1173 :      SECTB_map[0x1].WORD = 0x0060u; /* 1 */
 5469  5469                      $DGL    0,27
 5470  5470 00AA8  5060                  mov     x,#060H ; 96                                    ;[INF] 2, 1
 5471  5471 00AAA RBF5400                movw    !_SECTB_map+4,ax                                ;[INF] 3, 1
 5472  5472 00AAD  F6                    clrw    ax                                              ;[INF] 1, 1
 5473  5473 00AAE RBF5600                movw    !_SECTB_map+6,ax                                ;[INF] 3, 1
 5474  5474                      ; line  1174 :      SECTB_map[0x2].WORD = 0x00D6u; /* 2 */
 5475  5475                      $DGL    0,28
 5476  5476 00AB1  50D6                  mov     x,#0D6H ; 214                                   ;[INF] 2, 1
 5477  5477 00AB3 RBF5800                movw    !_SECTB_map+8,ax                                ;[INF] 3, 1
 5478  5478 00AB6  F6                    clrw    ax                                              ;[INF] 1, 1
 5479  5479 00AB7 RBF5A00                movw    !_SECTB_map+10,ax                               ;[INF] 3, 1
 5480  5480                      ; line  1175 :      SECTB_map[0x3].WORD = 0x00F4u; /* 3 */
 5481  5481                      $DGL    0,29
 5482  5482 00ABA  50F4                  mov     x,#0F4H ; 244                                   ;[INF] 2, 1
 5483  5483 00ABC RBF5C00                movw    !_SECTB_map+12,ax                               ;[INF] 3, 1
 5484  5484 00ABF  F6                    clrw    ax                                              ;[INF] 1, 1
 5485  5485 00AC0 RBF5E00                movw    !_SECTB_map+14,ax                               ;[INF] 3, 1
 5486  5486                      ; line  1176 :      SECTB_map[0x4].WORD = 0x006Cu; /* 4 */
 5487  5487                      $DGL    0,30
 5488  5488 00AC3  506C                  mov     x,#06CH ; 108                                   ;[INF] 2, 1
 5489  5489 00AC5 RBF6000                movw    !_SECTB_map+16,ax                               ;[INF] 3, 1
 5490  5490 00AC8  F6                    clrw    ax                                              ;[INF] 1, 1
 5491  5491 00AC9 RBF6200                movw    !_SECTB_map+18,ax                               ;[INF] 3, 1
 5492  5492                      ; line  1177 :      SECTB_map[0x5].WORD = 0x00BCu; /* 5 */
 5493  5493                      $DGL    0,31
 5494  5494 00ACC  50BC                  mov     x,#0BCH ; 188                                   ;[INF] 2, 1
 5495  5495 00ACE RBF6400                movw    !_SECTB_map+20,ax                               ;[INF] 3, 1
 5496  5496 00AD1  F6                    clrw    ax                                              ;[INF] 1, 1
 5497  5497 00AD2 RBF6600                movw    !_SECTB_map+22,ax                               ;[INF] 3, 1
 5498  5498                      ; line  1178 :      SECTB_map[0x6].WORD = 0x00BEu; /* 6 */
 5499  5499                      $DGL    0,32
 5500  5500 00AD5  50BE                  mov     x,#0BEH ; 190                                   ;[INF] 2, 1
 5501  5501 00AD7 RBF6800                movw    !_SECTB_map+24,ax                               ;[INF] 3, 1
 5502  5502 00ADA  F6                    clrw    ax                                              ;[INF] 1, 1
 5503  5503 00ADB RBF6A00                movw    !_SECTB_map+26,ax                               ;[INF] 3, 1
 5504  5504                      ; line  1179 :      SECTB_map[0x7].WORD = 0x00E0u; /* 7 */
 5505  5505                      $DGL    0,33
 5506  5506 00ADE  50E0                  mov     x,#0E0H ; 224                                   ;[INF] 2, 1
 5507  5507 00AE0 RBF6C00                movw    !_SECTB_map+28,ax                               ;[INF] 3, 1
 5508  5508 00AE3  F6                    clrw    ax                                              ;[INF] 1, 1
 5509  5509 00AE4 RBF6E00                movw    !_SECTB_map+30,ax                               ;[INF] 3, 1
 5510  5510                      ; line  1180 :      SECTB_map[0x8].WORD = 0x00FEu; /* 8 */
 5511  5511                      $DGL    0,34
 5512  5512 00AE7  50FE                  mov     x,#0FEH ; 254                                   ;[INF] 2, 1
 5513  5513 00AE9 RBF7000                movw    !_SECTB_map+32,ax                               ;[INF] 3, 1
 5514  5514 00AEC  F6                    clrw    ax                                              ;[INF] 1, 1
 5515  5515 00AED RBF7200                movw    !_SECTB_map+34,ax                               ;[INF] 3, 1
 5516  5516                      ; line  1181 :      SECTB_map[0x9].WORD = 0x00FCu; /* 9 */
 5517  5517                      $DGL    0,35
 5518  5518 00AF0  50FC                  mov     x,#0FCH ; 252                                   ;[INF] 2, 1
 5519  5519 00AF2 RBF7400                movw    !_SECTB_map+36,ax                               ;[INF] 3, 1
 5520  5520 00AF5  F6                    clrw    ax                                              ;[INF] 1, 1
 5521  5521 00AF6 RBF7600                movw    !_SECTB_map+38,ax                               ;[INF] 3, 1
 5522  5522                      ; line  1182 :      SECTB_map[0xA].WORD = 0x0000u; /* dummy */
 5523  5523                      $DGL    0,36
 5524  5524 00AF9 RBF7800                movw    !_SECTB_map+40,ax                               ;[INF] 3, 1
 5525  5525 00AFC RBF7A00                movw    !_SECTB_map+42,ax                               ;[INF] 3, 1
 5526  5526                      ; line  1183 :      SECTB_map[0xB].WORD = 0x0000u; /* dummy */
 5527  5527                      $DGL    0,37
 5528  5528 00AFF RBF7C00                movw    !_SECTB_map+44,ax                               ;[INF] 3, 1
 5529  5529 00B02 RBF7E00                movw    !_SECTB_map+46,ax                               ;[INF] 3, 1
 5530  5530                      ; line  1184 :      SECTB_map[0xC].WORD = 0x0000u; /* dummy */
 5531  5531                      $DGL    0,38
 5532  5532 00B05 RBF8000                movw    !_SECTB_map+48,ax                               ;[INF] 3, 1
 5533  5533 00B08 RBF8200                movw    !_SECTB_map+50,ax                               ;[INF] 3, 1
 5534  5534                      ; line  1185 :      SECTB_map[0xD].WORD = 0x0000u; /* dummy */
 5535  5535                      $DGL    0,39
 5536  5536 00B0B RBF8400                movw    !_SECTB_map+52,ax                               ;[INF] 3, 1
 5537  5537 00B0E RBF8600                movw    !_SECTB_map+54,ax                               ;[INF] 3, 1
 5538  5538                      ; line  1186 :      SECTB_map[0xE].WORD = 0x00EEu; /* A */
 5539  5539                      $DGL    0,40
 5540  5540 00B11  50EE                  mov     x,#0EEH ; 238                                   ;[INF] 2, 1
 5541  5541 00B13 RBF8800                movw    !_SECTB_map+56,ax                               ;[INF] 3, 1
 5542  5542 00B16  F6                    clrw    ax                                              ;[INF] 1, 1
 5543  5543 00B17 RBF8A00                movw    !_SECTB_map+58,ax                               ;[INF] 3, 1
 5544  5544                      ; line  1187 :      SECTB_map[0xF].WORD = 0x003Eu; /* B */
 5545  5545                      $DGL    0,41
 5546  5546 00B1A  503E                  mov     x,#03EH ; 62                                    ;[INF] 2, 1
 5547  5547 00B1C RBF8C00                movw    !_SECTB_map+60,ax                               ;[INF] 3, 1
 5548  5548 00B1F  F6                    clrw    ax                                              ;[INF] 1, 1
 5549  5549 00B20 RBF8E00                movw    !_SECTB_map+62,ax                               ;[INF] 3, 1
 5550  5550                      ; line  1188 :      SECTB_map[0x10].WORD = 0x009Au; /* C */
 5551  5551                      $DGL    0,42
 5552  5552 00B23  509A                  mov     x,#09AH ; 154                                   ;[INF] 2, 1
 5553  5553 00B25 RBF9000                movw    !_SECTB_map+64,ax                               ;[INF] 3, 1
 5554  5554 00B28  F6                    clrw    ax                                              ;[INF] 1, 1
 5555  5555 00B29 RBF9200                movw    !_SECTB_map+66,ax                               ;[INF] 3, 1
 5556  5556                      ; line  1189 :      SECTB_map[0x11].WORD = 0x0076u; /* D */
 5557  5557                      $DGL    0,43
 5558  5558 00B2C  5076                  mov     x,#076H ; 118                                   ;[INF] 2, 1
 5559  5559 00B2E RBF9400                movw    !_SECTB_map+68,ax                               ;[INF] 3, 1
 5560  5560 00B31  F6                    clrw    ax                                              ;[INF] 1, 1
 5561  5561 00B32 RBF9600                movw    !_SECTB_map+70,ax                               ;[INF] 3, 1
 5562  5562                      ; line  1190 :      SECTB_map[0x12].WORD = 0x009Eu; /* E */
 5563  5563                      $DGL    0,44
 5564  5564 00B35  509E                  mov     x,#09EH ; 158                                   ;[INF] 2, 1
 5565  5565 00B37 RBF9800                movw    !_SECTB_map+72,ax                               ;[INF] 3, 1
 5566  5566 00B3A  F6                    clrw    ax                                              ;[INF] 1, 1
 5567  5567 00B3B RBF9A00                movw    !_SECTB_map+74,ax                               ;[INF] 3, 1
 5568  5568                      ; line  1191 :      SECTB_map[0x13].WORD = 0x008Eu; /* F */
 5569  5569                      $DGL    0,45
 5570  5570 00B3E  508E                  mov     x,#08EH ; 142                                   ;[INF] 2, 1
 5571  5571 00B40 RBF9C00                movw    !_SECTB_map+76,ax                               ;[INF] 3, 1
 5572  5572 00B43  F6                    clrw    ax                                              ;[INF] 1, 1
 5573  5573 00B44 RBF9E00                movw    !_SECTB_map+78,ax                               ;[INF] 3, 1
 5574  5574                      ; line  1192 :      /* Section B maps END */
 5575  5575                      ; line  1193 : 
 5576  5576                      ; line  1194 :      /* Section C maps START */
 5577  5577                      ; line  1195 :      /* Numbers */
 5578  5578                      ; line  1196 :      SECTC_map[0].WORD = 0xC3AAu; /* 0 */
 5579  5579                      $DGL    0,50
 5580  5580 00B47  30AAC3                movw    ax,#0C3AAH      ; -15446                        ;[INF] 3, 1
 5581  5581 00B4A RBFA000                movw    !_SECTC_map,ax                                  ;[INF] 3, 1
 5582  5582 00B4D  F6                    clrw    ax                                              ;[INF] 1, 1
 5583  5583 00B4E RBFA200                movw    !_SECTC_map+2,ax                                ;[INF] 3, 1
 5584  5584                      ; line  1197 :      SECTC_map[1].WORD = 0x00A0u; /* 1 */
 5585  5585                      $DGL    0,51
 5586  5586 00B51  50A0                  mov     x,#0A0H ; 160                                   ;[INF] 2, 1
 5587  5587 00B53 RBFA400                movw    !_SECTC_map+4,ax                                ;[INF] 3, 1
 5588  5588 00B56  F6                    clrw    ax                                              ;[INF] 1, 1
 5589  5589 00B57 RBFA600                movw    !_SECTC_map+6,ax                                ;[INF] 3, 1
 5590  5590                      ; line  1198 :      SECTC_map[2].WORD = 0x816Cu; /* 2 */
 5591  5591                      $DGL    0,52
 5592  5592 00B5A  306C81                movw    ax,#0816CH      ; -32404                        ;[INF] 3, 1
 5593  5593 00B5D RBFA800                movw    !_SECTC_map+8,ax                                ;[INF] 3, 1
 5594  5594 00B60  F6                    clrw    ax                                              ;[INF] 1, 1
 5595  5595 00B61 RBFAA00                movw    !_SECTC_map+10,ax                               ;[INF] 3, 1
 5596  5596                      ; line  1199 :      SECTC_map[3].WORD = 0x81E4u; /* 3 */
 5597  5597                      $DGL    0,53
 5598  5598 00B64  30E481                movw    ax,#081E4H      ; -32284                        ;[INF] 3, 1
 5599  5599 00B67 RBFAC00                movw    !_SECTC_map+12,ax                               ;[INF] 3, 1
 5600  5600 00B6A  F6                    clrw    ax                                              ;[INF] 1, 1
 5601  5601 00B6B RBFAE00                movw    !_SECTC_map+14,ax                               ;[INF] 3, 1
 5602  5602                      ; line  1200 :      SECTC_map[4].WORD = 0x00E6u; /* 4 */
 5603  5603                      $DGL    0,54
 5604  5604 00B6E  50E6                  mov     x,#0E6H ; 230                                   ;[INF] 2, 1
 5605  5605 00B70 RBFB000                movw    !_SECTC_map+16,ax                               ;[INF] 3, 1
 5606  5606 00B73  F6                    clrw    ax                                              ;[INF] 1, 1
 5607  5607 00B74 RBFB200                movw    !_SECTC_map+18,ax                               ;[INF] 3, 1
 5608  5608                      ; line  1201 :      SECTC_map[5].WORD = 0x81C6u; /* 5 */
 5609  5609                      $DGL    0,55
 5610  5610 00B77  30C681                movw    ax,#081C6H      ; -32314                        ;[INF] 3, 1
 5611  5611 00B7A RBFB400                movw    !_SECTC_map+20,ax                               ;[INF] 3, 1
 5612  5612 00B7D  F6                    clrw    ax                                              ;[INF] 1, 1
 5613  5613 00B7E RBFB600                movw    !_SECTC_map+22,ax                               ;[INF] 3, 1
 5614  5614                      ; line  1202 :      SECTC_map[6].WORD = 0x81CEu; /* 6 */
 5615  5615                      $DGL    0,56
 5616  5616 00B81  30CE81                movw    ax,#081CEH      ; -32306                        ;[INF] 3, 1
 5617  5617 00B84 RBFB800                movw    !_SECTC_map+24,ax                               ;[INF] 3, 1
 5618  5618 00B87  F6                    clrw    ax                                              ;[INF] 1, 1
 5619  5619 00B88 RBFBA00                movw    !_SECTC_map+26,ax                               ;[INF] 3, 1
 5620  5620                      ; line  1203 :      SECTC_map[7].WORD = 0x01A0u; /* 7 */
 5621  5621                      $DGL    0,57
 5622  5622 00B8B  30A001                movw    ax,#01A0H       ; 416                           ;[INF] 3, 1
 5623  5623 00B8E RBFBC00                movw    !_SECTC_map+28,ax                               ;[INF] 3, 1
 5624  5624 00B91  F6                    clrw    ax                                              ;[INF] 1, 1
 5625  5625 00B92 RBFBE00                movw    !_SECTC_map+30,ax                               ;[INF] 3, 1
 5626  5626                      ; line  1204 :      SECTC_map[8].WORD = 0x81EEu; /* 8 */
 5627  5627                      $DGL    0,58
 5628  5628 00B95  30EE81                movw    ax,#081EEH      ; -32274                        ;[INF] 3, 1
 5629  5629 00B98 RBFC000                movw    !_SECTC_map+32,ax                               ;[INF] 3, 1
 5630  5630 00B9B  F6                    clrw    ax                                              ;[INF] 1, 1
 5631  5631 00B9C RBFC200                movw    !_SECTC_map+34,ax                               ;[INF] 3, 1
 5632  5632                      ; line  1205 :      SECTC_map[9].WORD = 0x81E6u; /* 9 */
 5633  5633                      $DGL    0,59
 5634  5634 00B9F  30E681                movw    ax,#081E6H      ; -32282                        ;[INF] 3, 1
 5635  5635 00BA2 RBFC400                movw    !_SECTC_map+36,ax                               ;[INF] 3, 1
 5636  5636 00BA5  F6                    clrw    ax                                              ;[INF] 1, 1
 5637  5637 00BA6 RBFC600                movw    !_SECTC_map+38,ax                               ;[INF] 3, 1
 5638  5638                      ; line  1206 :      
 5639  5639                      ; line  1207 :      /* Symbols */
 5640  5640                      ; line  1208 :      SECTC_map[10].WORD = 0x2444u; /* + */
 5641  5641                      $DGL    0,62
 5642  5642 00BA9  304424                movw    ax,#02444H      ; 9284                          ;[INF] 3, 1
 5643  5643 00BAC RBFC800                movw    !_SECTC_map+40,ax                               ;[INF] 3, 1
 5644  5644 00BAF  F6                    clrw    ax                                              ;[INF] 1, 1
 5645  5645 00BB0 RBFCA00                movw    !_SECTC_map+42,ax                               ;[INF] 3, 1
 5646  5646                      ; line  1209 :      SECTC_map[11].WORD = 0x0044u; /* - */
 5647  5647                      $DGL    0,63
 5648  5648 00BB3  5044                  mov     x,#044H ; 68                                    ;[INF] 2, 1
 5649  5649 00BB5 RBFCC00                movw    !_SECTC_map+44,ax                               ;[INF] 3, 1
 5650  5650 00BB8  F6                    clrw    ax                                              ;[INF] 1, 1
 5651  5651 00BB9 RBFCE00                movw    !_SECTC_map+46,ax                               ;[INF] 3, 1
 5652  5652                      ; line  1210 :      SECTC_map[12].WORD = 0x4200u; /* / */
 5653  5653                      $DGL    0,64
 5654  5654 00BBC  5142                  mov     a,#042H ; 66                                    ;[INF] 2, 1
 5655  5655 00BBE RBFD000                movw    !_SECTC_map+48,ax                               ;[INF] 3, 1
 5656  5656 00BC1  F6                    clrw    ax                                              ;[INF] 1, 1
 5657  5657 00BC2 RBFD200                movw    !_SECTC_map+50,ax                               ;[INF] 3, 1
 5658  5658                      ; line  1211 :      SECTC_map[13].WORD = 0x1800u; /* \ */
 5659  5659                      $DGL    0,65
 5660  5660 00BC5  5118                  mov     a,#018H ; 24                                    ;[INF] 2, 1
 5661  5661 00BC7 RBFD400                movw    !_SECTC_map+52,ax                               ;[INF] 3, 1
 5662  5662 00BCA  F6                    clrw    ax                                              ;[INF] 1, 1
 5663  5663 00BCB RBFD600                movw    !_SECTC_map+54,ax                               ;[INF] 3, 1
 5664  5664                      ; line  1212 :      SECTC_map[40].WORD = 0x7e44u; /* * */
 5665  5665                      $DGL    0,66
 5666  5666 00BCE  30447E                movw    ax,#07E44H      ; 32324                         ;[INF] 3, 1
 5667  5667 00BD1 RBF4001                movw    !_SECTC_map+160,ax                              ;[INF] 3, 1
 5668  5668 00BD4  F6                    clrw    ax                                              ;[INF] 1, 1
 5669  5669 00BD5 RBF4201                movw    !_SECTC_map+162,ax                              ;[INF] 3, 1
 5670  5670                      ; line  1213 :      
 5671  5671                      ; line  1214 :      /* Letters */
 5672  5672                      ; line  1215 :      SECTC_map[14].WORD = 0x01EEu; /* A */
 5673  5673                      $DGL    0,69
 5674  5674 00BD8  30EE01                movw    ax,#01EEH       ; 494                           ;[INF] 3, 1
 5675  5675 00BDB RBFD800                movw    !_SECTC_map+56,ax                               ;[INF] 3, 1
 5676  5676 00BDE  F6                    clrw    ax                                              ;[INF] 1, 1
 5677  5677 00BDF RBFDA00                movw    !_SECTC_map+58,ax                               ;[INF] 3, 1
 5678  5678                      ; line  1216 :      SECTC_map[15].WORD = 0xA5E0u; /* B */
 5679  5679                      $DGL    0,70
 5680  5680 00BE2  30E0A5                movw    ax,#0A5E0H      ; -23072                        ;[INF] 3, 1
 5681  5681 00BE5 RBFDC00                movw    !_SECTC_map+60,ax                               ;[INF] 3, 1
 5682  5682 00BE8  F6                    clrw    ax                                              ;[INF] 1, 1
 5683  5683 00BE9 RBFDE00                movw    !_SECTC_map+62,ax                               ;[INF] 3, 1
 5684  5684                      ; line  1217 :      SECTC_map[16].WORD = 0x810Au; /* C */
 5685  5685                      $DGL    0,71
 5686  5686 00BEC  300A81                movw    ax,#0810AH      ; -32502                        ;[INF] 3, 1
 5687  5687 00BEF RBFE000                movw    !_SECTC_map+64,ax                               ;[INF] 3, 1
 5688  5688 00BF2  F6                    clrw    ax                                              ;[INF] 1, 1
 5689  5689 00BF3 RBFE200                movw    !_SECTC_map+66,ax                               ;[INF] 3, 1
 5690  5690                      ; line  1218 :      SECTC_map[17].WORD = 0xA5A0u; /* D */
 5691  5691                      $DGL    0,72
 5692  5692 00BF6  30A0A5                movw    ax,#0A5A0H      ; -23136                        ;[INF] 3, 1
 5693  5693 00BF9 RBFE400                movw    !_SECTC_map+68,ax                               ;[INF] 3, 1
 5694  5694 00BFC  F6                    clrw    ax                                              ;[INF] 1, 1
 5695  5695 00BFD RBFE600                movw    !_SECTC_map+70,ax                               ;[INF] 3, 1
 5696  5696                      ; line  1219 :      SECTC_map[18].WORD = 0x814Eu; /* E */
 5697  5697                      $DGL    0,73
 5698  5698 00C00  304E81                movw    ax,#0814EH      ; -32434                        ;[INF] 3, 1
 5699  5699 00C03 RBFE800                movw    !_SECTC_map+72,ax                               ;[INF] 3, 1
 5700  5700 00C06  F6                    clrw    ax                                              ;[INF] 1, 1
 5701  5701 00C07 RBFEA00                movw    !_SECTC_map+74,ax                               ;[INF] 3, 1
 5702  5702                      ; line  1220 :      SECTC_map[19].WORD = 0x014Eu; /* F */
 5703  5703                      $DGL    0,74
 5704  5704 00C0A  304E01                movw    ax,#014EH       ; 334                           ;[INF] 3, 1
 5705  5705 00C0D RBFEC00                movw    !_SECTC_map+76,ax                               ;[INF] 3, 1
 5706  5706 00C10  F6                    clrw    ax                                              ;[INF] 1, 1
 5707  5707 00C11 RBFEE00                movw    !_SECTC_map+78,ax                               ;[INF] 3, 1
 5708  5708                      ; line  1221 :      SECTC_map[20].WORD = 0x81CAu; /* G */
 5709  5709                      $DGL    0,75
 5710  5710 00C14  30CA81                movw    ax,#081CAH      ; -32310                        ;[INF] 3, 1
 5711  5711 00C17 RBFF000                movw    !_SECTC_map+80,ax                               ;[INF] 3, 1
 5712  5712 00C1A  F6                    clrw    ax                                              ;[INF] 1, 1
 5713  5713 00C1B RBFF200                movw    !_SECTC_map+82,ax                               ;[INF] 3, 1
 5714  5714                      ; line  1222 :      SECTC_map[21].WORD = 0x00EEu; /* H */
 5715  5715                      $DGL    0,76
 5716  5716 00C1E  50EE                  mov     x,#0EEH ; 238                                   ;[INF] 2, 1
 5717  5717 00C20 RBFF400                movw    !_SECTC_map+84,ax                               ;[INF] 3, 1
 5718  5718 00C23  F6                    clrw    ax                                              ;[INF] 1, 1
 5719  5719 00C24 RBFF600                movw    !_SECTC_map+86,ax                               ;[INF] 3, 1
 5720  5720                      ; line  1223 :      SECTC_map[22].WORD = 0xA500u; /* I */
 5721  5721                      $DGL    0,77
 5722  5722 00C27  51A5                  mov     a,#0A5H ; 165                                   ;[INF] 2, 1
 5723  5723 00C29 RBFF800                movw    !_SECTC_map+88,ax                               ;[INF] 3, 1
 5724  5724 00C2C  F6                    clrw    ax                                              ;[INF] 1, 1
 5725  5725 00C2D RBFFA00                movw    !_SECTC_map+90,ax                               ;[INF] 3, 1
 5726  5726                      ; line  1224 :      SECTC_map[23].WORD = 0x80A0u; /* J */
 5727  5727                      $DGL    0,78
 5728  5728 00C30  30A080                movw    ax,#080A0H      ; -32608                        ;[INF] 3, 1
 5729  5729 00C33 RBFFC00                movw    !_SECTC_map+92,ax                               ;[INF] 3, 1
 5730  5730 00C36  F6                    clrw    ax                                              ;[INF] 1, 1
 5731  5731 00C37 RBFFE00                movw    !_SECTC_map+94,ax                               ;[INF] 3, 1
 5732  5732                      ; line  1225 :      SECTC_map[24].WORD = 0x0A0Eu; /* K */
 5733  5733                      $DGL    0,79
 5734  5734 00C3A  300E0A                movw    ax,#0A0EH       ; 2574                          ;[INF] 3, 1
 5735  5735 00C3D RBF0001                movw    !_SECTC_map+96,ax                               ;[INF] 3, 1
 5736  5736 00C40  F6                    clrw    ax                                              ;[INF] 1, 1
 5737  5737 00C41 RBF0201                movw    !_SECTC_map+98,ax                               ;[INF] 3, 1
 5738  5738                      ; line  1226 :      SECTC_map[25].WORD = 0X800Au; /* L */
 5739  5739                      $DGL    0,80
 5740  5740 00C44  300A80                movw    ax,#0800AH      ; -32758                        ;[INF] 3, 1
 5741  5741 00C47 RBF0401                movw    !_SECTC_map+100,ax                              ;[INF] 3, 1
 5742  5742 00C4A  F6                    clrw    ax                                              ;[INF] 1, 1
 5743  5743 00C4B RBF0601                movw    !_SECTC_map+102,ax                              ;[INF] 3, 1
 5744  5744                      ; line  1227 :      SECTC_map[26].WORD = 0x12AAu; /* M */
 5745  5745                      $DGL    0,81
 5746  5746 00C4E  30AA12                movw    ax,#012AAH      ; 4778                          ;[INF] 3, 1
 5747  5747 00C51 RBF0801                movw    !_SECTC_map+104,ax                              ;[INF] 3, 1
 5748  5748 00C54  F6                    clrw    ax                                              ;[INF] 1, 1
 5749  5749 00C55 RBF0A01                movw    !_SECTC_map+106,ax                              ;[INF] 3, 1
 5750  5750                      ; line  1228 :      SECTC_map[27].WORD = 0x18AAu; /* N */
 5751  5751                      $DGL    0,82
 5752  5752 00C58  30AA18                movw    ax,#018AAH      ; 6314                          ;[INF] 3, 1
 5753  5753 00C5B RBF0C01                movw    !_SECTC_map+108,ax                              ;[INF] 3, 1
 5754  5754 00C5E  F6                    clrw    ax                                              ;[INF] 1, 1
 5755  5755 00C5F RBF0E01                movw    !_SECTC_map+110,ax                              ;[INF] 3, 1
 5756  5756                      ; line  1229 :      SECTC_map[28].WORD = 0x81AAu; /* O */
 5757  5757                      $DGL    0,83
 5758  5758 00C62  30AA81                movw    ax,#081AAH      ; -32342                        ;[INF] 3, 1
 5759  5759 00C65 RBF1001                movw    !_SECTC_map+112,ax                              ;[INF] 3, 1
 5760  5760 00C68  F6                    clrw    ax                                              ;[INF] 1, 1
 5761  5761 00C69 RBF1201                movw    !_SECTC_map+114,ax                              ;[INF] 3, 1
 5762  5762                      ; line  1230 :      SECTC_map[29].WORD = 0x016Eu; /* P */
 5763  5763                      $DGL    0,84
 5764  5764 00C6C  306E01                movw    ax,#016EH       ; 366                           ;[INF] 3, 1
 5765  5765 00C6F RBF1401                movw    !_SECTC_map+116,ax                              ;[INF] 3, 1
 5766  5766 00C72  F6                    clrw    ax                                              ;[INF] 1, 1
 5767  5767 00C73 RBF1601                movw    !_SECTC_map+118,ax                              ;[INF] 3, 1
 5768  5768                      ; line  1231 :      SECTC_map[30].WORD = 0x89AAu; /* Q */
 5769  5769                      $DGL    0,85
 5770  5770 00C76  30AA89                movw    ax,#089AAH      ; -30294                        ;[INF] 3, 1
 5771  5771 00C79 RBF1801                movw    !_SECTC_map+120,ax                              ;[INF] 3, 1
 5772  5772 00C7C  F6                    clrw    ax                                              ;[INF] 1, 1
 5773  5773 00C7D RBF1A01                movw    !_SECTC_map+122,ax                              ;[INF] 3, 1
 5774  5774                      ; line  1232 :      SECTC_map[31].WORD = 0x096Eu; /* R */
 5775  5775                      $DGL    0,86
 5776  5776 00C80  306E09                movw    ax,#096EH       ; 2414                          ;[INF] 3, 1
 5777  5777 00C83 RBF1C01                movw    !_SECTC_map+124,ax                              ;[INF] 3, 1
 5778  5778 00C86  F6                    clrw    ax                                              ;[INF] 1, 1
 5779  5779 00C87 RBF1E01                movw    !_SECTC_map+126,ax                              ;[INF] 3, 1
 5780  5780                      ; line  1233 :      SECTC_map[32].WORD = 0x81C6u; /* S */
 5781  5781                      $DGL    0,87
 5782  5782 00C8A  30C681                movw    ax,#081C6H      ; -32314                        ;[INF] 3, 1
 5783  5783 00C8D RBF2001                movw    !_SECTC_map+128,ax                              ;[INF] 3, 1
 5784  5784 00C90  F6                    clrw    ax                                              ;[INF] 1, 1
 5785  5785 00C91 RBF2201                movw    !_SECTC_map+130,ax                              ;[INF] 3, 1
 5786  5786                      ; line  1234 :      SECTC_map[33].WORD = 0x2500u; /* T */
 5787  5787                      $DGL    0,88
 5788  5788 00C94  5125                  mov     a,#025H ; 37                                    ;[INF] 2, 1
 5789  5789 00C96 RBF2401                movw    !_SECTC_map+132,ax                              ;[INF] 3, 1
 5790  5790 00C99  F6                    clrw    ax                                              ;[INF] 1, 1
 5791  5791 00C9A RBF2601                movw    !_SECTC_map+134,ax                              ;[INF] 3, 1
 5792  5792                      ; line  1235 :      SECTC_map[34].WORD = 0x80AAu; /* U */
 5793  5793                      $DGL    0,89
 5794  5794 00C9D  30AA80                movw    ax,#080AAH      ; -32598                        ;[INF] 3, 1
 5795  5795 00CA0 RBF2801                movw    !_SECTC_map+136,ax                              ;[INF] 3, 1
 5796  5796 00CA3  F6                    clrw    ax                                              ;[INF] 1, 1
 5797  5797 00CA4 RBF2A01                movw    !_SECTC_map+138,ax                              ;[INF] 3, 1
 5798  5798                      ; line  1236 :      SECTC_map[35].WORD = 0x420Au; /* V */
 5799  5799                      $DGL    0,90
 5800  5800 00CA7  300A42                movw    ax,#0420AH      ; 16906                         ;[INF] 3, 1
 5801  5801 00CAA RBF2C01                movw    !_SECTC_map+140,ax                              ;[INF] 3, 1
 5802  5802 00CAD  F6                    clrw    ax                                              ;[INF] 1, 1
 5803  5803 00CAE RBF2E01                movw    !_SECTC_map+142,ax                              ;[INF] 3, 1
 5804  5804                      ; line  1237 :      SECTC_map[36].WORD = 0x48AAu; /* W */
 5805  5805                      $DGL    0,91
 5806  5806 00CB1  30AA48                movw    ax,#048AAH      ; 18602                         ;[INF] 3, 1
 5807  5807 00CB4 RBF3001                movw    !_SECTC_map+144,ax                              ;[INF] 3, 1
 5808  5808 00CB7  F6                    clrw    ax                                              ;[INF] 1, 1
 5809  5809 00CB8 RBF3201                movw    !_SECTC_map+146,ax                              ;[INF] 3, 1
 5810  5810                      ; line  1238 :      SECTC_map[37].WORD = 0x5A00u; /* X */ 
 5811  5811                      $DGL    0,92
 5812  5812 00CBB  515A                  mov     a,#05AH ; 90                                    ;[INF] 2, 1
 5813  5813 00CBD RBF3401                movw    !_SECTC_map+148,ax                              ;[INF] 3, 1
 5814  5814 00CC0  F6                    clrw    ax                                              ;[INF] 1, 1
 5815  5815 00CC1 RBF3601                movw    !_SECTC_map+150,ax                              ;[INF] 3, 1
 5816  5816                      ; line  1239 :      SECTC_map[38].WORD = 0x1600u; /* Y */
 5817  5817                      $DGL    0,93
 5818  5818 00CC4  5116                  mov     a,#016H ; 22                                    ;[INF] 2, 1
 5819  5819 00CC6 RBF3801                movw    !_SECTC_map+152,ax                              ;[INF] 3, 1
 5820  5820 00CC9  F6                    clrw    ax                                              ;[INF] 1, 1
 5821  5821 00CCA RBF3A01                movw    !_SECTC_map+154,ax                              ;[INF] 3, 1
 5822  5822                      ; line  1240 :      SECTC_map[39].WORD = 0xC300u; /* Z */
 5823  5823                      $DGL    0,94
 5824  5824 00CCD  51C3                  mov     a,#0C3H ; 195                                   ;[INF] 2, 1
 5825  5825 00CCF RBF3C01                movw    !_SECTC_map+156,ax                              ;[INF] 3, 1
 5826  5826 00CD2  F6                    clrw    ax                                              ;[INF] 1, 1
 5827  5827 00CD3 RBF3E01                movw    !_SECTC_map+158,ax                              ;[INF] 3, 1
 5828  5828                      ; line  1241 : 
 5829  5829                      ; line  1242 :      /* Section C maps END */
 5830  5830                      ; line  1243 :  }
 5831  5831                      $DGL    0,97
 5832  5832 00CD6                ??ef_Init_Maps:
 5833  5833 00CD6  D7                    ret                                                     ;[INF] 1, 6
 5834  5834 00CD7                ??ee_Init_Maps:
 5835  5835                      ; line  1244 : /***************************************************************
 5836  5836                      ;              ********************************************************
 5837  5837                      ; line  1245 : End of function Init_Maps
 5838  5838                      ; line  1246 : ****************************************************************
 5839  5839                      ;              *******************************************************/
 5840  5840                      ; line  1247 : 
 5841  5841                      ; line  1248 : /***************************************************************
 5842  5842                      ;              ********************************************************
 5843  5843                      ; line  1249 : * Function Name : Display_Panel_String
 5844  5844                      ; line  1250 : * Description     This function writes to line 1, line 2 or 3 of
 5845  5845                      ;               the LCD. You need to use the defines LCD_LINE1, 
 5846  5846                      ; line  1251 :                   LCD_LINE2 and LCD_LINE3 in order to specify th
 5847  5847                      ;              e starting position. 
 5848  5848                      ; line  1252 : * Arguments     : (uint8_t) position - LCD row (symbol) number.
 5849  5849                      ; line  1253 : *                 (char*) string - pointer to data to be written
 5850  5850                      ;               to display (up to 8 chars).
 5851  5851                      ; line  1254 : * Return Value  : None
 5852  5852                      ; line  1255 : ****************************************************************
 5853  5853                      ;              *******************************************************/
 5854  5854                      ; line  1256 : void Display_Panel_String (const uint8_t position, const char * 
 5855  5855                      ;              const string)
 5856  5856                      ; line  1257 : {
 5857  5857 00CD7                _Display_Panel_String:
 5858  5858                      $DGL    1,601
 5859  5859 00CD7  C7                    push    hl                                              ;[INF] 1, 1
 5860  5860 00CD8  C1                    push    ax                                              ;[INF] 1, 1
 5861  5861 00CD9  2008                  subw    sp,#08H                                         ;[INF] 2, 1
 5862  5862 00CDB  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 5863  5863 00CDE                ??bf_Display_Panel_String:
 5864  5864                      ; line  1258 :     /* Declare variable to hold the output data */
 5865  5865                      ; line  1259 :     uint8_t     output_buf = 0;
 5866  5866                      $DGL    0,3
 5867  5867 00CDE  CC0700                mov     [hl+7],#00H     ; output_buf,0                  ;[INF] 3, 1
 5868  5868                      ; line  1260 :     
 5869  5869                      ; line  1261 :     /* Declare a variable flag to hold the input validation resu
 5870  5870                      ;              lt */
 5871  5871                      ; line  1262 :     int16_t     flag = 0;
 5872  5872                      $DGL    0,6
 5873  5873 00CE1  F6                    clrw    ax                                              ;[INF] 1, 1
 5874  5874 00CE2  BC04                  movw    [hl+4],ax       ; flag                          ;[INF] 2, 1
 5875  5875                      ; line  1263 :     
 5876  5876                      ; line  1264 :     /* Declare a loop count variable */
 5877  5877                      ; line  1265 :     uint16_t    i = 0;
 5878  5878                      $DGL    0,9
 5879  5879 00CE4  BC02                  movw    [hl+2],ax       ; i                             ;[INF] 2, 1
 5880  5880                      ; line  1266 :     
 5881  5881                      ; line  1267 :     /* Declare a symbol select variable */
 5882  5882                      ; line  1268 :     uint16_t    symbsel = 0;
 5883  5883                      $DGL    0,12
 5884  5884 00CE6  BB                    movw    [hl],ax ; symbsel                               ;[INF] 1, 1
 5885  5885                      ; line  1269 : 
 5886  5886                      ; line  1270 :     /* Display input onto LCD */
 5887  5887                      ; line  1271 :     switch (position)
 5888  5888                      $DGL    0,15
 5889  5889 00CE7  8C08                  mov     a,[hl+8]        ; position                      ;[INF] 2, 1
 5890  5890 00CE9  318E                  shrw    ax,8                                            ;[INF] 2, 1
 5891  5891 00CEB  243100                subw    ax,#031H        ; 49                            ;[INF] 3, 1
 5892  5892 00CEE  440400                cmpw    ax,#04H ; 4                                     ;[INF] 3, 1
 5893  5893 00CF1  61C8                  skc                                                     ;[INF] 2, 1
 5894  5894 00CF3  EE7F01                br      $!?L0176                                        ;[INF] 3, 3
 5895  5895 00CF6  12                    movw    bc,ax                                           ;[INF] 1, 1
 5896  5896 00CF7 R497A00                mov     a,?L0178+8[bc]                                  ;[INF] 3, 1
 5897  5897 00CFA  311C                  shlw    bc,1                                            ;[INF] 2, 1
 5898  5898 00CFC  9EFC                  mov     CS,a                                            ;[INF] 2, 1
 5899  5899 00CFE R797200                movw    ax,?L0178[bc]                                   ;[INF] 3, 1
 5900  5900 00D01  61CB                  br      ax                                              ;[INF] 2, 3
 5901  5901                      ; line  1272 :     {        
 5902  5902 00D03                ??bb00_Display_Panel_String:
 5903  5903                      ; line  1273 :         /* Start Section 1, Numerical */
 5904  5904                      ; line  1274 :         case PANEL_LCD_LINE2:
 5905  5905 00D03                ?L0172:
 5906  5906                      ; line  1275 :         {
 5907  5907 00D03                ??bb01_Display_Panel_String:
 5908  5908                      ; line  1276 :              /* Cycle Through Each Digit */
 5909  5909                      ; line  1277 :             for (i = 0; i < 6; i++)
 5910  5910                      $DGL    0,21
 5911  5911 00D03  F6                    clrw    ax                                              ;[INF] 1, 1
 5912  5912 00D04  BC02                  movw    [hl+2],ax       ; i                             ;[INF] 2, 1
 5913  5913 00D06                ?L0179:
 5914  5914 00D06  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 5915  5915 00D08  440600                cmpw    ax,#06H ; 6                                     ;[INF] 3, 1
 5916  5916 00D0B  DE4E                  bnc     $?L0180                                         ;[INF] 2, 4
 5917  5917                      ; line  1278 :             {
 5918  5918 00D0D                ??bb02_Display_Panel_String:
 5919  5919                      ; line  1279 :                 /* Validate Input */
 5920  5920                      ; line  1280 :                 flag = Validate_Input((const uint8_t) string[i],
 5921  5921                      ;               &output_buf);
 5922  5922                      $DGL    0,24
 5923  5923 00D0D  17                    movw    ax,hl                                           ;[INF] 1, 1
 5924  5924 00D0E  040700                addw    ax,#07H                                         ;[INF] 3, 1
 5925  5925 00D11  C1                    push    ax                                              ;[INF] 1, 1
 5926  5926 00D12  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 5927  5927 00D14  610910                addw    ax,[hl+16]      ; string                        ;[INF] 3, 1
 5928  5928 00D17  14                    movw    de,ax                                           ;[INF] 1, 1
 5929  5929 00D18  89                    mov     a,[de]                                          ;[INF] 1, 1
 5930  5930 00D19  318E                  shrw    ax,8                                            ;[INF] 2, 1
 5931  5931 00D1B RFC210000              call    !!_Validate_Input                               ;[INF] 4, 3
 5932  5932 00D1F  C0                    pop     ax                                              ;[INF] 1, 1
 5933  5933 00D20  13                    movw    ax,bc                                           ;[INF] 1, 1
 5934  5934 00D21  BC04                  movw    [hl+4],ax       ; flag                          ;[INF] 2, 1
 5935  5935                      ; line  1281 :                 
 5936  5936                      ; line  1282 :                 /* Is Hex Number? */
 5937  5937                      ; line  1283 :                 if ((flag == 1) || (flag == 2) || ((i == 3) && (
 5938  5938                      ;              flag == 4)) || ((i == 6) && (flag == 3)))
 5939  5939                      $DGL    0,27
 5940  5940 00D23  E6                    onew    ax                                              ;[INF] 1, 1
 5941  5941 00D24  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 5942  5942 00D27  DD21                  bz      $?L0184                                         ;[INF] 2, 4
 5943  5943 00D29  A1                    incw    ax                                              ;[INF] 1, 1
 5944  5944 00D2A  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 5945  5945 00D2D  DD1B                  bz      $?L0184                                         ;[INF] 2, 4
 5946  5946 00D2F  A1                    incw    ax                                              ;[INF] 1, 1
 5947  5947 00D30  614902                cmpw    ax,[hl+2]       ; i                             ;[INF] 3, 1
 5948  5948 00D33  DF06                  bnz     $?L0185                                         ;[INF] 2, 4
 5949  5949 00D35  A1                    incw    ax                                              ;[INF] 1, 1
 5950  5950 00D36  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 5951  5951 00D39  DD0F                  bz      $?L0184                                         ;[INF] 2, 4
 5952  5952 00D3B                ?L0185:
 5953  5953 00D3B  300600                movw    ax,#06H ; 6                                     ;[INF] 3, 1
 5954  5954 00D3E  614902                cmpw    ax,[hl+2]       ; i                             ;[INF] 3, 1
 5955  5955 00D41  DF13                  bnz     $?L0182                                         ;[INF] 2, 4
 5956  5956 00D43  5003                  mov     x,#03H  ; 3                                     ;[INF] 2, 1
 5957  5957 00D45  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 5958  5958 00D48  DF0C                  bnz     $?L0182                                         ;[INF] 2, 4
 5959  5959 00D4A                ?L0184:
 5960  5960                      ; line  1284 :                 {
 5961  5961 00D4A                ??bb03_Display_Panel_String:
 5962  5962                      ; line  1285 :                     SECTB_Glyph_Map (output_buf, i);
 5963  5963                      $DGL    0,29
 5964  5964 00D4A  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 5965  5965 00D4C  C1                    push    ax                                              ;[INF] 1, 1
 5966  5966 00D4D  8C07                  mov     a,[hl+7]        ; output_buf                    ;[INF] 2, 1
 5967  5967 00D4F  318E                  shrw    ax,8                                            ;[INF] 2, 1
 5968  5968 00D51 RFCE80100              call    !!_SECTB_Glyph_Map                              ;[INF] 4, 3
 5969  5969 00D55  C0                    pop     ax                                              ;[INF] 1, 1
 5970  5970 00D56                ??eb03_Display_Panel_String:
 5971  5971                      ; line  1286 :                 }
 5972  5972 00D56                ?L0182:
 5973  5973 00D56                ?L0183:
 5974  5974 00D56                ??eb02_Display_Panel_String:
 5975  5975                      ; line  1287 :             }
 5976  5976                      $DGL    0,31
 5977  5977 00D56                ?L0181:
 5978  5978 00D56  617902                incw    [hl+2]  ; i                                     ;[INF] 3, 2
 5979  5979 00D59  EFAB                  br      $?L0179                                         ;[INF] 2, 3
 5980  5980 00D5B                ?L0180:
 5981  5981 00D5B                ??eb01_Display_Panel_String:
 5982  5982                      ; line  1288 :         }    
 5983  5983                      ; line  1289 :         break;
 5984  5984                      $DGL    0,33
 5985  5985 00D5B  EE1701                br      $!?L0171                                        ;[INF] 3, 3
 5986  5986                      ; line  1290 : 
 5987  5987                      ; line  1291 :         /* End Section 1 */
 5988  5988                      ; line  1292 : 
 5989  5989                      ; line  1293 :         /* Start Section C, Alphanumeric */
 5990  5990                      ; line  1294 :         case PANEL_LCD_LINE1:
 5991  5991 00D5E                ?L0173:
 5992  5992                      ; line  1295 :         {
 5993  5993 00D5E                ??bb04_Display_Panel_String:
 5994  5994                      ; line  1296 :             /* Cycle through Each Section */
 5995  5995                      ; line  1297 :             for (i = 0; i < 5; i++)
 5996  5996                      $DGL    0,41
 5997  5997 00D5E  F6                    clrw    ax                                              ;[INF] 1, 1
 5998  5998 00D5F  BC02                  movw    [hl+2],ax       ; i                             ;[INF] 2, 1
 5999  5999 00D61                ?L0186:
 6000  6000 00D61  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6001  6001 00D63  440500                cmpw    ax,#05H ; 5                                     ;[INF] 3, 1
 6002  6002 00D66  DE2E                  bnc     $?L0187                                         ;[INF] 2, 4
 6003  6003                      ; line  1298 :             {
 6004  6004 00D68                ??bb05_Display_Panel_String:
 6005  6005                      ; line  1299 :                 flag = Validate_Input((const uint8_t)string[i], 
 6006  6006                      ;              &output_buf);
 6007  6007                      $DGL    0,43
 6008  6008 00D68  17                    movw    ax,hl                                           ;[INF] 1, 1
 6009  6009 00D69  040700                addw    ax,#07H                                         ;[INF] 3, 1
 6010  6010 00D6C  C1                    push    ax                                              ;[INF] 1, 1
 6011  6011 00D6D  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6012  6012 00D6F  610910                addw    ax,[hl+16]      ; string                        ;[INF] 3, 1
 6013  6013 00D72  14                    movw    de,ax                                           ;[INF] 1, 1
 6014  6014 00D73  89                    mov     a,[de]                                          ;[INF] 1, 1
 6015  6015 00D74  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6016  6016 00D76 RFC210000              call    !!_Validate_Input                               ;[INF] 4, 3
 6017  6017 00D7A  C0                    pop     ax                                              ;[INF] 1, 1
 6018  6018 00D7B  13                    movw    ax,bc                                           ;[INF] 1, 1
 6019  6019 00D7C  BC04                  movw    [hl+4],ax       ; flag                          ;[INF] 2, 1
 6020  6020                      ; line  1300 :                 
 6021  6021                      ; line  1301 :                 /* Is Alphanumeric or Supported Symbol? */
 6022  6022                      ; line  1302 :                 if (flag)
 6023  6023                      $DGL    0,46
 6024  6024 00D7E  F6                    clrw    ax                                              ;[INF] 1, 1
 6025  6025 00D7F  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 6026  6026 00D82  DD0D                  bz      $?L0189                                         ;[INF] 2, 4
 6027  6027                      ; line  1303 :                 {
 6028  6028 00D84                ??bb06_Display_Panel_String:
 6029  6029                      ; line  1304 :                     /* Map Glyph to Segment Pattern */
 6030  6030                      ; line  1305 :                     SECTC_Glyph_Map(output_buf, i + 1);
 6031  6031                      $DGL    0,49
 6032  6032 00D84  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6033  6033 00D86  A1                    incw    ax                                              ;[INF] 1, 1
 6034  6034 00D87  C1                    push    ax                                              ;[INF] 1, 1
 6035  6035 00D88  8C07                  mov     a,[hl+7]        ; output_buf                    ;[INF] 2, 1
 6036  6036 00D8A  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6037  6037 00D8C RFCF50200              call    !!_SECTC_Glyph_Map                              ;[INF] 4, 3
 6038  6038 00D90  C0                    pop     ax                                              ;[INF] 1, 1
 6039  6039 00D91                ??eb06_Display_Panel_String:
 6040  6040                      ; line  1306 :                 }
 6041  6041 00D91                ?L0189:
 6042  6042 00D91                ?L0190:
 6043  6043 00D91                ??eb05_Display_Panel_String:
 6044  6044                      ; line  1307 :             }
 6045  6045                      $DGL    0,51
 6046  6046 00D91                ?L0188:
 6047  6047 00D91  617902                incw    [hl+2]  ; i                                     ;[INF] 3, 2
 6048  6048 00D94  EFCB                  br      $?L0186                                         ;[INF] 2, 3
 6049  6049 00D96                ?L0187:
 6050  6050 00D96                ??eb04_Display_Panel_String:
 6051  6051                      ; line  1308 :         }    
 6052  6052                      ; line  1309 :         break;
 6053  6053                      $DGL    0,53
 6054  6054 00D96  EEDC00                br      $!?L0171                                        ;[INF] 3, 3
 6055  6055                      ; line  1310 :         
 6056  6056                      ; line  1311 :         /* Start Section 2, Signed Numerical */
 6057  6057                      ; line  1312 :         case PANEL_LCD_LINE3:
 6058  6058 00D99                ?L0174:
 6059  6059                      ; line  1313 :         {
 6060  6060 00D99                ??bb07_Display_Panel_String:
 6061  6061                      ; line  1314 :             /* Turn off minus symbol */
 6062  6062                      ; line  1315 :             SEG10_DEF &= 0xF7U;
 6063  6063                      $DGL    0,59
 6064  6064 00D99  8F0A04                mov     a,!SEG10                                        ;[INF] 3, 1
 6065  6065 00D9C  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 6066  6066 00D9E  9F0A04                mov     !SEG10,a                                        ;[INF] 3, 1
 6067  6067                      ; line  1316 :             
 6068  6068                      ; line  1317 :             /* Cycle through each digit */
 6069  6069                      ; line  1318 :             for (i = 0; i < 4; i++)
 6070  6070                      $DGL    0,62
 6071  6071 00DA1  F6                    clrw    ax                                              ;[INF] 1, 1
 6072  6072 00DA2  BC02                  movw    [hl+2],ax       ; i                             ;[INF] 2, 1
 6073  6073 00DA4                ?L0191:
 6074  6074 00DA4  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6075  6075 00DA6  440400                cmpw    ax,#04H ; 4                                     ;[INF] 3, 1
 6076  6076 00DA9  DE5B                  bnc     $?L0192                                         ;[INF] 2, 4
 6077  6077                      ; line  1319 :             {
 6078  6078 00DAB                ??bb08_Display_Panel_String:
 6079  6079                      ; line  1320 :                 /* Validate Input */
 6080  6080                      ; line  1321 :                 flag = Validate_Input((const uint8_t)string[i], 
 6081  6081                      ;              &output_buf);
 6082  6082                      $DGL    0,65
 6083  6083 00DAB  17                    movw    ax,hl                                           ;[INF] 1, 1
 6084  6084 00DAC  040700                addw    ax,#07H                                         ;[INF] 3, 1
 6085  6085 00DAF  C1                    push    ax                                              ;[INF] 1, 1
 6086  6086 00DB0  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6087  6087 00DB2  610910                addw    ax,[hl+16]      ; string                        ;[INF] 3, 1
 6088  6088 00DB5  14                    movw    de,ax                                           ;[INF] 1, 1
 6089  6089 00DB6  89                    mov     a,[de]                                          ;[INF] 1, 1
 6090  6090 00DB7  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6091  6091 00DB9 RFC210000              call    !!_Validate_Input                               ;[INF] 4, 3
 6092  6092 00DBD  C0                    pop     ax                                              ;[INF] 1, 1
 6093  6093 00DBE  13                    movw    ax,bc                                           ;[INF] 1, 1
 6094  6094 00DBF  BC04                  movw    [hl+4],ax       ; flag                          ;[INF] 2, 1
 6095  6095                      ; line  1322 :             
 6096  6096                      ; line  1323 :                 /* Is Number? */
 6097  6097                      ; line  1324 :                 if ((flag == 1) || (flag == 2) || (flag == 4))
 6098  6098                      $DGL    0,68
 6099  6099 00DC1  E6                    onew    ax                                              ;[INF] 1, 1
 6100  6100 00DC2  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 6101  6101 00DC5  DD0E                  bz      $?L0196                                         ;[INF] 2, 4
 6102  6102 00DC7  A1                    incw    ax                                              ;[INF] 1, 1
 6103  6103 00DC8  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 6104  6104 00DCB  DD08                  bz      $?L0196                                         ;[INF] 2, 4
 6105  6105 00DCD  300400                movw    ax,#04H ; 4                                     ;[INF] 3, 1
 6106  6106 00DD0  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 6107  6107 00DD3  DF2C                  bnz     $?L0194                                         ;[INF] 2, 4
 6108  6108 00DD5                ?L0196:
 6109  6109                      ; line  1325 :                 {
 6110  6110 00DD5                ??bb09_Display_Panel_String:
 6111  6111                      ; line  1326 :                     if ((i > 1) && (string[2] != '.'))
 6112  6112                      $DGL    0,70
 6113  6113 00DD5  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6114  6114 00DD7  440200                cmpw    ax,#02H ; 2                                     ;[INF] 3, 1
 6115  6115 00DDA  DC19                  bc      $?L0197                                         ;[INF] 2, 4
 6116  6116 00DDC  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6117  6117 00DDE  12                    movw    bc,ax                                           ;[INF] 1, 1
 6118  6118 00DDF  490200                mov     a,2[bc]                                         ;[INF] 3, 1
 6119  6119 00DE2  4C2E                  cmp     a,#02EH ; 46                                    ;[INF] 2, 1
 6120  6120 00DE4  DD0F                  bz      $?L0197                                         ;[INF] 2, 4
 6121  6121                      ; line  1327 :                     {
 6122  6122 00DE6                ??bb0A_Display_Panel_String:
 6123  6123                      ; line  1328 :                         /* Map Glyph to Segment Pattern */
 6124  6124                      ; line  1329 :                         SECTA_Glyph_Map(output_buf, i + 1);
 6125  6125                      $DGL    0,73
 6126  6126 00DE6  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6127  6127 00DE8  A1                    incw    ax                                              ;[INF] 1, 1
 6128  6128 00DE9  C1                    push    ax                                              ;[INF] 1, 1
 6129  6129 00DEA  8C07                  mov     a,[hl+7]        ; output_buf                    ;[INF] 2, 1
 6130  6130 00DEC  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6131  6131 00DEE RFC470100              call    !!_SECTA_Glyph_Map                              ;[INF] 4, 3
 6132  6132 00DF2  C0                    pop     ax                                              ;[INF] 1, 1
 6133  6133 00DF3                ??eb0A_Display_Panel_String:
 6134  6134                      ; line  1330 :                     }
 6135  6135                      ; line  1331 :                     else
 6136  6136                      $DGL    0,75
 6137  6137 00DF3  EF0C                  br      $?L0198                                         ;[INF] 2, 3
 6138  6138 00DF5                ?L0197:
 6139  6139                      ; line  1332 :                     {
 6140  6140 00DF5                ??bb0B_Display_Panel_String:
 6141  6141                      ; line  1333 :                         /* Map Glyph to Segment Pattern */
 6142  6142                      ; line  1334 :                         SECTA_Glyph_Map(output_buf, i);
 6143  6143                      $DGL    0,78
 6144  6144 00DF5  AC02                  movw    ax,[hl+2]       ; i                             ;[INF] 2, 1
 6145  6145 00DF7  C1                    push    ax                                              ;[INF] 1, 1
 6146  6146 00DF8  8C07                  mov     a,[hl+7]        ; output_buf                    ;[INF] 2, 1
 6147  6147 00DFA  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6148  6148 00DFC RFC470100              call    !!_SECTA_Glyph_Map                              ;[INF] 4, 3
 6149  6149 00E00  C0                    pop     ax                                              ;[INF] 1, 1
 6150  6150 00E01                ??eb0B_Display_Panel_String:
 6151  6151                      ; line  1335 :                     }
 6152  6152 00E01                ?L0198:
 6153  6153 00E01                ??eb09_Display_Panel_String:
 6154  6154                      ; line  1336 :                 }
 6155  6155 00E01                ?L0194:
 6156  6156 00E01                ?L0195:
 6157  6157 00E01                ??eb08_Display_Panel_String:
 6158  6158                      ; line  1337 :             }
 6159  6159                      $DGL    0,81
 6160  6160 00E01                ?L0193:
 6161  6161 00E01  617902                incw    [hl+2]  ; i                                     ;[INF] 3, 2
 6162  6162 00E04  EF9E                  br      $?L0191                                         ;[INF] 2, 3
 6163  6163 00E06                ?L0192:
 6164  6164 00E06                ??eb07_Display_Panel_String:
 6165  6165                      ; line  1338 :         }
 6166  6166                      ; line  1339 :         break;
 6167  6167                      $DGL    0,83
 6168  6168 00E06  EF6D                  br      $?L0171                                         ;[INF] 2, 3
 6169  6169                      ; line  1340 : 
 6170  6170                      ; line  1341 :         /* End Section 2 */
 6171  6171                      ; line  1342 : 
 6172  6172                      ; line  1343 :         /* Start Symbol Section */
 6173  6173                      ; line  1344 :         case PANEL_LCD_SYMBOL:
 6174  6174 00E08                ?L0175:
 6175  6175                      ; line  1345 :         {
 6176  6176 00E08                ??bb0C_Display_Panel_String:
 6177  6177                      ; line  1346 :             if ((string[0] == 'F') || (string[0] == 'f'))
 6178  6178                      $DGL    0,90
 6179  6179 00E08  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6180  6180 00E0A  14                    movw    de,ax                                           ;[INF] 1, 1
 6181  6181 00E0B  89                    mov     a,[de]                                          ;[INF] 1, 1
 6182  6182 00E0C  4C46                  cmp     a,#046H ; 70                                    ;[INF] 2, 1
 6183  6183 00E0E  DD05                  bz      $?L0201                                         ;[INF] 2, 4
 6184  6184 00E10  89                    mov     a,[de]                                          ;[INF] 1, 1
 6185  6185 00E11  4C66                  cmp     a,#066H ; 102                                   ;[INF] 2, 1
 6186  6186 00E13  DF24                  bnz     $?L0199                                         ;[INF] 2, 4
 6187  6187 00E15                ?L0201:
 6188  6188                      ; line  1347 :             {
 6189  6189 00E15                ??bb0D_Display_Panel_String:
 6190  6190                      ; line  1348 :                 /* Validate Input */
 6191  6191                      ; line  1349 :                 flag = Validate_Input((const uint8_t)string[1], 
 6192  6192                      ;              &output_buf);
 6193  6193                      $DGL    0,93
 6194  6194 00E15  17                    movw    ax,hl                                           ;[INF] 1, 1
 6195  6195 00E16  040700                addw    ax,#07H                                         ;[INF] 3, 1
 6196  6196 00E19  C1                    push    ax                                              ;[INF] 1, 1
 6197  6197 00E1A  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6198  6198 00E1C  14                    movw    de,ax                                           ;[INF] 1, 1
 6199  6199 00E1D  8A01                  mov     a,[de+1]                                        ;[INF] 2, 1
 6200  6200 00E1F  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6201  6201 00E21 RFC210000              call    !!_Validate_Input                               ;[INF] 4, 3
 6202  6202 00E25  C0                    pop     ax                                              ;[INF] 1, 1
 6203  6203 00E26  13                    movw    ax,bc                                           ;[INF] 1, 1
 6204  6204 00E27  BC04                  movw    [hl+4],ax       ; flag                          ;[INF] 2, 1
 6205  6205                      ; line  1350 :             
 6206  6206                      ; line  1351 :                 /* Is Number ? */
 6207  6207                      ; line  1352 :                 if (flag == 1)
 6208  6208                      $DGL    0,96
 6209  6209 00E29  E6                    onew    ax                                              ;[INF] 1, 1
 6210  6210 00E2A  614904                cmpw    ax,[hl+4]       ; flag                          ;[INF] 3, 1
 6211  6211 00E2D  DF08                  bnz     $?L0202                                         ;[INF] 2, 4
 6212  6212                      ; line  1353 :                 {        
 6213  6213 00E2F                ??bb0E_Display_Panel_String:
 6214  6214                      ; line  1354 :                     /* Map Glyph to Segment Pattern */
 6215  6215                      ; line  1355 :                     SECTF_Glyph_Map(output_buf);
 6216  6216                      $DGL    0,99
 6217  6217 00E2F  8C07                  mov     a,[hl+7]        ; output_buf                    ;[INF] 2, 1
 6218  6218 00E31  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6219  6219 00E33 RFCAC0500              call    !!_SECTF_Glyph_Map                              ;[INF] 4, 3
 6220  6220 00E37                ??eb0E_Display_Panel_String:
 6221  6221                      ; line  1356 :                 }
 6222  6222 00E37                ?L0202:
 6223  6223 00E37                ?L0203:
 6224  6224 00E37                ??eb0D_Display_Panel_String:
 6225  6225                      ; line  1357 :             }
 6226  6226                      ; line  1358 :             else if (string[0] ==  '-')
 6227  6227                      $DGL    0,102
 6228  6228 00E37  EF3C                  br      $?L0200                                         ;[INF] 2, 3
 6229  6229 00E39                ?L0199:
 6230  6230 00E39  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6231  6231 00E3B  14                    movw    de,ax                                           ;[INF] 1, 1
 6232  6232 00E3C  89                    mov     a,[de]                                          ;[INF] 1, 1
 6233  6233 00E3D  4C2D                  cmp     a,#02DH ; 45                                    ;[INF] 2, 1
 6234  6234 00E3F  DF19                  bnz     $?L0204                                         ;[INF] 2, 4
 6235  6235                      ; line  1359 :             {
 6236  6236 00E41                ??bb0F_Display_Panel_String:
 6237  6237                      ; line  1360 :                 if (string[1])
 6238  6238                      $DGL    0,104
 6239  6239 00E41  8A01                  mov     a,[de+1]                                        ;[INF] 2, 1
 6240  6240 00E43  D1                    cmp0    a                                               ;[INF] 1, 1
 6241  6241 00E44  DD0A                  bz      $?L0206                                         ;[INF] 2, 4
 6242  6242                      ; line  1361 :                 {
 6243  6243 00E46                ??bb10_Display_Panel_String:
 6244  6244                      ; line  1362 :                     /* Turn on minus symbol */
 6245  6245                      ; line  1363 :                     SEG10_DEF/*lra10l*/ |= 0x08U;
 6246  6246                      $DGL    0,107
 6247  6247 00E46  8F0A04                mov     a,!SEG10                                        ;[INF] 3, 1
 6248  6248 00E49  6C08                  or      a,#08H  ; 8                                     ;[INF] 2, 1
 6249  6249 00E4B  9F0A04                mov     !SEG10,a                                        ;[INF] 3, 1
 6250  6250 00E4E                ??eb10_Display_Panel_String:
 6251  6251                      ; line  1364 :                 }
 6252  6252                      ; line  1365 :                 else
 6253  6253                      $DGL    0,109
 6254  6254 00E4E  EF08                  br      $?L0207                                         ;[INF] 2, 3
 6255  6255 00E50                ?L0206:
 6256  6256                      ; line  1366 :                 {
 6257  6257 00E50                ??bb11_Display_Panel_String:
 6258  6258                      ; line  1367 :                     /* Turn off minus symbol */
 6259  6259                      ; line  1368 :                     SEG10_DEF/*lra10l*/ &= 0xF7U;
 6260  6260                      $DGL    0,112
 6261  6261 00E50  8F0A04                mov     a,!SEG10                                        ;[INF] 3, 1
 6262  6262 00E53  5CF7                  and     a,#0F7H ; 247                                   ;[INF] 2, 1
 6263  6263 00E55  9F0A04                mov     !SEG10,a                                        ;[INF] 3, 1
 6264  6264 00E58                ??eb11_Display_Panel_String:
 6265  6265                      ; line  1369 :                 }
 6266  6266 00E58                ?L0207:
 6267  6267 00E58                ??eb0F_Display_Panel_String:
 6268  6268                      ; line  1370 :             }
 6269  6269                      ; line  1371 :             else
 6270  6270                      $DGL    0,115
 6271  6271 00E58  EF1B                  br      $?L0205                                         ;[INF] 2, 3
 6272  6272 00E5A                ?L0204:
 6273  6273                      ; line  1372 :             {
 6274  6274 00E5A                ??bb12_Display_Panel_String:
 6275  6275                      ; line  1373 :                 /* Convert To Symbol Code */
 6276  6276                      ; line  1374 :                 symbsel = (uint8_t)string[0];
 6277  6277                      $DGL    0,118
 6278  6278 00E5A  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6279  6279 00E5C  14                    movw    de,ax                                           ;[INF] 1, 1
 6280  6280 00E5D  89                    mov     a,[de]                                          ;[INF] 1, 1
 6281  6281 00E5E  318E                  shrw    ax,8                                            ;[INF] 2, 1
 6282  6282 00E60  BB                    movw    [hl],ax ; symbsel                               ;[INF] 1, 1
 6283  6283                      ; line  1375 :                 symbsel = symbsel << 8;
 6284  6284                      $DGL    0,119
 6285  6285 00E61  318D                  shlw    ax,8                                            ;[INF] 2, 1
 6286  6286 00E63  BB                    movw    [hl],ax ; symbsel                               ;[INF] 1, 1
 6287  6287                      ; line  1376 :                 symbsel |= (uint8_t)string[1];
 6288  6288                      $DGL    0,120
 6289  6289 00E64  AC10                  movw    ax,[hl+16]      ; string                        ;[INF] 2, 1
 6290  6290 00E66  A1                    incw    ax                                              ;[INF] 1, 1
 6291  6291 00E67  14                    movw    de,ax                                           ;[INF] 1, 1
 6292  6292 00E68  89                    mov     a,[de]                                          ;[INF] 1, 1
 6293  6293 00E69  72                    mov     c,a                                             ;[INF] 1, 1
 6294  6294 00E6A  8B                    mov     a,[hl]  ; symbsel                               ;[INF] 1, 1
 6295  6295 00E6B  616A                  or      a,c                                             ;[INF] 2, 1
 6296  6296 00E6D  70                    mov     x,a                                             ;[INF] 1, 1
 6297  6297 00E6E  8C01                  mov     a,[hl+1]        ; symbsel                       ;[INF] 2, 1
 6298  6298 00E70  BB                    movw    [hl],ax ; symbsel                               ;[INF] 1, 1
 6299  6299                      ; line  1377 :             
 6300  6300                      ; line  1378 :                 /* Map Symbol to Segment */
 6301  6301                      ; line  1379 :                 Symbol_Map(symbsel);
 6302  6302                      $DGL    0,123
 6303  6303 00E71 RFC3F0700              call    !!_Symbol_Map                                   ;[INF] 4, 3
 6304  6304 00E75                ??eb12_Display_Panel_String:
 6305  6305                      ; line  1380 :             }
 6306  6306 00E75                ?L0205:
 6307  6307 00E75                ?L0200:
 6308  6308 00E75                ??eb0C_Display_Panel_String:
 6309  6309                      ; line  1381 :         }    
 6310  6310                      ; line  1382 :         break;
 6311  6311                      ; line  1383 :         
 6312  6312                      ; line  1384 :         /* End Symbol Section */
 6313  6313                      ; line  1385 : 
 6314  6314                      ; line  1386 :         /* Do nothing for undefined selections */
 6315  6315                      ; line  1387 :         default:
 6316  6316 00E75                ?L0176:
 6317  6317                      ; line  1388 :         {
 6318  6318 00E75                ??bb13_Display_Panel_String:
 6319  6319 00E75                ??eb13_Display_Panel_String:
 6320  6320                      ; line  1389 :             /* Bad Selection */
 6321  6321                      ; line  1390 :         }    
 6322  6322                      ; line  1391 :         break;
 6323  6323 00E75                ??eb00_Display_Panel_String:
 6324  6324                      ; line  1392 :     }
 6325  6325 00E75                ?L0171:
 6326  6326                      ; line  1393 : }
 6327  6327                      $DGL    0,137
 6328  6328 00E75                ??ef_Display_Panel_String:
 6329  6329 00E75  100A                  addw    sp,#0AH                                         ;[INF] 2, 1
 6330  6330 00E77  C6                    pop     hl                                              ;[INF] 1, 1
 6331  6331 00E78  D7                    ret                                                     ;[INF] 1, 6
 6332  6332 00E79                ??ee_Display_Panel_String:
 6333  6333                      ; line  1394 : /***************************************************************
 6334  6334                      ;              ********************************************************
 6335  6335                      ; line  1395 : End of function Display_Panel_String
 6336  6336                      ; line  1396 : ****************************************************************
 6337  6337                      ;              *******************************************************/
 6338  6338                      ; line  1397 : 
 6339  6339                      ; line  1398 : /***************************************************************
 6340  6340                      ;              ********************************************************
 6341  6341                      ; line  1399 : * Function Name : Display_Panel_Delay
 6342  6342                      ; line  1400 : * Description   : Delay routine for LCD or any other devices.
 6343  6343                      ; line  1401 : * Arguments     :(uint32_t) units - time in, approximately, micr
 6344  6344                      ;              osec
 6345  6345                      ; line  1402 : * Return Value  : None
 6346  6346                      ; line  1403 : ****************************************************************
 6347  6347                      ;              *******************************************************/
 6348  6348                      ; line  1404 : void Display_Panel_Delay (const uint32_t units)
 6349  6349                      ; line  1405 : {
 6350  6350 00E79                _Display_Panel_Delay:
 6351  6351                      $DGL    1,694
 6352  6352 00E79  C7                    push    hl                                              ;[INF] 1, 1
 6353  6353 00E7A  C3                    push    bc                                              ;[INF] 1, 1
 6354  6354 00E7B  C1                    push    ax                                              ;[INF] 1, 1
 6355  6355 00E7C  2004                  subw    sp,#04H                                         ;[INF] 2, 1
 6356  6356 00E7E  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
 6357  6357 00E81                ??bf_Display_Panel_Delay:
 6358  6358                      ; line  1406 :     /* Declare a delay count */
 6359  6359                      ; line  1407 :     uint32_t counter = units * PANEL_DELAY_TIMING;
 6360  6360                      $DGL    0,3
 6361  6361 00E81  AC04                  movw    ax,[hl+4]       ; units                         ;[INF] 2, 1
 6362  6362 00E83 RBD00                  movw    _@RTARG0,ax                                     ;[INF] 2, 1
 6363  6363 00E85  AC06                  movw    ax,[hl+6]       ; units                         ;[INF] 2, 1
 6364  6364 00E87 RBD00                  movw    _@RTARG2,ax                                     ;[INF] 2, 1
 6365  6365 00E89 RC9000500              movw    _@RTARG4,#05H   ; 5                             ;[INF] 4, 1
 6366  6366 00E8D  F6                    clrw    ax                                              ;[INF] 1, 1
 6367  6367 00E8E RFD0000                call    !@@lumul                                        ;[INF] 3, 3
 6368  6368 00E91 RAD00                  movw    ax,_@RTARG2                                     ;[INF] 2, 1
 6369  6369 00E93  BC02                  movw    [hl+2],ax       ; counter                       ;[INF] 2, 1
 6370  6370 00E95 RAD00                  movw    ax,_@RTARG0                                     ;[INF] 2, 1
 6371  6371 00E97  BB                    movw    [hl],ax ; counter                               ;[INF] 1, 1
 6372  6372                      ; line  1408 :     
 6373  6373                      ; line  1409 :     /* Execute a NOP instruction */
 6374  6374                      ; line  1410 :     while (counter--)
 6375  6375                      $DGL    0,6
 6376  6376 00E98                ?L0210:
 6377  6377 00E98  AC02                  movw    ax,[hl+2]       ; counter                       ;[INF] 2, 1
 6378  6378 00E9A  12                    movw    bc,ax                                           ;[INF] 1, 1
 6379  6379 00E9B  AB                    movw    ax,[hl] ; counter                               ;[INF] 1, 1
 6380  6380 00E9C  240100                subw    ax,#01H ; 1                                     ;[INF] 3, 1
 6381  6381 00E9F  61D8                  sknc                                                    ;[INF] 2, 1
 6382  6382 00EA1  B3                    decw    bc                                              ;[INF] 1, 1
 6383  6383 00EA2                ?L0212:
 6384  6384 00EA2  BB                    movw    [hl],ax ; counter                               ;[INF] 1, 1
 6385  6385 00EA3  33                    xchw    ax,bc                                           ;[INF] 1, 1
 6386  6386 00EA4  BC02                  movw    [hl+2],ax       ; counter                       ;[INF] 2, 1
 6387  6387 00EA6  33                    xchw    ax,bc                                           ;[INF] 1, 1
 6388  6388 00EA7  040100                addw    ax,#01H ; 1                                     ;[INF] 3, 1
 6389  6389 00EAA  61D8                  sknc                                                    ;[INF] 2, 1
 6390  6390 00EAC  A3                    incw    bc                                              ;[INF] 1, 1
 6391  6391 00EAD                ?L0213:
 6392  6392 00EAD  03                    addw    ax,bc                                           ;[INF] 1, 1
 6393  6393 00EAE  61C8                  skc                                                     ;[INF] 2, 1
 6394  6394 00EB0  DD03                  bz      $?L0211                                         ;[INF] 2, 4
 6395  6395 00EB2                ?L0214:
 6396  6396                      ; line  1411 :     {
 6397  6397 00EB2                ??bb00_Display_Panel_Delay:
 6398  6398                      ; line  1412 :         NOP();
 6399  6399                      $DGL    0,8
 6400  6400 00EB2  00                    nop                                                     ;[INF] 1, 1
 6401  6401 00EB3                ??eb00_Display_Panel_Delay:
 6402  6402                      ; line  1413 :     }
 6403  6403                      $DGL    0,9
 6404  6404 00EB3  EFE3                  br      $?L0210                                         ;[INF] 2, 3
 6405  6405 00EB5                ?L0211:
 6406  6406                      ; line  1414 : }
 6407  6407                      $DGL    0,10
 6408  6408 00EB5                ??ef_Display_Panel_Delay:
 6409  6409 00EB5  1008                  addw    sp,#08H                                         ;[INF] 2, 1
 6410  6410 00EB7  C6                    pop     hl                                              ;[INF] 1, 1
 6411  6411 00EB8  D7                    ret                                                     ;[INF] 1, 6
 6412  6412 00EB9                ??ee_Display_Panel_Delay:
 6413  6413                      ; line  1415 : /***************************************************************
 6414  6414                      ;              ********************************************************
 6415  6415                      ; line  1416 : End of function Display_Panel_Delay
 6416  6416                      ; line  1417 : ****************************************************************
 6417  6417                      ;              *******************************************************/
 6418  6418                      ; line  1418 : 
 6419  6419                      ; line  1419 : /***************************************************************
 6420  6420                      ;              ********************************************************
 6421  6421                      ; line  1420 : Function Name : LCD_ON
 6422  6422                      ; line  1421 : Description   : Lights up all the segments of the Renesas LCD Pa
 6423  6423                      ;              nel.
 6424  6424                      ; line  1422 : Parameters    : None
 6425  6425                      ; line  1423 : Return Value  : None
 6426  6426                      ; line  1424 : ****************************************************************
 6427  6427                      ;              *******************************************************/
 6428  6428                      ; line  1425 : void LCD_ON (void)
 6429  6429                      ; line  1426 : {
 6430  6430 00EB9                _LCD_ON:
 6431  6431                      $DGL    1,706
 6432  6432 00EB9                ??bf_LCD_ON:
 6433  6433                      ; line  1427 :     Display_Panel_String(PANEL_LCD_LINE2, "888:88");
 6434  6434                      $DGL    0,2
 6435  6435 00EB9 R307E00                movw    ax,#mirlw (?L0217)                              ;[INF] 3, 1
 6436  6436 00EBC  C1                    push    ax                                              ;[INF] 1, 1
 6437  6437 00EBD  303100                movw    ax,#031H        ; 49                            ;[INF] 3, 1
 6438  6438 00EC0 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6439  6439 00EC4  C0                    pop     ax                                              ;[INF] 1, 1
 6440  6440                      ; line  1428 :     Display_Panel_String(PANEL_LCD_LINE3, "888");
 6441  6441                      $DGL    0,3
 6442  6442 00EC5 R308500                movw    ax,#mirlw (?L0218)                              ;[INF] 3, 1
 6443  6443 00EC8  C1                    push    ax                                              ;[INF] 1, 1
 6444  6444 00EC9  303200                movw    ax,#032H        ; 50                            ;[INF] 3, 1
 6445  6445 00ECC RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6446  6446 00ED0  C0                    pop     ax                                              ;[INF] 1, 1
 6447  6447                      ; line  1429 :     Display_Panel_String(PANEL_LCD_LINE1, "88888");
 6448  6448                      $DGL    0,4
 6449  6449 00ED1 R308900                movw    ax,#mirlw (?L0219)                              ;[INF] 3, 1
 6450  6450 00ED4  C1                    push    ax                                              ;[INF] 1, 1
 6451  6451 00ED5  303300                movw    ax,#033H        ; 51                            ;[INF] 3, 1
 6452  6452 00ED8 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6453  6453 00EDC  C0                    pop     ax                                              ;[INF] 1, 1
 6454  6454                      ; line  1430 :     
 6455  6455                      ; line  1431 :     
 6456  6456                      ; line  1432 :     Display_Panel_String(PANEL_LCD_SYMBOL, "-1");
 6457  6457                      $DGL    0,7
 6458  6458 00EDD R308F00                movw    ax,#mirlw (?L0220)                              ;[INF] 3, 1
 6459  6459 00EE0  C1                    push    ax                                              ;[INF] 1, 1
 6460  6460 00EE1  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6461  6461 00EE4 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6462  6462 00EE8  C0                    pop     ax                                              ;[INF] 1, 1
 6463  6463                      ; line  1433 :     Display_Panel_String(PANEL_LCD_SYMBOL, "11");
 6464  6464                      $DGL    0,8
 6465  6465 00EE9 R309200                movw    ax,#mirlw (?L0221)                              ;[INF] 3, 1
 6466  6466 00EEC  C1                    push    ax                                              ;[INF] 1, 1
 6467  6467 00EED  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6468  6468 00EF0 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6469  6469 00EF4  C0                    pop     ax                                              ;[INF] 1, 1
 6470  6470                      ; line  1434 :     Display_Panel_String(PANEL_LCD_SYMBOL, "21");
 6471  6471                      $DGL    0,9
 6472  6472 00EF5 R309500                movw    ax,#mirlw (?L0222)                              ;[INF] 3, 1
 6473  6473 00EF8  C1                    push    ax                                              ;[INF] 1, 1
 6474  6474 00EF9  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6475  6475 00EFC RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6476  6476 00F00  C0                    pop     ax                                              ;[INF] 1, 1
 6477  6477                      ; line  1435 :     Display_Panel_String(PANEL_LCD_SYMBOL, "31");
 6478  6478                      $DGL    0,10
 6479  6479 00F01 R309800                movw    ax,#mirlw (?L0223)                              ;[INF] 3, 1
 6480  6480 00F04  C1                    push    ax                                              ;[INF] 1, 1
 6481  6481 00F05  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6482  6482 00F08 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6483  6483 00F0C  C0                    pop     ax                                              ;[INF] 1, 1
 6484  6484                      ; line  1436 :     Display_Panel_String(PANEL_LCD_SYMBOL, "41");
 6485  6485                      $DGL    0,11
 6486  6486 00F0D R309B00                movw    ax,#mirlw (?L0224)                              ;[INF] 3, 1
 6487  6487 00F10  C1                    push    ax                                              ;[INF] 1, 1
 6488  6488 00F11  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6489  6489 00F14 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6490  6490 00F18  C0                    pop     ax                                              ;[INF] 1, 1
 6491  6491                      ; line  1437 :     Display_Panel_String(PANEL_LCD_SYMBOL, "51");
 6492  6492                      $DGL    0,12
 6493  6493 00F19 R309E00                movw    ax,#mirlw (?L0225)                              ;[INF] 3, 1
 6494  6494 00F1C  C1                    push    ax                                              ;[INF] 1, 1
 6495  6495 00F1D  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6496  6496 00F20 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6497  6497 00F24  C0                    pop     ax                                              ;[INF] 1, 1
 6498  6498                      ; line  1438 :     Display_Panel_String(PANEL_LCD_SYMBOL, "61");
 6499  6499                      $DGL    0,13
 6500  6500 00F25 R30A100                movw    ax,#mirlw (?L0226)                              ;[INF] 3, 1
 6501  6501 00F28  C1                    push    ax                                              ;[INF] 1, 1
 6502  6502 00F29  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6503  6503 00F2C RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6504  6504 00F30  C0                    pop     ax                                              ;[INF] 1, 1
 6505  6505                      ; line  1439 :     Display_Panel_String(PANEL_LCD_SYMBOL, "71");
 6506  6506                      $DGL    0,14
 6507  6507 00F31 R30A400                movw    ax,#mirlw (?L0227)                              ;[INF] 3, 1
 6508  6508 00F34  C1                    push    ax                                              ;[INF] 1, 1
 6509  6509 00F35  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6510  6510 00F38 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6511  6511 00F3C  C0                    pop     ax                                              ;[INF] 1, 1
 6512  6512                      ; line  1440 :     Display_Panel_String(PANEL_LCD_SYMBOL, "81");
 6513  6513                      $DGL    0,15
 6514  6514 00F3D R30A700                movw    ax,#mirlw (?L0228)                              ;[INF] 3, 1
 6515  6515 00F40  C1                    push    ax                                              ;[INF] 1, 1
 6516  6516 00F41  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6517  6517 00F44 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6518  6518 00F48  C0                    pop     ax                                              ;[INF] 1, 1
 6519  6519                      ; line  1441 :     Display_Panel_String(PANEL_LCD_SYMBOL, "91");
 6520  6520                      $DGL    0,16
 6521  6521 00F49 R30AA00                movw    ax,#mirlw (?L0229)                              ;[INF] 3, 1
 6522  6522 00F4C  C1                    push    ax                                              ;[INF] 1, 1
 6523  6523 00F4D  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6524  6524 00F50 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6525  6525 00F54  C0                    pop     ax                                              ;[INF] 1, 1
 6526  6526                      ; line  1442 :     Display_Panel_String(PANEL_LCD_SYMBOL, "a1");
 6527  6527                      $DGL    0,17
 6528  6528 00F55 R30AD00                movw    ax,#mirlw (?L0230)                              ;[INF] 3, 1
 6529  6529 00F58  C1                    push    ax                                              ;[INF] 1, 1
 6530  6530 00F59  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6531  6531 00F5C RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6532  6532 00F60  C0                    pop     ax                                              ;[INF] 1, 1
 6533  6533                      ; line  1443 :     Display_Panel_String(PANEL_LCD_SYMBOL, "b1");
 6534  6534                      $DGL    0,18
 6535  6535 00F61 R30B000                movw    ax,#mirlw (?L0231)                              ;[INF] 3, 1
 6536  6536 00F64  C1                    push    ax                                              ;[INF] 1, 1
 6537  6537 00F65  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6538  6538 00F68 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6539  6539 00F6C  C0                    pop     ax                                              ;[INF] 1, 1
 6540  6540                      ; line  1444 :     Display_Panel_String(PANEL_LCD_SYMBOL, "c1");
 6541  6541                      $DGL    0,19
 6542  6542 00F6D R30B300                movw    ax,#mirlw (?L0232)                              ;[INF] 3, 1
 6543  6543 00F70  C1                    push    ax                                              ;[INF] 1, 1
 6544  6544 00F71  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6545  6545 00F74 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6546  6546 00F78  C0                    pop     ax                                              ;[INF] 1, 1
 6547  6547                      ; line  1445 :     Display_Panel_String(PANEL_LCD_SYMBOL, "d1");
 6548  6548                      $DGL    0,20
 6549  6549 00F79 R30B600                movw    ax,#mirlw (?L0233)                              ;[INF] 3, 1
 6550  6550 00F7C  C1                    push    ax                                              ;[INF] 1, 1
 6551  6551 00F7D  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6552  6552 00F80 RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6553  6553 00F84  C0                    pop     ax                                              ;[INF] 1, 1
 6554  6554                      ; line  1446 :     Display_Panel_String(PANEL_LCD_SYMBOL, "e1");
 6555  6555                      $DGL    0,21
 6556  6556 00F85 R30B900                movw    ax,#mirlw (?L0234)                              ;[INF] 3, 1
 6557  6557 00F88  C1                    push    ax                                              ;[INF] 1, 1
 6558  6558 00F89  303400                movw    ax,#034H        ; 52                            ;[INF] 3, 1
 6559  6559 00F8C RFCD70C00              call    !!_Display_Panel_String                         ;[INF] 4, 3
 6560  6560 00F90  C0                    pop     ax                                              ;[INF] 1, 1
 6561  6561                      ; line  1447 :     
 6562  6562                      ; line  1448 :     SECTD_Glyph_Map(1);
 6563  6563                      $DGL    0,23
 6564  6564 00F91  E6                    onew    ax                                              ;[INF] 1, 1
 6565  6565 00F92 RFCE20300              call    !!_SECTD_Glyph_Map                              ;[INF] 4, 3
 6566  6566                      ; line  1449 :     SECTD_Glyph_Map(2);
 6567  6567                      $DGL    0,24
 6568  6568 00F96  300200                movw    ax,#02H ; 2                                     ;[INF] 3, 1
 6569  6569 00F99 RFCE20300              call    !!_SECTD_Glyph_Map                              ;[INF] 4, 3
 6570  6570                      ; line  1450 :     SECTD_Glyph_Map(3);
 6571  6571                      $DGL    0,25
 6572  6572 00F9D  300300                movw    ax,#03H ; 3                                     ;[INF] 3, 1
 6573  6573 00FA0 RFCE20300              call    !!_SECTD_Glyph_Map                              ;[INF] 4, 3
 6574  6574                      ; line  1451 :     SECTD_Glyph_Map(4);
 6575  6575                      $DGL    0,26
 6576  6576 00FA4  300400                movw    ax,#04H ; 4                                     ;[INF] 3, 1
 6577  6577 00FA7 RFCE20300              call    !!_SECTD_Glyph_Map                              ;[INF] 4, 3
 6578  6578                      ; line  1452 :     SECTE_Glyph_Map(3);
 6579  6579                      $DGL    0,27
 6580  6580 00FAB  300300                movw    ax,#03H ; 3                                     ;[INF] 3, 1
 6581  6581 00FAE RFC720400              call    !!_SECTE_Glyph_Map                              ;[INF] 4, 3
 6582  6582                      ; line  1453 :     SECTE_Glyph_Map(4);
 6583  6583                      $DGL    0,28
 6584  6584 00FB2  300400                movw    ax,#04H ; 4                                     ;[INF] 3, 1
 6585  6585 00FB5 RFC720400              call    !!_SECTE_Glyph_Map                              ;[INF] 4, 3
 6586  6586                      ; line  1454 :     SECTE_Glyph_Map(5);
 6587  6587                      $DGL    0,29
 6588  6588 00FB9  300500                movw    ax,#05H ; 5                                     ;[INF] 3, 1
 6589  6589 00FBC RFC720400              call    !!_SECTE_Glyph_Map                              ;[INF] 4, 3
 6590  6590                      ; line  1455 :     SECTE_Glyph_Map(6);
 6591  6591                      $DGL    0,30
 6592  6592 00FC0  300600                movw    ax,#06H ; 6                                     ;[INF] 3, 1
 6593  6593 00FC3 RFC720400              call    !!_SECTE_Glyph_Map                              ;[INF] 4, 3
 6594  6594                      ; line  1456 : }
 6595  6595                      $DGL    0,31
 6596  6596 00FC7                ??ef_LCD_ON:
 6597  6597 00FC7  D7                    ret                                                     ;[INF] 1, 6
 6598  6598 00FC8                ??ee_LCD_ON:
 6599  6599                      ; line  1457 : /***************************************************************
 6600  6600                      ;              ********************************************************
 6601  6601                      ; line  1458 : End of function LCD_ON
 6602  6602                      ; line  1459 : ****************************************************************
 6603  6603                      ;              *******************************************************/
 6604  6604                      ; line  1460 : 
 6605  6605                      ; line  1461 : /***************************************************************
 6606  6606                      ;              ********************************************************
 6607  6607                      ; line  1462 : * Function Name: LCD_DISPLAY_ON
 6608  6608                      ; line  1463 : * Description  : Turns on all LCD segments.
 6609  6609                      ; line  1464 : * Arguments    : None
 6610  6610                      ; line  1465 : * Return Value : None
 6611  6611                      ; line  1466 : ****************************************************************
 6612  6612                      ;              *******************************************************/
 6613  6613                      ; line  1467 : void LCD_DISPLAY_ON (void)
 6614  6614                      ; line  1468 : {
 6615  6615 00FC8                _LCD_DISPLAY_ON:
 6616  6616                      $DGL    1,712
 6617  6617 00FC8                ??bf_LCD_DISPLAY_ON:
 6618  6618                      ; line  1469 :     SEG0 = 0x0f;
 6619  6619                      $DGL    0,2
 6620  6620 00FC8  CF00040F              mov     !SEG0,#0FH      ; 15                            ;[INF] 4, 1
 6621  6621                      ; line  1470 :     SEG1 = 0x0f;
 6622  6622                      $DGL    0,3
 6623  6623 00FCC  CF01040F              mov     !SEG1,#0FH      ; 15                            ;[INF] 4, 1
 6624  6624                      ; line  1471 :     SEG2 = 0x0f;
 6625  6625                      $DGL    0,4
 6626  6626 00FD0  CF02040F              mov     !SEG2,#0FH      ; 15                            ;[INF] 4, 1
 6627  6627                      ; line  1472 :     SEG3 = 0x0f;
 6628  6628                      $DGL    0,5
 6629  6629 00FD4  CF03040F              mov     !SEG3,#0FH      ; 15                            ;[INF] 4, 1
 6630  6630                      ; line  1473 :     SEG4 = 0x0f;
 6631  6631                      $DGL    0,6
 6632  6632 00FD8  CF04040F              mov     !SEG4,#0FH      ; 15                            ;[INF] 4, 1
 6633  6633                      ; line  1474 :     SEG5 = 0x0f;
 6634  6634                      $DGL    0,7
 6635  6635 00FDC  CF05040F              mov     !SEG5,#0FH      ; 15                            ;[INF] 4, 1
 6636  6636                      ; line  1475 :     SEG6 = 0x0f;
 6637  6637                      $DGL    0,8
 6638  6638 00FE0  CF06040F              mov     !SEG6,#0FH      ; 15                            ;[INF] 4, 1
 6639  6639                      ; line  1476 :     SEG7 = 0x0f;
 6640  6640                      $DGL    0,9
 6641  6641 00FE4  CF07040F              mov     !SEG7,#0FH      ; 15                            ;[INF] 4, 1
 6642  6642                      ; line  1477 :     SEG8 = 0x0f;
 6643  6643                      $DGL    0,10
 6644  6644 00FE8  CF08040F              mov     !SEG8,#0FH      ; 15                            ;[INF] 4, 1
 6645  6645                      ; line  1478 :     SEG9 = 0x0f;
 6646  6646                      $DGL    0,11
 6647  6647 00FEC  CF09040F              mov     !SEG9,#0FH      ; 15                            ;[INF] 4, 1
 6648  6648                      ; line  1479 :     SEG10 = 0x0f;
 6649  6649                      $DGL    0,12
 6650  6650 00FF0  CF0A040F              mov     !SEG10,#0FH     ; 15                            ;[INF] 4, 1
 6651  6651                      ; line  1480 :     SEG11 = 0x0f;
 6652  6652                      $DGL    0,13
 6653  6653 00FF4  CF0B040F              mov     !SEG11,#0FH     ; 15                            ;[INF] 4, 1
 6654  6654                      ; line  1481 :     SEG12 = 0x0f;
 6655  6655                      $DGL    0,14
 6656  6656 00FF8  CF0C040F              mov     !SEG12,#0FH     ; 15                            ;[INF] 4, 1
 6657  6657                      ; line  1482 :     SEG13 = 0x0f;
 6658  6658                      $DGL    0,15
 6659  6659 00FFC  CF0D040F              mov     !SEG13,#0FH     ; 15                            ;[INF] 4, 1
 6660  6660                      ; line  1483 :     SEG14 = 0x0f;
 6661  6661                      $DGL    0,16
 6662  6662 01000  CF0E040F              mov     !SEG14,#0FH     ; 15                            ;[INF] 4, 1
 6663  6663                      ; line  1484 :     SEG15 = 0x0f;
 6664  6664                      $DGL    0,17
 6665  6665 01004  CF0F040F              mov     !SEG15,#0FH     ; 15                            ;[INF] 4, 1
 6666  6666                      ; line  1485 :     SEG16 = 0x0f;
 6667  6667                      $DGL    0,18
 6668  6668 01008  CF10040F              mov     !SEG16,#0FH     ; 15                            ;[INF] 4, 1
 6669  6669                      ; line  1486 :     SEG17 = 0x0f;
 6670  6670                      $DGL    0,19
 6671  6671 0100C  CF11040F              mov     !SEG17,#0FH     ; 15                            ;[INF] 4, 1
 6672  6672                      ; line  1487 :     SEG18 = 0x0f;
 6673  6673                      $DGL    0,20
 6674  6674 01010  CF12040F              mov     !SEG18,#0FH     ; 15                            ;[INF] 4, 1
 6675  6675                      ; line  1488 :     SEG19 = 0x0f;
 6676  6676                      $DGL    0,21
 6677  6677 01014  CF13040F              mov     !SEG19,#0FH     ; 15                            ;[INF] 4, 1
 6678  6678                      ; line  1489 :     SEG20 = 0x0f;
 6679  6679                      $DGL    0,22
 6680  6680 01018  CF14040F              mov     !SEG20,#0FH     ; 15                            ;[INF] 4, 1
 6681  6681                      ; line  1490 :     SEG21 = 0x0f;
 6682  6682                      $DGL    0,23
 6683  6683 0101C  CF15040F              mov     !SEG21,#0FH     ; 15                            ;[INF] 4, 1
 6684  6684                      ; line  1491 :     SEG22 = 0x0f;
 6685  6685                      $DGL    0,24
 6686  6686 01020  CF16040F              mov     !SEG22,#0FH     ; 15                            ;[INF] 4, 1
 6687  6687                      ; line  1492 :     SEG23 = 0x0f;
 6688  6688                      $DGL    0,25
 6689  6689 01024  CF17040F              mov     !SEG23,#0FH     ; 15                            ;[INF] 4, 1
 6690  6690                      ; line  1493 :     SEG24 = 0x0f;
 6691  6691                      $DGL    0,26
 6692  6692 01028  CF18040F              mov     !SEG24,#0FH     ; 15                            ;[INF] 4, 1
 6693  6693                      ; line  1494 :     SEG25 = 0x0f;
 6694  6694                      $DGL    0,27
 6695  6695 0102C  CF19040F              mov     !SEG25,#0FH     ; 15                            ;[INF] 4, 1
 6696  6696                      ; line  1495 :     SEG26 = 0x0f;
 6697  6697                      $DGL    0,28
 6698  6698 01030  CF1B040F              mov     !SEG26,#0FH     ; 15                            ;[INF] 4, 1
 6699  6699                      ; line  1496 :     SEG27 = 0x0f;
 6700  6700                      $DGL    0,29
 6701  6701 01034  CF1C040F              mov     !SEG27,#0FH     ; 15                            ;[INF] 4, 1
 6702  6702                      ; line  1497 :     SEG28 = 0x0f;
 6703  6703                      $DGL    0,30
 6704  6704 01038  CF1D040F              mov     !SEG28,#0FH     ; 15                            ;[INF] 4, 1
 6705  6705                      ; line  1498 :     SEG29 = 0x0f;
 6706  6706                      $DGL    0,31
 6707  6707 0103C  CF1E040F              mov     !SEG29,#0FH     ; 15                            ;[INF] 4, 1
 6708  6708                      ; line  1499 :     SEG30 = 0x0f;
 6709  6709                      $DGL    0,32
 6710  6710 01040  CF1F040F              mov     !SEG30,#0FH     ; 15                            ;[INF] 4, 1
 6711  6711                      ; line  1500 :     SEG31 = 0x0f;
 6712  6712                      $DGL    0,33
 6713  6713 01044  CF20040F              mov     !SEG31,#0FH     ; 15                            ;[INF] 4, 1
 6714  6714                      ; line  1501 :     SEG32 = 0x0f;
 6715  6715                      $DGL    0,34
 6716  6716 01048  CF21040F              mov     !SEG32,#0FH     ; 15                            ;[INF] 4, 1
 6717  6717                      ; line  1502 :     SEG33 = 0x0f;
 6718  6718                      $DGL    0,35
 6719  6719 0104C  CF22040F              mov     !SEG33,#0FH     ; 15                            ;[INF] 4, 1
 6720  6720                      ; line  1503 :     SEG34 = 0x0f;
 6721  6721                      $DGL    0,36
 6722  6722 01050  CF23040F              mov     !SEG34,#0FH     ; 15                            ;[INF] 4, 1
 6723  6723                      ; line  1504 :     SEG35 = 0x0f;
 6724  6724                      $DGL    0,37
 6725  6725 01054  CF24040F              mov     !SEG35,#0FH     ; 15                            ;[INF] 4, 1
 6726  6726                      ; line  1505 :     SEG36 = 0x0f;
 6727  6727                      $DGL    0,38
 6728  6728 01058  CF25040F              mov     !SEG36,#0FH     ; 15                            ;[INF] 4, 1
 6729  6729                      ; line  1506 :     SEG37 = 0x0f;
 6730  6730                      $DGL    0,39
 6731  6731 0105C  CF26040F              mov     !SEG37,#0FH     ; 15                            ;[INF] 4, 1
 6732  6732                      ; line  1507 :     SEG38 = 0x0f;
 6733  6733                      $DGL    0,40
 6734  6734 01060  CF27040F              mov     !SEG38,#0FH     ; 15                            ;[INF] 4, 1
 6735  6735                      ; line  1508 : }
 6736  6736                      $DGL    0,41
 6737  6737 01064                ??ef_LCD_DISPLAY_ON:
 6738  6738 01064  D7                    ret                                                     ;[INF] 1, 6
 6739  6739 01065                ??ee_LCD_DISPLAY_ON:
 6740  6740                      ; line  1509 : /***************************************************************
 6741  6741                      ;              ********************************************************
 6742  6742                      ; line  1510 : End of function LCD_DISPLAY_ON
 6743  6743                      ; line  1511 : ****************************************************************
 6744  6744                      ;              *******************************************************/
 6745  6745                      ; line  1512 : 
 6746  6746                      ; line  1513 : /***************************************************************
 6747  6747                      ;              ********************************************************
 6748  6748                      ; line  1514 : * Function Name: LCD_DISPLAY_OFF
 6749  6749                      ; line  1515 : * Description  : Turns off all segments.
 6750  6750                      ; line  1516 : * Arguments    : None
 6751  6751                      ; line  1517 : * Return Value : None
 6752  6752                      ; line  1518 : ****************************************************************
 6753  6753                      ;              *******************************************************/
 6754  6754                      ; line  1519 : void LCD_DISPLAY_OFF (void)
 6755  6755                      ; line  1520 : {
 6756  6756 01065                _LCD_DISPLAY_OFF:
 6757  6757                      $DGL    1,718
 6758  6758 01065                ??bf_LCD_DISPLAY_OFF:
 6759  6759                      ; line  1521 :     SEG0 = 0x00;
 6760  6760                      $DGL    0,2
 6761  6761 01065  F50004                clrb    !SEG0                                           ;[INF] 3, 1
 6762  6762                      ; line  1522 :     SEG1 = 0x00;
 6763  6763                      $DGL    0,3
 6764  6764 01068  F50104                clrb    !SEG1                                           ;[INF] 3, 1
 6765  6765                      ; line  1523 :     SEG2 = 0x00;
 6766  6766                      $DGL    0,4
 6767  6767 0106B  F50204                clrb    !SEG2                                           ;[INF] 3, 1
 6768  6768                      ; line  1524 :     SEG3 = 0x00;
 6769  6769                      $DGL    0,5
 6770  6770 0106E  F50304                clrb    !SEG3                                           ;[INF] 3, 1
 6771  6771                      ; line  1525 :     SEG4 = 0x00;
 6772  6772                      $DGL    0,6
 6773  6773 01071  F50404                clrb    !SEG4                                           ;[INF] 3, 1
 6774  6774                      ; line  1526 :     SEG5 = 0x00;
 6775  6775                      $DGL    0,7
 6776  6776 01074  F50504                clrb    !SEG5                                           ;[INF] 3, 1
 6777  6777                      ; line  1527 :     SEG6 = 0x00;
 6778  6778                      $DGL    0,8
 6779  6779 01077  F50604                clrb    !SEG6                                           ;[INF] 3, 1
 6780  6780                      ; line  1528 :     SEG7 = 0x00;
 6781  6781                      $DGL    0,9
 6782  6782 0107A  F50704                clrb    !SEG7                                           ;[INF] 3, 1
 6783  6783                      ; line  1529 :     SEG8 = 0x00;
 6784  6784                      $DGL    0,10
 6785  6785 0107D  F50804                clrb    !SEG8                                           ;[INF] 3, 1
 6786  6786                      ; line  1530 :     SEG9 = 0x00;
 6787  6787                      $DGL    0,11
 6788  6788 01080  F50904                clrb    !SEG9                                           ;[INF] 3, 1
 6789  6789                      ; line  1531 :     SEG10 = 0x00;
 6790  6790                      $DGL    0,12
 6791  6791 01083  F50A04                clrb    !SEG10                                          ;[INF] 3, 1
 6792  6792                      ; line  1532 :     SEG11 = 0x00;
 6793  6793                      $DGL    0,13
 6794  6794 01086  F50B04                clrb    !SEG11                                          ;[INF] 3, 1
 6795  6795                      ; line  1533 :     SEG12 = 0x00;
 6796  6796                      $DGL    0,14
 6797  6797 01089  F50C04                clrb    !SEG12                                          ;[INF] 3, 1
 6798  6798                      ; line  1534 :     SEG13 = 0x00;
 6799  6799                      $DGL    0,15
 6800  6800 0108C  F50D04                clrb    !SEG13                                          ;[INF] 3, 1
 6801  6801                      ; line  1535 :     SEG14 = 0x00;
 6802  6802                      $DGL    0,16
 6803  6803 0108F  F50E04                clrb    !SEG14                                          ;[INF] 3, 1
 6804  6804                      ; line  1536 :     SEG15 = 0x00;
 6805  6805                      $DGL    0,17
 6806  6806 01092  F50F04                clrb    !SEG15                                          ;[INF] 3, 1
 6807  6807                      ; line  1537 :     SEG16 = 0x00;
 6808  6808                      $DGL    0,18
 6809  6809 01095  F51004                clrb    !SEG16                                          ;[INF] 3, 1
 6810  6810                      ; line  1538 :     SEG17 = 0x00;
 6811  6811                      $DGL    0,19
 6812  6812 01098  F51104                clrb    !SEG17                                          ;[INF] 3, 1
 6813  6813                      ; line  1539 :     SEG18 = 0x00;
 6814  6814                      $DGL    0,20
 6815  6815 0109B  F51204                clrb    !SEG18                                          ;[INF] 3, 1
 6816  6816                      ; line  1540 :     SEG19 = 0x00;
 6817  6817                      $DGL    0,21
 6818  6818 0109E  F51304                clrb    !SEG19                                          ;[INF] 3, 1
 6819  6819                      ; line  1541 :     SEG20 = 0x00;
 6820  6820                      $DGL    0,22
 6821  6821 010A1  F51404                clrb    !SEG20                                          ;[INF] 3, 1
 6822  6822                      ; line  1542 :     SEG21 = 0x00;
 6823  6823                      $DGL    0,23
 6824  6824 010A4  F51504                clrb    !SEG21                                          ;[INF] 3, 1
 6825  6825                      ; line  1543 :     SEG22 = 0x00;
 6826  6826                      $DGL    0,24
 6827  6827 010A7  F51604                clrb    !SEG22                                          ;[INF] 3, 1
 6828  6828                      ; line  1544 :     SEG23 = 0x00;
 6829  6829                      $DGL    0,25
 6830  6830 010AA  F51704                clrb    !SEG23                                          ;[INF] 3, 1
 6831  6831                      ; line  1545 :     SEG24 = 0x00;
 6832  6832                      $DGL    0,26
 6833  6833 010AD  F51804                clrb    !SEG24                                          ;[INF] 3, 1
 6834  6834                      ; line  1546 :     SEG25 = 0x00;
 6835  6835                      $DGL    0,27
 6836  6836 010B0  F51904                clrb    !SEG25                                          ;[INF] 3, 1
 6837  6837                      ; line  1547 :     SEG26 = 0x00;
 6838  6838                      $DGL    0,28
 6839  6839 010B3  F51B04                clrb    !SEG26                                          ;[INF] 3, 1
 6840  6840                      ; line  1548 :     SEG27 = 0x00;
 6841  6841                      $DGL    0,29
 6842  6842 010B6  F51C04                clrb    !SEG27                                          ;[INF] 3, 1
 6843  6843                      ; line  1549 :     SEG28 = 0x00;
 6844  6844                      $DGL    0,30
 6845  6845 010B9  F51D04                clrb    !SEG28                                          ;[INF] 3, 1
 6846  6846                      ; line  1550 :     SEG29 = 0x00;
 6847  6847                      $DGL    0,31
 6848  6848 010BC  F51E04                clrb    !SEG29                                          ;[INF] 3, 1
 6849  6849                      ; line  1551 :     SEG30 = 0x00;
 6850  6850                      $DGL    0,32
 6851  6851 010BF  F51F04                clrb    !SEG30                                          ;[INF] 3, 1
 6852  6852                      ; line  1552 :     SEG31 = 0x00;
 6853  6853                      $DGL    0,33
 6854  6854 010C2  F52004                clrb    !SEG31                                          ;[INF] 3, 1
 6855  6855                      ; line  1553 :     SEG32 = 0x00;
 6856  6856                      $DGL    0,34
 6857  6857 010C5  F52104                clrb    !SEG32                                          ;[INF] 3, 1
 6858  6858                      ; line  1554 :     SEG33 = 0x00;
 6859  6859                      $DGL    0,35
 6860  6860 010C8  F52204                clrb    !SEG33                                          ;[INF] 3, 1
 6861  6861                      ; line  1555 :     SEG34 = 0x00;
 6862  6862                      $DGL    0,36
 6863  6863 010CB  F52304                clrb    !SEG34                                          ;[INF] 3, 1
 6864  6864                      ; line  1556 :     SEG35 = 0x00;
 6865  6865                      $DGL    0,37
 6866  6866 010CE  F52404                clrb    !SEG35                                          ;[INF] 3, 1
 6867  6867                      ; line  1557 :     SEG36 = 0x00;
 6868  6868                      $DGL    0,38
 6869  6869 010D1  F52504                clrb    !SEG36                                          ;[INF] 3, 1
 6870  6870                      ; line  1558 :     SEG37 = 0x00;
 6871  6871                      $DGL    0,39
 6872  6872 010D4  F52604                clrb    !SEG37                                          ;[INF] 3, 1
 6873  6873                      ; line  1559 :     SEG38 = 0x00;
 6874  6874                      $DGL    0,40
 6875  6875 010D7  F52704                clrb    !SEG38                                          ;[INF] 3, 1
 6876  6876                      ; line  1560 : }
 6877  6877                      $DGL    0,41
 6878  6878 010DA                ??ef_LCD_DISPLAY_OFF:
 6879  6879 010DA  D7                    ret                                                     ;[INF] 1, 6
 6880  6880 010DB                ??ee_LCD_DISPLAY_OFF:
 6881  6881                      
 6882  6882 -----                @@CODE  CSEG    BASE
 6883  6883                      
 6884  6884 -----                @@BASE  CSEG    BASE
 6885  6885                              END
 6886  6886                      
 6887  6887                      
 6888  6888                      ; *** Code Information ***
 6889  6889                      ;
 6890  6890                      ; $FILE C:\Users\nguye\Downloads\dtmf_reader_rl78\RSK_Module_test\RSKRL78L13\AD
 6891  6891                      ;       C_Repeat\cg_src\lcd_panel.c
 6892  6892                      ;
 6893  6893                      ; $FUNC Init_Display_Panel(63)
 6894  6894                      ;       void=(void)
 6895  6895                      ;       CODE SIZE= 33 bytes, CLOCK_SIZE= 24 clocks, STACK_SIZE= 4 bytes
 6896  6896                      ;
 6897  6897                      ; $CALL Init_Maps(65)
 6898  6898                      ;       void=(void)
 6899  6899                      ;
 6900  6900                      ; $CALL Clear_Display(68)
 6901  6901                      ;       void=(void)
 6902  6902                      ;
 6903  6903                      ; $CALL R_LCD_Start(77)
 6904  6904                      ;       void=(void)
 6905  6905                      ;
 6906  6906                      ; $CALL R_LCD_Voltage_On(80)
 6907  6907                      ;       void=(void)
 6908  6908                      ;
 6909  6909                      ; $FUNC Validate_Input(104)
 6910  6910                      ;       bc=(unsigned char input:x, pointer output:[sp+4])
 6911  6911                      ;       CODE SIZE= 294 bytes, CLOCK_SIZE= 265 clocks, STACK_SIZE= 4 bytes
 6912  6912                      ;
 6913  6913                      ; $FUNC SECTA_Glyph_Map(227)
 6914  6914                      ;       void=(unsigned char glyph:x, unsigned short digit:[sp+4])
 6915  6915                      ;       CODE SIZE= 161 bytes, CLOCK_SIZE= 122 clocks, STACK_SIZE= 8 bytes
 6916  6916                      ;
 6917  6917                      ; $FUNC SECTB_Glyph_Map(314)
 6918  6918                      ;       void=(unsigned char glyph:x, unsigned short digit:[sp+4])
 6919  6919                      ;       CODE SIZE= 269 bytes, CLOCK_SIZE= 192 clocks, STACK_SIZE= 8 bytes
 6920  6920                      ;
 6921  6921                      ; $FUNC SECTC_Glyph_Map(471)
 6922  6922                      ;       void=(unsigned char glyph:x, unsigned short digit:[sp+4])
 6923  6923                      ;       CODE SIZE= 237 bytes, CLOCK_SIZE= 163 clocks, STACK_SIZE= 12 bytes
 6924  6924                      ;
 6925  6925                      ; $FUNC SECTD_Glyph_Map(577)
 6926  6926                      ;       void=(unsigned char level:x)
 6927  6927                      ;       CODE SIZE= 144 bytes, CLOCK_SIZE= 77 clocks, STACK_SIZE= 4 bytes
 6928  6928                      ;
 6929  6929                      ; $FUNC SECTE_Glyph_Map(642)
 6930  6930                      ;       void=(unsigned short level:ax)
 6931  6931                      ;       CODE SIZE= 314 bytes, CLOCK_SIZE= 180 clocks, STACK_SIZE= 8 bytes
 6932  6932                      ;
 6933  6933                      ; $FUNC SECTF_Glyph_Map(749)
 6934  6934                      ;       void=(unsigned char day:x)
 6935  6935                      ;       CODE SIZE= 403 bytes, CLOCK_SIZE= 179 clocks, STACK_SIZE= 4 bytes
 6936  6936                      ;
 6937  6937                      ; $FUNC Symbol_Map(875)
 6938  6938                      ;       bc=(unsigned short input:ax)
 6939  6939                      ;       CODE SIZE= 659 bytes, CLOCK_SIZE= 395 clocks, STACK_SIZE= 6 bytes
 6940  6940                      ;
 6941  6941                      ; $FUNC Clear_Display(1119)
 6942  6942                      ;       void=(void)
 6943  6943                      ;       CODE SIZE= 36 bytes, CLOCK_SIZE= 30 clocks, STACK_SIZE= 6 bytes
 6944  6944                      ;
 6945  6945                      ; $FUNC Init_Maps(1147)
 6946  6946                      ;       void=(void)
 6947  6947                      ;       CODE SIZE= 737 bytes, CLOCK_SIZE= 314 clocks, STACK_SIZE= 0 bytes
 6948  6948                      ;
 6949  6949                      ; $FUNC Display_Panel_String(1257)
 6950  6950                      ;       void=(unsigned char position:x, pointer string:[sp+4])
 6951  6951                      ;       CODE SIZE= 418 bytes, CLOCK_SIZE= 324 clocks, STACK_SIZE= 18 bytes
 6952  6952                      ;
 6953  6953                      ; $CALL Validate_Input(1280)
 6954  6954                      ;       bc=(int:ax, pointer:[sp+4])
 6955  6955                      ;
 6956  6956                      ; $CALL SECTB_Glyph_Map(1285)
 6957  6957                      ;       void=(int:ax, unsigned short:[sp+4])
 6958  6958                      ;
 6959  6959                      ; $CALL Validate_Input(1299)
 6960  6960                      ;       bc=(int:ax, pointer:[sp+4])
 6961  6961                      ;
 6962  6962                      ; $CALL SECTC_Glyph_Map(1305)
 6963  6963                      ;       void=(int:ax, unsigned short:[sp+4])
 6964  6964                      ;
 6965  6965                      ; $CALL Validate_Input(1321)
 6966  6966                      ;       bc=(int:ax, pointer:[sp+4])
 6967  6967                      ;
 6968  6968                      ; $CALL SECTA_Glyph_Map(1329)
 6969  6969                      ;       void=(int:ax, unsigned short:[sp+4])
 6970  6970                      ;
 6971  6971                      ; $CALL SECTA_Glyph_Map(1334)
 6972  6972                      ;       void=(int:ax, unsigned short:[sp+4])
 6973  6973                      ;
 6974  6974                      ; $CALL Validate_Input(1349)
 6975  6975                      ;       bc=(int:ax, pointer:[sp+4])
 6976  6976                      ;
 6977  6977                      ; $CALL SECTF_Glyph_Map(1355)
 6978  6978                      ;       void=(int:ax)
 6979  6979                      ;
 6980  6980                      ; $CALL Symbol_Map(1379)
 6981  6981                      ;       bc=(unsigned short:ax)
 6982  6982                      ;
 6983  6983                      ; $FUNC Display_Panel_Delay(1405)
 6984  6984                      ;       void=(unsigned long units:ax,bc)
 6985  6985                      ;       CODE SIZE= 64 bytes, CLOCK_SIZE= 49 clocks, STACK_SIZE= 14 bytes
 6986  6986                      ;
 6987  6987                      ; $FUNC LCD_ON(1426)
 6988  6988                      ;       void=(void)
 6989  6989                      ;       CODE SIZE= 271 bytes, CLOCK_SIZE= 164 clocks, STACK_SIZE= 6 bytes
 6990  6990                      ;
 6991  6991                      ; $CALL Display_Panel_String(1427)
 6992  6992                      ;       void=(int:ax, pointer:[sp+4])
 6993  6993                      ;
 6994  6994                      ; $CALL Display_Panel_String(1428)
 6995  6995                      ;       void=(int:ax, pointer:[sp+4])
 6996  6996                      ;
 6997  6997                      ; $CALL Display_Panel_String(1429)
 6998  6998                      ;       void=(int:ax, pointer:[sp+4])
 6999  6999                      ;
 7000  7000                      ; $CALL Display_Panel_String(1432)
 7001  7001                      ;       void=(int:ax, pointer:[sp+4])
 7002  7002                      ;
 7003  7003                      ; $CALL Display_Panel_String(1433)
 7004  7004                      ;       void=(int:ax, pointer:[sp+4])
 7005  7005                      ;
 7006  7006                      ; $CALL Display_Panel_String(1434)
 7007  7007                      ;       void=(int:ax, pointer:[sp+4])
 7008  7008                      ;
 7009  7009                      ; $CALL Display_Panel_String(1435)
 7010  7010                      ;       void=(int:ax, pointer:[sp+4])
 7011  7011                      ;
 7012  7012                      ; $CALL Display_Panel_String(1436)
 7013  7013                      ;       void=(int:ax, pointer:[sp+4])
 7014  7014                      ;
 7015  7015                      ; $CALL Display_Panel_String(1437)
 7016  7016                      ;       void=(int:ax, pointer:[sp+4])
 7017  7017                      ;
 7018  7018                      ; $CALL Display_Panel_String(1438)
 7019  7019                      ;       void=(int:ax, pointer:[sp+4])
 7020  7020                      ;
 7021  7021                      ; $CALL Display_Panel_String(1439)
 7022  7022                      ;       void=(int:ax, pointer:[sp+4])
 7023  7023                      ;
 7024  7024                      ; $CALL Display_Panel_String(1440)
 7025  7025                      ;       void=(int:ax, pointer:[sp+4])
 7026  7026                      ;
 7027  7027                      ; $CALL Display_Panel_String(1441)
 7028  7028                      ;       void=(int:ax, pointer:[sp+4])
 7029  7029                      ;
 7030  7030                      ; $CALL Display_Panel_String(1442)
 7031  7031                      ;       void=(int:ax, pointer:[sp+4])
 7032  7032                      ;
 7033  7033                      ; $CALL Display_Panel_String(1443)
 7034  7034                      ;       void=(int:ax, pointer:[sp+4])
 7035  7035                      ;
 7036  7036                      ; $CALL Display_Panel_String(1444)
 7037  7037                      ;       void=(int:ax, pointer:[sp+4])
 7038  7038                      ;
 7039  7039                      ; $CALL Display_Panel_String(1445)
 7040  7040                      ;       void=(int:ax, pointer:[sp+4])
 7041  7041                      ;
 7042  7042                      ; $CALL Display_Panel_String(1446)
 7043  7043                      ;       void=(int:ax, pointer:[sp+4])
 7044  7044                      ;
 7045  7045                      ; $CALL SECTD_Glyph_Map(1448)
 7046  7046                      ;       void=(int:ax)
 7047  7047                      ;
 7048  7048                      ; $CALL SECTD_Glyph_Map(1449)
 7049  7049                      ;       void=(int:ax)
 7050  7050                      ;
 7051  7051                      ; $CALL SECTD_Glyph_Map(1450)
 7052  7052                      ;       void=(int:ax)
 7053  7053                      ;
 7054  7054                      ; $CALL SECTD_Glyph_Map(1451)
 7055  7055                      ;       void=(int:ax)
 7056  7056                      ;
 7057  7057                      ; $CALL SECTE_Glyph_Map(1452)
 7058  7058                      ;       void=(unsigned short:ax)
 7059  7059                      ;
 7060  7060                      ; $CALL SECTE_Glyph_Map(1453)
 7061  7061                      ;       void=(unsigned short:ax)
 7062  7062                      ;
 7063  7063                      ; $CALL SECTE_Glyph_Map(1454)
 7064  7064                      ;       void=(unsigned short:ax)
 7065  7065                      ;
 7066  7066                      ; $CALL SECTE_Glyph_Map(1455)
 7067  7067                      ;       void=(unsigned short:ax)
 7068  7068                      ;
 7069  7069                      ; $FUNC LCD_DISPLAY_ON(1468)
 7070  7070                      ;       void=(void)
 7071  7071                      ;       CODE SIZE= 157 bytes, CLOCK_SIZE= 45 clocks, STACK_SIZE= 0 bytes
 7072  7072                      ;
 7073  7073                      ; $FUNC LCD_DISPLAY_OFF(1520)
 7074  7074                      ;       void=(void)
 7075  7075                      ;       CODE SIZE= 118 bytes, CLOCK_SIZE= 45 clocks, STACK_SIZE= 0 bytes
 7076  7076                      
 7077  7077                      ; Target chip : R5F10WMG
 7078  7078                      ; Device file : V1.00 

Segment informations:

ADRS  LEN      NAME

00000 00000H.0 @@BITS
00000 000BCH   @@CNST
00000 00000H   @@R_INIT
00000 00000H   @@INIT
00000 00144H   @@DATA
00000 00000H   @@R_INIS
00000 00000H   @@INIS
00000 00000H   @@DATS
00000 00000H   @@CNSTL
00000 00000H   @@RLINIT
00000 00000H   @@INITL
00000 00000H   @@DATAL
00000 00000H   @@CALT
00000 010DBH   @@CODEL
00000 00000H   @@CODE
00000 00000H   @@BASE

 Target chip : R5F10WMG
 Device file : V1.00
Assembly complete,     0 error(s) and     0 warning(s) found. (    0)
