


78K0R Assembler V1.80                                                                                    Date: 5 Jun 2021 Page:   1



Command:  -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\Device\RL78\Devicefile Debug\r_cg_adc_user.asm -_msgoff -
          pDebug -oDebug -zs
Para-file:
In-file:  Debug\r_cg_adc_user.asm
Obj-file: Debug\r_cg_adc_user.rel
Prn-file: Debug\r_cg_adc_user.prn

      Assemble list

 ALNO  STNO ADRS   OBJECT   M I  SOURCE STATEMENT

    1     1                      ; 78K0R C Compiler V2.60 Assembler Source        Date: 5 Jun 2021 Time:10:38:21
    2     2                      
    3     3                      ; Command   : -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\
    4     4                      ;             Device\RL78\Devicefile ..\RSKRL78L13\ADC_Repeat\cg_src\r_cg_adc_u
    5     5                      ;             ser.c -oDebug -_msgoff -nq -i..\RSKRL78L13\ADC_Repeat\cg_src -v -
    6     6                      ;             w2 -zps -mm -mi0 -saDebug -li -no -g2
    7     7                      ; In-file   : ..\RSKRL78L13\ADC_Repeat\cg_src\r_cg_adc_user.c
    8     8                      ; Asm-file  : Debug\r_cg_adc_user.asm
    9     9                      ; Para-file : 
   10    10                      
   11    11                      $PROCESSOR(F10WMG)
   12    12                      $DEBUG
   13    13                      $NODEBUGA
   14    14                      $KANJICODE SJIS
   15    15                      $TOL_INF        03FH, 0260H, 00H, 04000H, 00H, 00H, 00H
   16    16                      
   17    17                      $DGS    FIL_NAM, .file,         01BH,   0FFFEH, 03FH,   067H,   01H,    00H
   18    18                      $DGS    AUX_FIL, r_cg_adc_user.c
   19    19                      $DGS    MOD_NAM, r_cg_adc_user, 00H,    0FFFEH, 00H,    077H,   00H,    00H
   20    20                      $DGS    SEC_NAM, @@BITS,        U,      U,      00H,    078H,   00H,    00H
   21    21                      $DGS    SEC_NAM, @@CNST,        U,      U,      00H,    078H,   00H,    00H
   22    22                      $DGS    SEC_NAM, @@R_INIT,      U,      U,      00H,    078H,   00H,    00H
   23    23                      $DGS    SEC_NAM, @@INIT,        U,      U,      00H,    078H,   00H,    00H
   24    24                      $DGS    SEC_NAM, @@DATA,        U,      U,      00H,    078H,   00H,    00H
   25    25                      $DGS    SEC_NAM, @@R_INIS,      U,      U,      00H,    078H,   00H,    00H
   26    26                      $DGS    SEC_NAM, @@INIS,        U,      U,      00H,    078H,   00H,    00H
   27    27                      $DGS    SEC_NAM, @@DATS,        U,      U,      00H,    078H,   00H,    00H
   28    28                      $DGS    SEC_NAM, @@CNSTL,       U,      U,      00H,    078H,   00H,    00H
   29    29                      $DGS    SEC_NAM, @@RLINIT,      U,      U,      00H,    078H,   00H,    00H
   30    30                      $DGS    SEC_NAM, @@INITL,       U,      U,      00H,    078H,   00H,    00H
   31    31                      $DGS    SEC_NAM, @@DATAL,       U,      U,      00H,    078H,   00H,    00H
   32    32                      $DGS    SEC_NAM, @@CALT,        U,      U,      00H,    078H,   00H,    00H
   33    33                      $DGS    SEC_NAM, @@CODE,        U,      U,      00H,    078H,   00H,    00H
   34    34                      $DGS    SEC_NAM, @@CODEL,       U,      U,      00H,    078H,   00H,    00H
   35    35                      $DGS    SEC_NAM, @@BASE,        U,      U,      00H,    078H,   00H,    00H
   36    36                      $DGS    SEC_NAM, @@VECT38,      U,      U,      00H,    078H,   00H,    00H
   37    37                      $DGS    STA_SYM, _r_adc_interrupt,      U,      U,      0E001H, 03H,    01H,    02H
   38    38                      $DGS    AUX_FUN, 00H,           U,      U,      01BH,   00H,    00H
   39    39                      $DGS    BEG_FUN, ??bf_r_adc_interrupt,  U,      U,      00H,    065H,   01H,    00H
   40    40                      $DGS    AUX_BEG, 043H,          018H,   01BH
   41    41                      $DGS    AUT_VAR, _buffer,       00H,    0FFFFH, 0DH,    01H,    00H,    00H
   42    42                      $DGS    END_FUN, ??ef_r_adc_interrupt,  U,      U,      00H,    065H,   01H,    00H
   43    43                      $DGS    AUX_END, 0DH
   44    44                      $DGS    GLV_SYM, _g_adc_result, U,      U,      0100DH, 026H,   00H,    00H
   45    45                      $DGS    GLV_SYM, _@vect38,      U,      U,      00H,    026H,   00H,    00H
   46    46                      $DGS    GLV_SYM, _@RTARG6,      U,      U,      00H,    02H,    00H,    00H
   47    47                      $DGS    GLV_SYM, _@RTARG4,      U,      U,      00H,    02H,    00H,    00H
   48    48                      $DGS    GLV_SYM, _@RTARG2,      U,      U,      00H,    02H,    00H,    00H
   49    49                      $DGS    GLV_SYM, _@RTARG0,      U,      U,      00H,    02H,    00H,    00H
   50    50                      $DGS    GLV_SYM, _@SEGDE,       U,      U,      00H,    02H,    00H,    00H
   51    51                      $DGS    GLV_SYM, _@SEGAX,       U,      U,      00H,    02H,    00H,    00H
   52    52                      $DGS    GLV_SYM, _R_ADC_Get_Result,     U,      U,      01H,    02H,    01H,    02H
   53    53                      $DGS    AUX_FUN, 00H,           U,      U,      00H,    01H,    00H
   54    54                      
   55    55                              EXTRN   _@RTARG6
   56    56                              EXTRN   _@RTARG4
   57    57                              EXTRN   _@RTARG2
   58    58                              EXTRN   _@RTARG0
   59    59                              EXTRN   _@SEGDE
   60    60                              EXTRN   _@SEGAX
   61    61                              EXTRN   _R_ADC_Get_Result
   62    62                              PUBLIC  _g_adc_result
   63    63                              PUBLIC  _@vect38
   64    64                      
   65    65 -----                @@BITS  BSEG
   66    66                      
   67    67 -----                @@CNST  CSEG    MIRRORP
   68    68                      
   69    69 -----                @@R_INIT        CSEG    UNIT64KP
   70    70                      
   71    71 -----                @@INIT  DSEG    BASEP
   72    72                      
   73    73 -----                @@DATA  DSEG    BASEP
   74    74 00000                _g_adc_result:  DS      (2)
   75    75                      
   76    76 -----                @@R_INIS        CSEG    UNIT64KP
   77    77                      
   78    78 -----                @@INIS  DSEG    SADDRP
   79    79                      
   80    80 -----                @@DATS  DSEG    SADDRP
   81    81                      
   82    82 -----                @@CNSTL CSEG    PAGE64KP
   83    83                      
   84    84 -----                @@RLINIT        CSEG    UNIT64KP
   85    85                      
   86    86 -----                @@INITL DSEG    UNIT64KP
   87    87                      
   88    88 -----                @@DATAL DSEG    UNIT64KP
   89    89                      
   90    90 -----                @@CALT  CSEG    CALLT0
   91    91                      
   92    92                      ; line     1 : /***************************************************************
   93    93                      ;              ********************************************************
   94    94                      ; line     2 : * DISCLAIMER
   95    95                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
   96    96                      ;              nd is only 
   97    97                      ; line     4 : * intended for use with Renesas products. No other uses are auth
   98    98                      ;              orized. This 
   99    99                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  100   100                      ;              otected under 
  101   101                      ; line     6 : * all applicable laws, including copyright laws.
  102   102                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  103   103                      ;              IES REGARDING 
  104   104                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  105   105                      ;              G BUT NOT 
  106   106                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  107   107                      ;              ULAR PURPOSE 
  108   108                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  109   109                      ;              AIMED.
  110   110                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  111   111                      ;               RENESAS 
  112   112                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  113   113                      ;              ALL BE LIABLE 
  114   114                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  115   115                      ;               DAMAGES FOR 
  116   116                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  117   117                      ;              FILIATES HAVE 
  118   118                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  119   119                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  120   120                      ;               this software 
  121   121                      ; line    17 : * and to discontinue the availability of this software.  By usin
  122   122                      ;              g this software, 
  123   123                      ; line    18 : * you agree to the additional terms and conditions found by acce
  124   124                      ;              ssing the 
  125   125                      ; line    19 : * following link:
  126   126                      ; line    20 : * http://www.renesas.com/disclaimer
  127   127                      ; line    21 : *
  128   128                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  129   129                      ;               reserved.
  130   130                      ; line    23 : ****************************************************************
  131   131                      ;              *******************************************************/
  132   132                      ; line    24 : 
  133   133                      ; line    25 : /***************************************************************
  134   134                      ;              ********************************************************
  135   135                      ; line    26 : * File Name    : r_cg_macrodriver.h
  136   136                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  137   137                      ;              ]
  138   138                      ; line    28 : * Device(s)    : R5F10WMG
  139   139                      ; line    29 : * Tool-Chain   : CA78K0R
  140   140                      ; line    30 : * Description  : This file implements general head file.
  141   141                      ; line    31 : * Creation Date: 05-Jun-21
  142   142                      ; line    32 : ****************************************************************
  143   143                      ;              *******************************************************/
  144   144                      ; line    33 : #ifndef MODULEID_H
  145   145                      ; line    34 : #define MODULEID_H
  146   146                      ; line    35 : /***************************************************************
  147   147                      ;              ********************************************************
  148   148                      ; line    36 : Includes
  149   149                      ; line    37 : ****************************************************************
  150   150                      ;              *******************************************************/
  151   151                      ; line    38 : #pragma sfr
  152   152                      ; line    39 : #pragma DI
  153   153                      ; line    40 : #pragma EI
  154   154                      ; line    41 : #pragma NOP
  155   155                      ; line    42 : #pragma HALT
  156   156                      ; line    43 : #pragma STOP
  157   157                      ; line    44 : 
  158   158                      ; line    45 : /***************************************************************
  159   159                      ;              ********************************************************
  160   160                      ; line    46 : Macro definitions (Register bit)
  161   161                      ; line    47 : ****************************************************************
  162   162                      ;              *******************************************************/
  163   163                      ; line    48 : 
  164   164                      ; line    49 : /***************************************************************
  165   165                      ;              ********************************************************
  166   166                      ; line    50 : Macro definitions
  167   167                      ; line    51 : ****************************************************************
  168   168                      ;              *******************************************************/
  169   169                      ; line    52 : #ifndef __TYPEDEF__
  170   170                      ; line    53 : /* Status list definition */
  171   171                      ; line    54 : #define MD_STATUSBASE        (0x00U)
  172   172                      ; line    55 : #define MD_OK                (MD_STATUSBASE + 0x00U) /* register
  173   173                      ;               setting OK */
  174   174                      ; line    56 : #define MD_SPT               (MD_STATUSBASE + 0x01U) /* IIC stop
  175   175                      ;               */
  176   176                      ; line    57 : #define MD_NACK              (MD_STATUSBASE + 0x02U) /* IIC no A
  177   177                      ;              CK */
  178   178                      ; line    58 : #define MD_BUSY1             (MD_STATUSBASE + 0x03U) /* busy 1 *
  179   179                      ;              /
  180   180                      ; line    59 : #define MD_BUSY2             (MD_STATUSBASE + 0x04U) /* busy 2 *
  181   181                      ;              /
  182   182                      ; line    60 : 
  183   183                      ; line    61 : /* Error list definition */
  184   184                      ; line    62 : #define MD_ERRORBASE         (0x80U)
  185   185                      ; line    63 : #define MD_ERROR             (MD_ERRORBASE + 0x00U)  /* error */
  186   186                      ; line    64 : #define MD_ARGERROR          (MD_ERRORBASE + 0x01U)  /* error ag
  187   187                      ;              rument input error */
  188   188                      ; line    65 : #define MD_ERROR1            (MD_ERRORBASE + 0x02U)  /* error 1 
  189   189                      ;              */
  190   190                      ; line    66 : #define MD_ERROR2            (MD_ERRORBASE + 0x03U)  /* error 2 
  191   191                      ;              */
  192   192                      ; line    67 : #define MD_ERROR3            (MD_ERRORBASE + 0x04U)  /* error 3 
  193   193                      ;              */
  194   194                      ; line    68 : #define MD_ERROR4            (MD_ERRORBASE + 0x05U)  /* error 4 
  195   195                      ;              */
  196   196                      ; line    69 : #define MD_ERROR5            (MD_ERRORBASE + 0x06U)  /* error 5 
  197   197                      ;              */
  198   198                      ; line    70 : #endif
  199   199                      ; line    71 : 
  200   200                      ; line    72 : /***************************************************************
  201   201                      ;              ********************************************************
  202   202                      ; line    73 : Typedef definitions
  203   203                      ; line    74 : ****************************************************************
  204   204                      ;              *******************************************************/
  205   205                      ; line    75 : #ifndef __TYPEDEF__
  206   206                      ; line    76 : typedef signed char         int8_t;
  207   207                      ; line    77 : typedef unsigned char       uint8_t;
  208   208                      ; line    78 : typedef signed short        int16_t;
  209   209                      ; line    79 : typedef unsigned short      uint16_t;
  210   210                      ; line    80 : typedef signed long         int32_t;
  211   211                      ; line    81 : typedef unsigned long       uint32_t;
  212   212                      ; line    82 : typedef unsigned short      MD_STATUS;
  213   213                      ; line     1 : /***************************************************************
  214   214                      ;              ********************************************************
  215   215                      ; line     2 : * DISCLAIMER
  216   216                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
  217   217                      ;              nd is only 
  218   218                      ; line     4 : * intended for use with Renesas products. No other uses are auth
  219   219                      ;              orized. This 
  220   220                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  221   221                      ;              otected under 
  222   222                      ; line     6 : * all applicable laws, including copyright laws.
  223   223                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  224   224                      ;              IES REGARDING 
  225   225                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  226   226                      ;              G BUT NOT 
  227   227                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  228   228                      ;              ULAR PURPOSE 
  229   229                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  230   230                      ;              AIMED.
  231   231                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  232   232                      ;               RENESAS 
  233   233                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  234   234                      ;              ALL BE LIABLE 
  235   235                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  236   236                      ;               DAMAGES FOR 
  237   237                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  238   238                      ;              FILIATES HAVE 
  239   239                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  240   240                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  241   241                      ;               this software 
  242   242                      ; line    17 : * and to discontinue the availability of this software.  By usin
  243   243                      ;              g this software, 
  244   244                      ; line    18 : * you agree to the additional terms and conditions found by acce
  245   245                      ;              ssing the 
  246   246                      ; line    19 : * following link:
  247   247                      ; line    20 : * http://www.renesas.com/disclaimer
  248   248                      ; line    21 : *
  249   249                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  250   250                      ;               reserved.
  251   251                      ; line    23 : ****************************************************************
  252   252                      ;              *******************************************************/
  253   253                      ; line    24 : 
  254   254                      ; line    25 : /***************************************************************
  255   255                      ;              ********************************************************
  256   256                      ; line    26 : * File Name    : r_cg_adc.h
  257   257                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  258   258                      ;              ]
  259   259                      ; line    28 : * Device(s)    : R5F10WMG
  260   260                      ; line    29 : * Tool-Chain   : CA78K0R
  261   261                      ; line    30 : * Description  : This file implements device driver for ADC modu
  262   262                      ;              le.
  263   263                      ; line    31 : * Creation Date: 05-Jun-21
  264   264                      ; line    32 : ****************************************************************
  265   265                      ;              *******************************************************/
  266   266                      ; line    33 : #ifndef ADC_H
  267   267                      ; line    34 : #define ADC_H
  268   268                      ; line    35 : 
  269   269                      ; line    36 : /***************************************************************
  270   270                      ;              ********************************************************
  271   271                      ; line    37 : Macro definitions (Register bit)
  272   272                      ; line    38 : ****************************************************************
  273   273                      ;              *******************************************************/
  274   274                      ; line    39 : /*
  275   275                      ; line    40 :     Peripheral enable register 0 (PER0)
  276   276                      ; line    41 : */
  277   277                      ; line    42 : /* Control of AD converter input clock (ADCEN) */
  278   278                      ; line    43 : #define _00_AD_CLOCK_STOP               (0x00U) /* stop supply o
  279   279                      ;              f input clock */
  280   280                      ; line    44 : #define _20_AD_CLOCK_SUPPLY             (0x20U) /* supply input 
  281   281                      ;              clock */
  282   282                      ; line    45 : 
  283   283                      ; line    46 : /*
  284   284                      ; line    47 :     AD converter mode register 0 (ADM0)
  285   285                      ; line    48 : */
  286   286                      ; line    49 : #define _00_AD_ADM0_INITIALVALUE        (0x00U)
  287   287                      ; line    50 : /* AD conversion operation control (ADCS) */
  288   288                      ; line    51 : #define _80_AD_CONVERSION_ENABLE        (0x80U) /* enable AD con
  289   289                      ;              version operation control */
  290   290                      ; line    52 : #define _00_AD_CONVERSION_DISABLE       (0x00U) /* disable AD co
  291   291                      ;              nversion operation control */
  292   292                      ; line    53 : /* AD conversion clock selection (FR2 - FR0) */
  293   293                      ; line    54 : #define _00_AD_CONVERSION_CLOCK_64      (0x00U) /* fCLK/64 */
  294   294                      ; line    55 : #define _08_AD_CONVERSION_CLOCK_32      (0x08U) /* fCLK/32 */
  295   295                      ; line    56 : #define _10_AD_CONVERSION_CLOCK_16      (0x10U) /* fCLK/16 */
  296   296                      ; line    57 : #define _18_AD_CONVERSION_CLOCK_8       (0x18U) /* fCLK/8 */
  297   297                      ; line    58 : #define _20_AD_CONVERSION_CLOCK_6       (0x20U) /* fCLK/6 */
  298   298                      ; line    59 : #define _28_AD_CONVERSION_CLOCK_5       (0x28U) /* fCLK/5 */
  299   299                      ; line    60 : #define _30_AD_CONVERSION_CLOCK_4       (0x30U) /* fCLK/4 */
  300   300                      ; line    61 : #define _38_AD_CONVERSION_CLOCK_2       (0x38U) /* fCLK/2 */
  301   301                      ; line    62 : /* Specification AD conversion time mode (LV1, LV0) */
  302   302                      ; line    63 : #define _00_AD_TIME_MODE_NORMAL_1       (0x00U) /* normal 1 mode
  303   303                      ;               */
  304   304                      ; line    64 : #define _02_AD_TIME_MODE_NORMAL_2       (0x02U) /* normal 2 mode
  305   305                      ;               */
  306   306                      ; line    65 : #define _04_AD_TIME_MODE_LOWVOLTAGE_1   (0x04U) /* low-voltage 1
  307   307                      ;               mode */
  308   308                      ; line    66 : #define _06_AD_TIME_MODE_LOWVOLTAGE_2   (0x06U) /* low-voltage 2
  309   309                      ;               mode */
  310   310                      ; line    67 : /* AD comparator operation control (ADCE) */
  311   311                      ; line    68 : #define _01_AD_COMPARATOR_ENABLE        (0x01U) /* enable compar
  312   312                      ;              ator operation control */
  313   313                      ; line    69 : #define _00_AD_COMPARATOR_DISABLE       (0x00U) /* disable compa
  314   314                      ;              rator operation control */
  315   315                      ; line    70 : 
  316   316                      ; line    71 : /*
  317   317                      ; line    72 :     Analog input channel specification register (ADS)
  318   318                      ; line    73 : */
  319   319                      ; line    74 : /* Specification of analog input channel (ADISS, ADS4 - ADS0) */
  320   320                      ; line    75 : /* Select mode */
  321   321                      ; line    76 : #define _00_AD_INPUT_CHANNEL_0          (0x00U) /* ANI0 */
  322   322                      ; line    77 : #define _01_AD_INPUT_CHANNEL_1          (0x01U) /* ANI1 */
  323   323                      ; line    78 : #define _10_AD_INPUT_CHANNEL_16         (0x10U) /* ANI16 */
  324   324                      ; line    79 : #define _11_AD_INPUT_CHANNEL_17         (0x11U) /* ANI17 */
  325   325                      ; line    80 : #define _12_AD_INPUT_CHANNEL_18         (0x12U) /* ANI18 */
  326   326                      ; line    81 : #define _13_AD_INPUT_CHANNEL_19         (0x13U) /* ANI19 */
  327   327                      ; line    82 : #define _14_AD_INPUT_CHANNEL_20         (0x14U) /* ANI20 */
  328   328                      ; line    83 : #define _15_AD_INPUT_CHANNEL_21         (0x15U) /* ANI21 */
  329   329                      ; line    84 : #define _16_AD_INPUT_CHANNEL_22         (0x16U) /* ANI22 */
  330   330                      ; line    85 : #define _17_AD_INPUT_CHANNEL_23         (0x17U) /* ANI23 */
  331   331                      ; line    86 : #define _18_AD_INPUT_CHANNEL_24         (0x18U) /* ANI24 */
  332   332                      ; line    87 : #define _19_AD_INPUT_CHANNEL_25         (0x19U) /* ANI25 */
  333   333                      ; line    88 : #define _80_AD_INPUT_TEMPERSENSOR       (0x80U) /* temperature s
  334   334                      ;              ensor output is used to be the input channel */
  335   335                      ; line    89 : #define _81_AD_INPUT_INTERREFVOLT       (0x81U) /* internal refe
  336   336                      ;              rence voltage output is used to be the input channel */
  337   337                      ; line    90 : 
  338   338                      ; line    91 : /*
  339   339                      ; line    92 :     AD converter mode register 1 (ADM1)
  340   340                      ; line    93 : */
  341   341                      ; line    94 : /* AD trigger mode selection (ADTMD1, ADTMD0) */
  342   342                      ; line    95 : #define _00_AD_TRIGGER_SOFTWARE         (0x00U) /* software trig
  343   343                      ;              ger mode */
  344   344                      ; line    96 : #define _80_AD_TRIGGER_HARDWARE_NOWAIT  (0x80U) /* hardware trig
  345   345                      ;              ger mode (no wait) */
  346   346                      ; line    97 : #define _C0_AD_TRIGGER_HARDWARE_WAIT    (0xC0U) /* hardware trig
  347   347                      ;              ger mode (wait) */
  348   348                      ; line    98 : /* AD convertion mode selection (ADSCM) */
  349   349                      ; line    99 : #define _00_AD_CONVMODE_CONSELECT       (0x00U) /* continuous co
  350   350                      ;              nvertion mode */
  351   351                      ; line   100 : #define _20_AD_CONVMODE_ONESELECT       (0x20U) /* oneshot conve
  352   352                      ;              rtion mode */
  353   353                      ; line   101 : /* Trigger signal selection (ADTRS1, ADTRS0) */
  354   354                      ; line   102 : #define _00_AD_TRIGGER_INTTM01          (0x00U) /* INTTM01 */
  355   355                      ; line   103 : #define _02_AD_TRIGGER_INTRTC           (0x02U) /* INTRTC */
  356   356                      ; line   104 : #define _03_AD_TRIGGER_INTIT            (0x03U) /* INTIT */
  357   357                      ; line   105 : 
  358   358                      ; line   106 : /*
  359   359                      ; line   107 :     AD converter mode register 2 (ADM2)
  360   360                      ; line   108 : */
  361   361                      ; line   109 : /* AD VREF(+) selection (ADREFP1, ADREFP0) */
  362   362                      ; line   110 : #define _00_AD_POSITIVE_VDD             (0x00U) /* use VDD as VR
  363   363                      ;              EF(+) */
  364   364                      ; line   111 : #define _40_AD_POSITIVE_AVREFP          (0x40U) /* use AVREFP as
  365   365                      ;               VREF(+) */
  366   366                      ; line   112 : #define _80_AD_POSITIVE_INTERVOLT       (0x80U) /* use internal 
  367   367                      ;              voltage as VREF(+) */
  368   368                      ; line   113 : /* AD VREF(-) selection (ADREFM) */
  369   369                      ; line   114 : #define _00_AD_NEGATIVE_VSS             (0x00U) /* use VSS as VR
  370   370                      ;              EF(-) */
  371   371                      ; line   115 : #define _20_AD_NEGATIVE_AVREFM          (0x20U) /* use AVREFM as
  372   372                      ;               VREF(-) */
  373   373                      ; line   116 : /* AD conversion result upper/lower bound value selection (ADRCK
  374   374                      ;              ) */
  375   375                      ; line   117 : #define _00_AD_AREA_MODE_1              (0x00U) /* generates INT
  376   376                      ;              AD when ADLL <= ADCRH <= ADUL */
  377   377                      ; line   118 : #define _08_AD_AREA_MODE_2_3            (0x08U) /* generates INT
  378   378                      ;              AD when ADUL < ADCRH or ADLL > ADCRH */
  379   379                      ; line   119 : /* AD wakeup function selection (AWC) */
  380   380                      ; line   120 : #define _00_AD_SNOOZE_OFF               (0x00U) /* stop SNOOZE f
  381   381                      ;              unction */
  382   382                      ; line   121 : #define _04_AD_SNOOZE_ON                (0x04U) /* use SNOOZE fu
  383   383                      ;              nction */
  384   384                      ; line   122 : /* AD resolution selection (ADTYP) */
  385   385                      ; line   123 : #define _00_AD_RESOLUTION_10BIT         (0x00U) /* 10 bits */
  386   386                      ; line   124 : #define _01_AD_RESOLUTION_8BIT          (0x01U) /* 8 bits */
  387   387                      ; line   125 : 
  388   388                      ; line   126 : /*
  389   389                      ; line   127 :     AD test function register (ADTES)
  390   390                      ; line   128 : */
  391   391                      ; line   129 : /* AD test mode signal (ADTES2 - ADTES0) */
  392   392                      ; line   130 : #define _00_AD_NORMAL_INPUT             (0x00U) /* normal mode *
  393   393                      ;              /
  394   394                      ; line   131 : #define _02_AD_TEST_AVREFM              (0x02U) /* use AVREFM as
  395   395                      ;               test signal */
  396   396                      ; line   132 : #define _03_AD_TEST_AVREFP              (0x03U) /* use AVREFP as
  397   397                      ;               test signal */
  398   398                      ; line   133 : 
  399   399                      ; line   134 : /*
  400   400                      ; line   135 :     AD port configuration register (ADPC)
  401   401                      ; line   136 : */
  402   402                      ; line   137 : /* Analog input/digital input switching (ADPC1, ADPC0) */
  403   403                      ; line   138 : #define _00_AD_ADPC_2ANALOG             (0x00U) /* ANI0 - ANI1 *
  404   404                      ;              /
  405   405                      ; line   139 : #define _01_AD_ADPC_0ANALOG             (0x01U) /* all digital *
  406   406                      ;              /
  407   407                      ; line   140 : #define _02_AD_ADPC_1ANALOG             (0x02U) /* ANI0 */
  408   408                      ; line   141 : 
  409   409                      ; line   142 : /***************************************************************
  410   410                      ;              ********************************************************
  411   411                      ; line   143 : Macro definitions
  412   412                      ; line   144 : ****************************************************************
  413   413                      ;              *******************************************************/
  414   414                      ; line   145 : /* Upper bound (ADUL) value */
  415   415                      ; line   146 : #define _FF_AD_ADUL_VALUE               (0xFFU)
  416   416                      ; line   147 : /* Lower bound (ADLL) value */
  417   417                      ; line   148 : #define _00_AD_ADLL_VALUE               (0x00U)
  418   418                      ; line   149 : 
  419   419                      ; line   150 : /***************************************************************
  420   420                      ;              ********************************************************
  421   421                      ; line   151 : Typedef definitions
  422   422                      ; line   152 : ****************************************************************
  423   423                      ;              *******************************************************/
  424   424                      ; line   153 : typedef enum
  425   425                      ; line   154 : {
  426   426                      ; line   155 :     ADCHANNEL0,
  427   427                      ; line   156 :     ADCHANNEL1,
  428   428                      ; line   157 :     ADCHANNEL16 = 16U,
  429   429                      ; line   158 :     ADCHANNEL17,
  430   430                      ; line   159 :     ADCHANNEL18,
  431   431                      ; line   160 :     ADCHANNEL19,
  432   432                      ; line   161 :     ADCHANNEL20,
  433   433                      ; line   162 :     ADCHANNEL21,
  434   434                      ; line   163 :     ADCHANNEL22,
  435   435                      ; line   164 :     ADCHANNEL23,
  436   436                      ; line   165 :     ADCHANNEL24,
  437   437                      ; line   166 :     ADCHANNEL25,
  438   438                      ; line   167 :     ADTEMPERSENSOR0 = 128U,
  439   439                      ; line   168 :     ADINTERREFVOLT
  440   440                      ; line   169 : } ad_channel_t;
  441   441                      ; line   170 : 
  442   442                      ; line   171 : typedef enum
  443   443                      ; line   172 : {
  444   444                      ; line   173 :     ADNORMALINPUT,
  445   445                      ; line   174 :     ADAVREFM = 2U,
  446   446                      ; line   175 :     ADAVREFP
  447   447                      ; line   176 : } test_channel_t;
  448   448                      ; line   177 : 
  449   449                      ; line   178 : /***************************************************************
  450   450                      ;              ********************************************************
  451   451                      ; line   179 : Global functions
  452   452                      ; line   180 : ****************************************************************
  453   453                      ;              *******************************************************/
  454   454                      ; line   181 : void R_ADC_Create(void);
  455   455                      ; line   182 : void R_ADC_Start(void);
  456   456                      ; line   183 : void R_ADC_Stop(void);
  457   457                      ; line   184 : void R_ADC_Set_OperationOn(void);
  458   458                      ; line   185 : void R_ADC_Set_OperationOff(void);
  459   459                      ; line   186 : void R_ADC_Get_Result(uint16_t * const buffer);
  460   460                      ; line     1 : /***************************************************************
  461   461                      ;              ********************************************************
  462   462                      ; line     2 : * DISCLAIMER
  463   463                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
  464   464                      ;              nd is only 
  465   465                      ; line     4 : * intended for use with Renesas products. No other uses are auth
  466   466                      ;              orized. This 
  467   467                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  468   468                      ;              otected under 
  469   469                      ; line     6 : * all applicable laws, including copyright laws.
  470   470                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  471   471                      ;              IES REGARDING 
  472   472                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  473   473                      ;              G BUT NOT 
  474   474                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  475   475                      ;              ULAR PURPOSE 
  476   476                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  477   477                      ;              AIMED.
  478   478                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  479   479                      ;               RENESAS 
  480   480                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  481   481                      ;              ALL BE LIABLE 
  482   482                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  483   483                      ;               DAMAGES FOR 
  484   484                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  485   485                      ;              FILIATES HAVE 
  486   486                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  487   487                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  488   488                      ;               this software 
  489   489                      ; line    17 : * and to discontinue the availability of this software.  By usin
  490   490                      ;              g this software, 
  491   491                      ; line    18 : * you agree to the additional terms and conditions found by acce
  492   492                      ;              ssing the 
  493   493                      ; line    19 : * following link:
  494   494                      ; line    20 : * http://www.renesas.com/disclaimer
  495   495                      ; line    21 : *
  496   496                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  497   497                      ;               reserved.
  498   498                      ; line    23 : ****************************************************************
  499   499                      ;              *******************************************************/
  500   500                      ; line    24 : 
  501   501                      ; line    25 : /***************************************************************
  502   502                      ;              ********************************************************
  503   503                      ; line    26 : * File Name    : r_cg_adc_user.c
  504   504                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  505   505                      ;              ]
  506   506                      ; line    28 : * Device(s)    : R5F10WMG
  507   507                      ; line    29 : * Tool-Chain   : CA78K0R
  508   508                      ; line    30 : * Description  : This file implements device driver for ADC modu
  509   509                      ;              le.
  510   510                      ; line    31 : * Creation Date: 05-Jun-21
  511   511                      ; line    32 : ****************************************************************
  512   512                      ;              *******************************************************/
  513   513                      ; line    33 : 
  514   514                      ; line    34 : /***************************************************************
  515   515                      ;              ********************************************************
  516   516                      ; line    35 : Pragma directive
  517   517                      ; line    36 : ****************************************************************
  518   518                      ;              *******************************************************/
  519   519                      ; line    37 : #pragma interrupt INTAD r_adc_interrupt
  520   520                      ; line    38 : /* Start user code for pragma. Do not edit comment generated her
  521   521                      ;              e */
  522   522                      ; line    39 : /* End user code. Do not edit comment generated here */
  523   523                      ; line    40 : 
  524   524                      ; line    41 : /***************************************************************
  525   525                      ;              ********************************************************
  526   526                      ; line    42 : Includes
  527   527                      ; line    43 : ****************************************************************
  528   528                      ;              *******************************************************/
  529   529                      ; line    44 : #include "r_cg_macrodriver.h"
  530   530                      ; line    45 : #include "r_cg_adc.h"
  531   531                      ; line    46 : /* Start user code for include. Do not edit comment generated he
  532   532                      ;              re */
  533   533                      ; line    47 : /* End user code. Do not edit comment generated here */
  534   534                      ; line    48 : #include "r_cg_userdefine.h"
  535   535                      ; line    49 : 
  536   536                      ; line    50 : /***************************************************************
  537   537                      ;              ********************************************************
  538   538                      ; line    51 : Global variables and functions
  539   539                      ; line    52 : ****************************************************************
  540   540                      ;              *******************************************************/
  541   541                      ; line    53 : /* Start user code for global. Do not edit comment generated her
  542   542                      ;              e */
  543   543                      ; line    54 : 
  544   544                      ; line    55 : /* Variable for storing the ADC value */
  545   545                      ; line    56 : volatile uint16_t g_adc_result;
  546   546                      ; line    57 : 
  547   547                      ; line    58 : /* End user code. Do not edit comment generated here */
  548   548                      ; line    59 : 
  549   549                      ; line    60 : /***************************************************************
  550   550                      ;              ********************************************************
  551   551                      ; line    61 : * Function Name: r_adc_interrupt
  552   552                      ; line    62 : * Description  : None
  553   553                      ; line    63 : * Arguments    : None
  554   554                      ; line    64 : * Return Value : None
  555   555                      ; line    65 : ****************************************************************
  556   556                      ;              *******************************************************/
  557   557                      ; line    66 : __interrupt static void r_adc_interrupt(void)
  558   558                      ; line    67 : {
  559   559                      
  560   560 -----                @@BASE  CSEG    BASE
  561   561 00000                _r_adc_interrupt:
  562   562                      $DGL    1,20
  563   563 00000  C1                    push    ax                                              ;[INF] 1, 1
  564   564 00001  C3                    push    bc                                              ;[INF] 1, 1
  565   565 00002  C5                    push    de                                              ;[INF] 1, 1
  566   566 00003  C7                    push    hl                                              ;[INF] 1, 1
  567   567 00004 RAD00                  movw    ax,_@RTARG6                                     ;[INF] 2, 1
  568   568 00006  C1                    push    ax                                              ;[INF] 1, 1
  569   569 00007 RAD00                  movw    ax,_@RTARG4                                     ;[INF] 2, 1
  570   570 00009  C1                    push    ax                                              ;[INF] 1, 1
  571   571 0000A RAD00                  movw    ax,_@RTARG2                                     ;[INF] 2, 1
  572   572 0000C  C1                    push    ax                                              ;[INF] 1, 1
  573   573 0000D RAD00                  movw    ax,_@RTARG0                                     ;[INF] 2, 1
  574   574 0000F  C1                    push    ax                                              ;[INF] 1, 1
  575   575 00010 RAD00                  movw    ax,_@SEGDE                                      ;[INF] 2, 1
  576   576 00012  C1                    push    ax                                              ;[INF] 1, 1
  577   577 00013 RAD00                  movw    ax,_@SEGAX                                      ;[INF] 2, 1
  578   578 00015  C1                    push    ax                                              ;[INF] 1, 1
  579   579 00016  8EFD                  mov     a,ES                                            ;[INF] 2, 1
  580   580 00018  70                    mov     x,a                                             ;[INF] 1, 1
  581   581 00019  8EFC                  mov     a,CS                                            ;[INF] 2, 1
  582   582 0001B  C1                    push    ax                                              ;[INF] 1, 1
  583   583 0001C  C1                    push    ax                                              ;[INF] 1, 1
  584   584 0001D  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
  585   585 00020                ??bf_r_adc_interrupt:
  586   586                      ; line    68 :     /* Start user code. Do not edit comment generated here */
  587   587                      ; line    69 :  
  588   588                      ; line    70 :     /* Store the ADC value into the lower 10 bits of the variabl
  589   589                      ;              e */
  590   590                      ; line    71 :     uint16_t buffer;
  591   591                      ; line    72 :     R_ADC_Get_Result(&buffer);
  592   592                      $DGL    0,6
  593   593 00020  17                    movw    ax,hl                                           ;[INF] 1, 1
  594   594 00021 RFC000000              call    !!_R_ADC_Get_Result                             ;[INF] 4, 3
  595   595                      ; line    73 :     g_adc_result = buffer;
  596   596                      $DGL    0,7
  597   597 00025  AB                    movw    ax,[hl] ; buffer                                ;[INF] 1, 1
  598   598 00026 RBF0000                movw    !_g_adc_result,ax                               ;[INF] 3, 1
  599   599                      ; line    74 : 
  600   600                      ; line    75 :     /* Clear ADC interrupt flag */
  601   601                      ; line    76 :     ADIF = 0;
  602   602                      $DGL    0,10
  603   603 00029  712BE3                clr1    IF1H.2                                          ;[INF] 3, 2
  604   604                      ; line    77 : 
  605   605                      ; line    78 :     /* End user code. Do not edit comment generated here */
  606   606                      ; line    79 : }
  607   607                      $DGL    0,13
  608   608 0002C                ??ef_r_adc_interrupt:
  609   609 0002C  C0                    pop     ax                                              ;[INF] 1, 1
  610   610 0002D  C0                    pop     ax                                              ;[INF] 1, 1
  611   611 0002E  9EFC                  mov     CS,a                                            ;[INF] 2, 1
  612   612 00030  60                    mov     a,x                                             ;[INF] 1, 1
  613   613 00031  9EFD                  mov     ES,a                                            ;[INF] 2, 1
  614   614 00033  C0                    pop     ax                                              ;[INF] 1, 1
  615   615 00034 RBD00                  movw    _@SEGAX,ax                                      ;[INF] 2, 1
  616   616 00036  C0                    pop     ax                                              ;[INF] 1, 1
  617   617 00037 RBD00                  movw    _@SEGDE,ax                                      ;[INF] 2, 1
  618   618 00039  C0                    pop     ax                                              ;[INF] 1, 1
  619   619 0003A RBD00                  movw    _@RTARG0,ax                                     ;[INF] 2, 1
  620   620 0003C  C0                    pop     ax                                              ;[INF] 1, 1
  621   621 0003D RBD00                  movw    _@RTARG2,ax                                     ;[INF] 2, 1
  622   622 0003F  C0                    pop     ax                                              ;[INF] 1, 1
  623   623 00040 RBD00                  movw    _@RTARG4,ax                                     ;[INF] 2, 1
  624   624 00042  C0                    pop     ax                                              ;[INF] 1, 1
  625   625 00043 RBD00                  movw    _@RTARG6,ax                                     ;[INF] 2, 1
  626   626 00045  C6                    pop     hl                                              ;[INF] 1, 1
  627   627 00046  C4                    pop     de                                              ;[INF] 1, 1
  628   628 00047  C2                    pop     bc                                              ;[INF] 1, 1
  629   629 00048  C0                    pop     ax                                              ;[INF] 1, 1
  630   630 00049  61FC                  reti                                                    ;[INF] 2, 6
  631   631 0004B                ??ee_r_adc_interrupt:
  632   632                      
  633   633 -----                @@VECT38        CSEG    AT    0038H
  634   634 00038                _@vect38:
  635   635 00038 R0000                  DW      _r_adc_interrupt
  636   636                      
  637   637 -----                @@CODE  CSEG    BASE
  638   638                      
  639   639 -----                @@CODEL CSEG
  640   640                              END
  641   641                      
  642   642                      
  643   643                      ; *** Code Information ***
  644   644                      ;
  645   645                      ; $FILE C:\Users\nguye\Downloads\dtmf_reader_rl78\RSK_Module_test\RSKRL78L13\AD
  646   646                      ;       C_Repeat\cg_src\r_cg_adc_user.c
  647   647                      ;
  648   648                      ; $FUNC r_adc_interrupt(67)
  649   649                      ;       void=(void)
  650   650                      ;       CODE SIZE= 75 bytes, CLOCK_SIZE= 57 clocks, STACK_SIZE= 28 bytes
  651   651                      ;
  652   652                      ; $CALL R_ADC_Get_Result(72)
  653   653                      ;       void=(pointer:ax)
  654   654                      
  655   655                      ; Target chip : R5F10WMG
  656   656                      ; Device file : V1.00 

Segment informations:

ADRS  LEN      NAME

00000 00000H.0 @@BITS
00000 00000H   @@CNST
00000 00000H   @@R_INIT
00000 00000H   @@INIT
00000 00002H   @@DATA
00000 00000H   @@R_INIS
00000 00000H   @@INIS
00000 00000H   @@DATS
00000 00000H   @@CNSTL
00000 00000H   @@RLINIT
00000 00000H   @@INITL
00000 00000H   @@DATAL
00000 00000H   @@CALT
00000 0004BH   @@BASE
00038 00002H   @@VECT38
00000 00000H   @@CODE
00000 00000H   @@CODEL

 Target chip : R5F10WMG
 Device file : V1.00
Assembly complete,     0 error(s) and     0 warning(s) found. (    0)
