


78K0R Assembler V1.80                                                                                    Date: 5 Jun 2021 Page:   1



Command:  -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\Device\RL78\Devicefile Debug\r_cg_cgc.asm -_msgoff -pDebu
          g -oDebug -zs
Para-file:
In-file:  Debug\r_cg_cgc.asm
Obj-file: Debug\r_cg_cgc.rel
Prn-file: Debug\r_cg_cgc.prn

      Assemble list

 ALNO  STNO ADRS   OBJECT   M I  SOURCE STATEMENT

    1     1                      ; 78K0R C Compiler V2.60 Assembler Source        Date: 5 Jun 2021 Time:10:38:21
    2     2                      
    3     3                      ; Command   : -cf10wmg -yC:\Program Files (x86)\Renesas Electronics\CubeSuite+\
    4     4                      ;             Device\RL78\Devicefile ..\RSKRL78L13\ADC_Repeat\cg_src\r_cg_cgc.c
    5     5                      ;              -oDebug -_msgoff -nq -i..\RSKRL78L13\ADC_Repeat\cg_src -v -w2 -z
    6     6                      ;             ps -mm -mi0 -saDebug -li -no -g2
    7     7                      ; In-file   : ..\RSKRL78L13\ADC_Repeat\cg_src\r_cg_cgc.c
    8     8                      ; Asm-file  : Debug\r_cg_cgc.asm
    9     9                      ; Para-file : 
   10    10                      
   11    11                      $PROCESSOR(F10WMG)
   12    12                      $DEBUG
   13    13                      $NODEBUGA
   14    14                      $KANJICODE SJIS
   15    15                      $TOL_INF        03FH, 0260H, 00H, 04000H, 00H, 00H, 00H
   16    16                      
   17    17                      $DGS    FIL_NAM, .file,         024H,   0FFFEH, 03FH,   067H,   01H,    00H
   18    18                      $DGS    AUX_FIL, r_cg_cgc.c
   19    19                      $DGS    MOD_NAM, r_cg_cgc,      00H,    0FFFEH, 00H,    077H,   00H,    00H
   20    20                      $DGS    SEC_NAM, @@BITS,        U,      U,      00H,    078H,   00H,    00H
   21    21                      $DGS    SEC_NAM, @@CNST,        U,      U,      00H,    078H,   00H,    00H
   22    22                      $DGS    SEC_NAM, @@R_INIT,      U,      U,      00H,    078H,   00H,    00H
   23    23                      $DGS    SEC_NAM, @@INIT,        U,      U,      00H,    078H,   00H,    00H
   24    24                      $DGS    SEC_NAM, @@DATA,        U,      U,      00H,    078H,   00H,    00H
   25    25                      $DGS    SEC_NAM, @@R_INIS,      U,      U,      00H,    078H,   00H,    00H
   26    26                      $DGS    SEC_NAM, @@INIS,        U,      U,      00H,    078H,   00H,    00H
   27    27                      $DGS    SEC_NAM, @@DATS,        U,      U,      00H,    078H,   00H,    00H
   28    28                      $DGS    SEC_NAM, @@CNSTL,       U,      U,      00H,    078H,   00H,    00H
   29    29                      $DGS    SEC_NAM, @@RLINIT,      U,      U,      00H,    078H,   00H,    00H
   30    30                      $DGS    SEC_NAM, @@INITL,       U,      U,      00H,    078H,   00H,    00H
   31    31                      $DGS    SEC_NAM, @@DATAL,       U,      U,      00H,    078H,   00H,    00H
   32    32                      $DGS    SEC_NAM, @@CALT,        U,      U,      00H,    078H,   00H,    00H
   33    33                      $DGS    SEC_NAM, @@CODE,        U,      U,      00H,    078H,   00H,    00H
   34    34                      $DGS    SEC_NAM, @@CODEL,       U,      U,      00H,    078H,   00H,    00H
   35    35                      $DGS    SEC_NAM, @@BASE,        U,      U,      00H,    078H,   00H,    00H
   36    36                      $DGS    GLV_SYM, _R_CGC_Create, U,      U,      01H,    026H,   01H,    02H
   37    37                      $DGS    AUX_FUN, 00H,           U,      U,      024H,   01H,    00H
   38    38                      $DGS    BEG_FUN, ??bf_R_CGC_Create,     U,      U,      00H,    065H,   01H,    00H
   39    39                      $DGS    AUX_BEG, 03EH,          04H,    01AH
   40    40                      $DGS    AUT_VAR, _w_count,      02H,    0FFFFH, 0100DH, 01H,    00H,    00H
   41    41                      $DGS    AUT_VAR, _temp_stab_set,        01H,    0FFFFH, 0CH,    01H,    00H,    00H
   42    42                      $DGS    AUT_VAR, _temp_stab_wait,       00H,    0FFFFH, 0CH,    01H,    00H,    00H
   43    43                      $DGS    BEG_BLK, ??bb00_R_CGC_Create,   U,      U,      00H,    064H,   01H,    00H
   44    44                      $DGS    AUX_BEG, 0CH,           00H,    01EH
   45    45                      $DGS    END_BLK, ??eb00_R_CGC_Create,   U,      U,      00H,    064H,   01H,    00H
   46    46                      $DGS    AUX_END, 0FH
   47    47                      $DGS    BEG_BLK, ??bb01_R_CGC_Create,   U,      U,      00H,    064H,   01H,    00H
   48    48                      $DGS    AUX_BEG, 019H,          00H,    00H
   49    49                      $DGS    END_BLK, ??eb01_R_CGC_Create,   U,      U,      00H,    064H,   01H,    00H
   50    50                      $DGS    AUX_END, 01BH
   51    51                      $DGS    END_FUN, ??ef_R_CGC_Create,     U,      U,      00H,    065H,   01H,    00H
   52    52                      $DGS    AUX_END, 022H
   53    53                      
   54    54                              PUBLIC  _R_CGC_Create
   55    55                      
   56    56 -----                @@BITS  BSEG
   57    57                      
   58    58 -----                @@CNST  CSEG    MIRRORP
   59    59                      
   60    60 -----                @@R_INIT        CSEG    UNIT64KP
   61    61                      
   62    62 -----                @@INIT  DSEG    BASEP
   63    63                      
   64    64 -----                @@DATA  DSEG    BASEP
   65    65                      
   66    66 -----                @@R_INIS        CSEG    UNIT64KP
   67    67                      
   68    68 -----                @@INIS  DSEG    SADDRP
   69    69                      
   70    70 -----                @@DATS  DSEG    SADDRP
   71    71                      
   72    72 -----                @@CNSTL CSEG    PAGE64KP
   73    73                      
   74    74 -----                @@RLINIT        CSEG    UNIT64KP
   75    75                      
   76    76 -----                @@INITL DSEG    UNIT64KP
   77    77                      
   78    78 -----                @@DATAL DSEG    UNIT64KP
   79    79                      
   80    80 -----                @@CALT  CSEG    CALLT0
   81    81                      
   82    82                      ; line     1 : /***************************************************************
   83    83                      ;              ********************************************************
   84    84                      ; line     2 : * DISCLAIMER
   85    85                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
   86    86                      ;              nd is only 
   87    87                      ; line     4 : * intended for use with Renesas products. No other uses are auth
   88    88                      ;              orized. This 
   89    89                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
   90    90                      ;              otected under 
   91    91                      ; line     6 : * all applicable laws, including copyright laws.
   92    92                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
   93    93                      ;              IES REGARDING 
   94    94                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
   95    95                      ;              G BUT NOT 
   96    96                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
   97    97                      ;              ULAR PURPOSE 
   98    98                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
   99    99                      ;              AIMED.
  100   100                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  101   101                      ;               RENESAS 
  102   102                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  103   103                      ;              ALL BE LIABLE 
  104   104                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  105   105                      ;               DAMAGES FOR 
  106   106                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  107   107                      ;              FILIATES HAVE 
  108   108                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  109   109                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  110   110                      ;               this software 
  111   111                      ; line    17 : * and to discontinue the availability of this software.  By usin
  112   112                      ;              g this software, 
  113   113                      ; line    18 : * you agree to the additional terms and conditions found by acce
  114   114                      ;              ssing the 
  115   115                      ; line    19 : * following link:
  116   116                      ; line    20 : * http://www.renesas.com/disclaimer
  117   117                      ; line    21 : *
  118   118                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  119   119                      ;               reserved.
  120   120                      ; line    23 : ****************************************************************
  121   121                      ;              *******************************************************/
  122   122                      ; line    24 : 
  123   123                      ; line    25 : /***************************************************************
  124   124                      ;              ********************************************************
  125   125                      ; line    26 : * File Name    : r_cg_macrodriver.h
  126   126                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  127   127                      ;              ]
  128   128                      ; line    28 : * Device(s)    : R5F10WMG
  129   129                      ; line    29 : * Tool-Chain   : CA78K0R
  130   130                      ; line    30 : * Description  : This file implements general head file.
  131   131                      ; line    31 : * Creation Date: 05-Jun-21
  132   132                      ; line    32 : ****************************************************************
  133   133                      ;              *******************************************************/
  134   134                      ; line    33 : #ifndef MODULEID_H
  135   135                      ; line    34 : #define MODULEID_H
  136   136                      ; line    35 : /***************************************************************
  137   137                      ;              ********************************************************
  138   138                      ; line    36 : Includes
  139   139                      ; line    37 : ****************************************************************
  140   140                      ;              *******************************************************/
  141   141                      ; line    38 : #pragma sfr
  142   142                      ; line    39 : #pragma DI
  143   143                      ; line    40 : #pragma EI
  144   144                      ; line    41 : #pragma NOP
  145   145                      ; line    42 : #pragma HALT
  146   146                      ; line    43 : #pragma STOP
  147   147                      ; line    44 : 
  148   148                      ; line    45 : /***************************************************************
  149   149                      ;              ********************************************************
  150   150                      ; line    46 : Macro definitions (Register bit)
  151   151                      ; line    47 : ****************************************************************
  152   152                      ;              *******************************************************/
  153   153                      ; line    48 : 
  154   154                      ; line    49 : /***************************************************************
  155   155                      ;              ********************************************************
  156   156                      ; line    50 : Macro definitions
  157   157                      ; line    51 : ****************************************************************
  158   158                      ;              *******************************************************/
  159   159                      ; line    52 : #ifndef __TYPEDEF__
  160   160                      ; line    53 : /* Status list definition */
  161   161                      ; line    54 : #define MD_STATUSBASE        (0x00U)
  162   162                      ; line    55 : #define MD_OK                (MD_STATUSBASE + 0x00U) /* register
  163   163                      ;               setting OK */
  164   164                      ; line    56 : #define MD_SPT               (MD_STATUSBASE + 0x01U) /* IIC stop
  165   165                      ;               */
  166   166                      ; line    57 : #define MD_NACK              (MD_STATUSBASE + 0x02U) /* IIC no A
  167   167                      ;              CK */
  168   168                      ; line    58 : #define MD_BUSY1             (MD_STATUSBASE + 0x03U) /* busy 1 *
  169   169                      ;              /
  170   170                      ; line    59 : #define MD_BUSY2             (MD_STATUSBASE + 0x04U) /* busy 2 *
  171   171                      ;              /
  172   172                      ; line    60 : 
  173   173                      ; line    61 : /* Error list definition */
  174   174                      ; line    62 : #define MD_ERRORBASE         (0x80U)
  175   175                      ; line    63 : #define MD_ERROR             (MD_ERRORBASE + 0x00U)  /* error */
  176   176                      ; line    64 : #define MD_ARGERROR          (MD_ERRORBASE + 0x01U)  /* error ag
  177   177                      ;              rument input error */
  178   178                      ; line    65 : #define MD_ERROR1            (MD_ERRORBASE + 0x02U)  /* error 1 
  179   179                      ;              */
  180   180                      ; line    66 : #define MD_ERROR2            (MD_ERRORBASE + 0x03U)  /* error 2 
  181   181                      ;              */
  182   182                      ; line    67 : #define MD_ERROR3            (MD_ERRORBASE + 0x04U)  /* error 3 
  183   183                      ;              */
  184   184                      ; line    68 : #define MD_ERROR4            (MD_ERRORBASE + 0x05U)  /* error 4 
  185   185                      ;              */
  186   186                      ; line    69 : #define MD_ERROR5            (MD_ERRORBASE + 0x06U)  /* error 5 
  187   187                      ;              */
  188   188                      ; line    70 : #endif
  189   189                      ; line    71 : 
  190   190                      ; line    72 : /***************************************************************
  191   191                      ;              ********************************************************
  192   192                      ; line    73 : Typedef definitions
  193   193                      ; line    74 : ****************************************************************
  194   194                      ;              *******************************************************/
  195   195                      ; line    75 : #ifndef __TYPEDEF__
  196   196                      ; line    76 : typedef signed char         int8_t;
  197   197                      ; line    77 : typedef unsigned char       uint8_t;
  198   198                      ; line    78 : typedef signed short        int16_t;
  199   199                      ; line    79 : typedef unsigned short      uint16_t;
  200   200                      ; line    80 : typedef signed long         int32_t;
  201   201                      ; line    81 : typedef unsigned long       uint32_t;
  202   202                      ; line    82 : typedef unsigned short      MD_STATUS;
  203   203                      ; line     1 : /***************************************************************
  204   204                      ;              ********************************************************
  205   205                      ; line     2 : * DISCLAIMER
  206   206                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
  207   207                      ;              nd is only 
  208   208                      ; line     4 : * intended for use with Renesas products. No other uses are auth
  209   209                      ;              orized. This 
  210   210                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  211   211                      ;              otected under 
  212   212                      ; line     6 : * all applicable laws, including copyright laws.
  213   213                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  214   214                      ;              IES REGARDING 
  215   215                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  216   216                      ;              G BUT NOT 
  217   217                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  218   218                      ;              ULAR PURPOSE 
  219   219                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  220   220                      ;              AIMED.
  221   221                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  222   222                      ;               RENESAS 
  223   223                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  224   224                      ;              ALL BE LIABLE 
  225   225                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  226   226                      ;               DAMAGES FOR 
  227   227                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  228   228                      ;              FILIATES HAVE 
  229   229                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  230   230                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  231   231                      ;               this software 
  232   232                      ; line    17 : * and to discontinue the availability of this software.  By usin
  233   233                      ;              g this software, 
  234   234                      ; line    18 : * you agree to the additional terms and conditions found by acce
  235   235                      ;              ssing the 
  236   236                      ; line    19 : * following link:
  237   237                      ; line    20 : * http://www.renesas.com/disclaimer
  238   238                      ; line    21 : *
  239   239                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  240   240                      ;               reserved.
  241   241                      ; line    23 : ****************************************************************
  242   242                      ;              *******************************************************/
  243   243                      ; line    24 : 
  244   244                      ; line    25 : /***************************************************************
  245   245                      ;              ********************************************************
  246   246                      ; line    26 : * File Name    : r_cg_cgc.h
  247   247                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  248   248                      ;              ]
  249   249                      ; line    28 : * Device(s)    : R5F10WMG
  250   250                      ; line    29 : * Tool-Chain   : CA78K0R
  251   251                      ; line    30 : * Description  : This file implements device driver for CGC modu
  252   252                      ;              le.
  253   253                      ; line    31 : * Creation Date: 05-Jun-21
  254   254                      ; line    32 : ****************************************************************
  255   255                      ;              *******************************************************/
  256   256                      ; line    33 : #ifndef CGC_H
  257   257                      ; line    34 : #define CGC_H
  258   258                      ; line    35 : 
  259   259                      ; line    36 : /***************************************************************
  260   260                      ;              ********************************************************
  261   261                      ; line    37 : Macro definitions (Register bit)
  262   262                      ; line    38 : ****************************************************************
  263   263                      ;              *******************************************************/
  264   264                      ; line    39 : /*
  265   265                      ; line    40 :     Clock operation mode control register (CMC)
  266   266                      ; line    41 : */
  267   267                      ; line    42 : /* High-speed system clock pin operation mode (EXCLK, OSCSEL) */
  268   268                      ; line    43 : #define _C0_CGC_HISYS_PIN           (0xC0U)
  269   269                      ; line    44 : #define _00_CGC_HISYS_PORT          (0x00U) /* X1, X2 as I/O por
  270   270                      ;              t */
  271   271                      ; line    45 : #define _40_CGC_HISYS_OSC           (0x40U) /* X1, X2 as crystal
  272   272                      ;              /ceramic resonator connection */
  273   273                      ; line    46 : #define _80_CGC_HISYS_PORT1         (0x80U) /* X1, X2 as I/O por
  274   274                      ;              t */
  275   275                      ; line    47 : #define _C0_CGC_HISYS_EXT           (0xC0U) /* X1 as I/O port, X
  276   276                      ;              2 as external clock input */
  277   277                      ; line    48 : /* Subsystem clock pin operation mode (EXCLKS, OSCSELS) */
  278   278                      ; line    49 : #define _30_CGC_SUB_PIN             (0x30U)
  279   279                      ; line    50 : #define _00_CGC_SUB_PORT            (0x00U) /* XT1, XT2 as I/O p
  280   280                      ;              ort */
  281   281                      ; line    51 : #define _10_CGC_SUB_OSC             (0x10U) /* XT1, XT2 as cryst
  282   282                      ;              al connection */
  283   283                      ; line    52 : #define _20_CGC_SUB_PORT1           (0x20U) /* XT1, XT2 as I/O p
  284   284                      ;              ort */
  285   285                      ; line    53 : #define _30_CGC_SUB_EXT             (0x30U) /* XT1 as I/O port, 
  286   286                      ;              XT2 as external clock input */
  287   287                      ; line    54 : /* XT1 oscillator oscillation mode selection (AMPHS1, AMPHS0) */
  288   288                      ; line    55 : #define _00_CGC_SUBMODE_DEFAULT     (0x00U)
  289   289                      ; line    56 : #define _00_CGC_SUBMODE_LOW         (0x00U) /* low power consump
  290   290                      ;              tion oscillation */
  291   291                      ; line    57 : #define _02_CGC_SUBMODE_NORMAL      (0x02U) /* normal oscillatio
  292   292                      ;              n */
  293   293                      ; line    58 : #define _04_CGC_SUBMODE_ULOW        (0x04U) /* ultra-low power c
  294   294                      ;              onsumption oscillation */
  295   295                      ; line    59 : /* Control of X1 high-speed system clock oscillation frequency (
  296   296                      ;              AMPH) */
  297   297                      ; line    60 : #define _00_CGC_SYSOSC_UNDER10M     (0x00U) /* fX <= 10MHz */
  298   298                      ; line    61 : #define _01_CGC_SYSOSC_OVER10M      (0x01U) /* fX > 10MHz */
  299   299                      ; line    62 : 
  300   300                      ; line    63 : /*
  301   301                      ; line    64 :     System clock control register (CKC)
  302   302                      ; line    65 : */
  303   303                      ; line    66 : /* Status of CPU/peripheral hardware clock fCLK (CLS) */
  304   304                      ; line    67 : #define _00_CGC_CPUCLK_MAIN         (0x00U) /* main system clock
  305   305                      ;               (fMAIN) */
  306   306                      ; line    68 : #define _80_CGC_CPUCLK_SUB          (0x80U) /* subsystem clock (
  307   307                      ;              fSUB) */
  308   308                      ; line    69 : /* Selection of CPU/peripheral hardware clock fCLK (CSS) */
  309   309                      ; line    70 : #define _00_CGC_CPUCLK_SELMAIN      (0x00U) /* main system clock
  310   310                      ;               (fMAIN) */
  311   311                      ; line    71 : #define _40_CGC_CPUCLK_SELSUB       (0x40U) /* subsystem clock (
  312   312                      ;              fSUB) */
  313   313                      ; line    72 : /* Status of Main system clock fMAIN (MCS) */
  314   314                      ; line    73 : #define _00_CGC_MAINCLK_HIO         (0x00U) /* high-speed OCO cl
  315   315                      ;              ock (fIH) */
  316   316                      ; line    74 : #define _20_CGC_MAINCLK_HISYS       (0x20U) /* high-speed system
  317   317                      ;               clock (fMX) */
  318   318                      ; line    75 : /* Selection of Main system clock fMAIN (MCM0) */
  319   319                      ; line    76 : #define _00_CGC_MAINCLK_SELHIO      (0x00U) /* high-speed OCO cl
  320   320                      ;              ock (fIH) */
  321   321                      ; line    77 : #define _10_CGC_MAINCLK_SELHISYS    (0x10U) /* high-speed system
  322   322                      ;               clock (fMX) */
  323   323                      ; line    78 : 
  324   324                      ; line    79 : /*
  325   325                      ; line    80 :     Clock operation status control register (CSC)
  326   326                      ; line    81 : */
  327   327                      ; line    82 : /* Control of high-speed system clock operation (MSTOP) */
  328   328                      ; line    83 : #define _00_CGC_HISYS_OPER          (0x00U) /* X1 oscillator/ext
  329   329                      ;              ernal clock operating */
  330   330                      ; line    84 : #define _80_CGC_HISYS_STOP          (0x80U) /* X1 oscillator/ext
  331   331                      ;              ernal clock stopped */
  332   332                      ; line    85 : /* Subsystem clock operation (XTSTOP) */
  333   333                      ; line    86 : #define _00_CGC_SUB_OPER            (0x00U) /* XT1 oscillator op
  334   334                      ;              erating */
  335   335                      ; line    87 : #define _40_CGC_SUB_STOP            (0x40U) /* XT1 oscillator st
  336   336                      ;              opped */
  337   337                      ; line    88 : /* High-speed OCO operation (HIOSTOP) */
  338   338                      ; line    89 : #define _00_CGC_HIO_OPER            (0x00U) /* high-speed OCO op
  339   339                      ;              erating */
  340   340                      ; line    90 : #define _01_CGC_HIO_STOP            (0x01U) /* high-speed OCO st
  341   341                      ;              opped */
  342   342                      ; line    91 : 
  343   343                      ; line    92 : /*
  344   344                      ; line    93 :     Oscillation stabilization time counter status register (OSTC
  345   345                      ;              )
  346   346                      ; line    94 : */
  347   347                      ; line    95 : /* Oscillation stabilization time status (MOST18 - MOST8) */
  348   348                      ; line    96 : #define _00_CGC_OSCSTAB_STA0        (0x00U) /* < 2^8/fX */
  349   349                      ; line    97 : #define _80_CGC_OSCSTAB_STA8        (0x80U) /* 2^8/fX */
  350   350                      ; line    98 : #define _C0_CGC_OSCSTAB_STA9        (0xC0U) /* 2^9/fX */
  351   351                      ; line    99 : #define _E0_CGC_OSCSTAB_STA10       (0xE0U) /* 2^10/fX */
  352   352                      ; line   100 : #define _F0_CGC_OSCSTAB_STA11       (0xF0U) /* 2^11/fX */
  353   353                      ; line   101 : #define _F8_CGC_OSCSTAB_STA13       (0xF8U) /* 2^13/fX */
  354   354                      ; line   102 : #define _FC_CGC_OSCSTAB_STA15       (0xFCU) /* 2^15/fX */
  355   355                      ; line   103 : #define _FE_CGC_OSCSTAB_STA17       (0xFEU) /* 2^17/fX */
  356   356                      ; line   104 : #define _FF_CGC_OSCSTAB_STA18       (0xFFU) /* 2^18/fX */
  357   357                      ; line   105 : 
  358   358                      ; line   106 : /*
  359   359                      ; line   107 :     Oscillation stabilization time select register (OSTS)
  360   360                      ; line   108 : */
  361   361                      ; line   109 : /* Oscillation stabilization time selection (OSTS2 - OSTS0) */
  362   362                      ; line   110 : #define _00_CGC_OSCSTAB_SEL8        (0x00U) /* 2^8/fX */
  363   363                      ; line   111 : #define _01_CGC_OSCSTAB_SEL9        (0x01U) /* 2^9/fX */
  364   364                      ; line   112 : #define _02_CGC_OSCSTAB_SEL10       (0x02U) /* 2^10/fX */
  365   365                      ; line   113 : #define _03_CGC_OSCSTAB_SEL11       (0x03U) /* 2^11/fX */
  366   366                      ; line   114 : #define _04_CGC_OSCSTAB_SEL13       (0x04U) /* 2^13/fX */
  367   367                      ; line   115 : #define _05_CGC_OSCSTAB_SEL15       (0x05U) /* 2^15/fX */
  368   368                      ; line   116 : #define _06_CGC_OSCSTAB_SEL17       (0x06U) /* 2^17/fX */
  369   369                      ; line   117 : #define _07_CGC_OSCSTAB_SEL18       (0x07U) /* 2^18/fX */
  370   370                      ; line   118 : 
  371   371                      ; line   119 : 
  372   372                      ; line   120 : /*
  373   373                      ; line   121 :     Operation speed mode control register (OSMC)
  374   374                      ; line   122 : */
  375   375                      ; line   123 : /* Setting in subsystem clock HALT mode (RTCLPC) */
  376   376                      ; line   124 : #define _00_CGC_SUBINHALT_ON        (0x00U) /* enables supply of
  377   377                      ;               subsystem clock to peripheral functions */
  378   378                      ; line   125 : #define _80_CGC_SUBINHALT_OFF       (0x80U) /* stops supply to p
  379   379                      ;              eripheral functions except RTC, interval timer, PCLBUZ and LCD *
  380   380                      ;              /
  381   381                      ; line   126 : /* Selection of operation clock for highaccuracy real-time clock
  382   382                      ;              , 12-bit interval timer, and LCD (WUTMMCK0) */
  383   383                      ; line   127 : #define _00_CGC_RTC_IT_LCD_CLK_FSUB (0x00U) /* Subsystem clock (
  384   384                      ;              fSUB) */
  385   385                      ; line   128 : #define _10_CGC_RTC_IT_LCD_CLK_FIL  (0x10U) /* Low-speed on-chip
  386   386                      ;               oscillator clock (fIL) */
  387   387                      ; line   129 : 
  388   388                      ; line   130 : /*
  389   389                      ; line   131 :     CRC control register (CRC0CTL)
  390   390                      ; line   132 : */
  391   391                      ; line   133 : /* CRC calculation operation (CRC0EN) */
  392   392                      ; line   134 : #define _00_CGC_CRC_OPERATION_OFF   (0x00U) /* stops operation *
  393   393                      ;              /
  394   394                      ; line   135 : #define _80_CGC_CRC_OPERATION_ON    (0x80U) /* CRC calculation i
  395   395                      ;              s performed after enter HALT mode */
  396   396                      ; line   136 : /* CRC calculation range (FEA2 - FEA0) */
  397   397                      ; line   137 : #define _00_CGC_CRC_AREA0           (0x00U) /* 0 to 3FFBH (16K t
  398   398                      ;              o 4bytes) */
  399   399                      ; line   138 : #define _01_CGC_CRC_AREA1           (0x01U) /* 0 to 7FFBH (32K t
  400   400                      ;              o 4bytes) */
  401   401                      ; line   139 : #define _02_CGC_CRC_AREA2           (0x02U) /* 0 to BFFBH (48K t
  402   402                      ;              o 4bytes) */
  403   403                      ; line   140 : #define _03_CGC_CRC_AREA3           (0x03U) /* 0 to FFFBH (64K t
  404   404                      ;              o 4bytes) */
  405   405                      ; line   141 : #define _04_CGC_CRC_AREA4           (0x04U) /* 0 to 13FFBH (80K 
  406   406                      ;              to 4bytes) */
  407   407                      ; line   142 : #define _05_CGC_CRC_AREA5           (0x05U) /* 0 to 17FFBH (96K 
  408   408                      ;              to 4bytes) */
  409   409                      ; line   143 : #define _06_CGC_CRC_AREA6           (0x06U) /* 0 to 1BFFBH (112K
  410   410                      ;               to 4bytes) */
  411   411                      ; line   144 : #define _07_CGC_CRC_AREA7           (0x07U) /* 0 to 1FFFBH (128K
  412   412                      ;               to 4bytes) */
  413   413                      ; line   145 : 
  414   414                      ; line   146 : /*
  415   415                      ; line   147 :     Illegal memory access detection control register (IAWCTL)
  416   416                      ; line   148 : */
  417   417                      ; line   149 : /* Illegal memory access detection control (IAWEN) */
  418   418                      ; line   150 : #define _00_CGC_ILLEGAL_ACCESS_OFF  (0x00U) /* disables illegal 
  419   419                      ;              memory access detection */
  420   420                      ; line   151 : #define _80_CGC_ILLEGAL_ACCESS_ON   (0x80U) /* enables illegal m
  421   421                      ;              emory access detection */
  422   422                      ; line   152 : /* RAM guard area (GRAM1, GRAM0) */
  423   423                      ; line   153 : #define _00_CGC_RAM_GUARD_OFF       (0x00U) /* invalid, it is po
  424   424                      ;              ssible to write RAM */
  425   425                      ; line   154 : #define _10_CGC_RAM_GUARD_ARAE0     (0x10U) /* 128 bytes from RA
  426   426                      ;              M bottom address */
  427   427                      ; line   155 : #define _20_CGC_RAM_GUARD_ARAE1     (0x20U) /* 256 bytes from RA
  428   428                      ;              M bottom address */
  429   429                      ; line   156 : #define _30_CGC_RAM_GUARD_ARAE2     (0x30U) /* 512 bytes from RA
  430   430                      ;              M bottom address */
  431   431                      ; line   157 : /* PORT register guard (GPORT) */
  432   432                      ; line   158 : #define _00_CGC_PORT_GUARD_OFF      (0x00U) /* invalid, it is po
  433   433                      ;              ssible to write PORT register */
  434   434                      ; line   159 : #define _04_CGC_PORT_GUARD_ON       (0x04U) /* valid, it is impo
  435   435                      ;              ssible to write PORT register, but possible for read */
  436   436                      ; line   160 : /* Interrupt register guard (GINT) */
  437   437                      ; line   161 : #define _00_CGC_INT_GUARD_OFF       (0x00U) /* invalid, it is po
  438   438                      ;              ssible to write interrupt register */
  439   439                      ; line   162 : #define _02_CGC_INT_GUARD_ON        (0x02U) /* valid, it is impo
  440   440                      ;              ssible to write, but possible for read */
  441   441                      ; line   163 : /* CSC register guard (GCSC) */
  442   442                      ; line   164 : #define _00_CGC_CSC_GUARD_OFF       (0x00U) /* invalid, it is po
  443   443                      ;              ssible to write CSC register */
  444   444                      ; line   165 : #define _01_CGC_CSC_GUARD_ON        (0x01U) /* valid, it is impo
  445   445                      ;              ssible to write CSC register, but possible for read */
  446   446                      ; line   166 : 
  447   447                      ; line   167 : /*
  448   448                      ; line   168 :     Port mode select register (PMS)
  449   449                      ; line   169 : */
  450   450                      ; line   170 : /* Illegal memory access detection control (PMS0) */
  451   451                      ; line   171 : #define _00_CGC_PORT_OUTPUT_PMN     (0x00U) /* when PMmn = 0 (ou
  452   452                      ;              tput mode), Pmn value (port latch) is read */
  453   453                      ; line   172 : #define _01_CGC_PORT_OUTPUT_LEVEL   (0x01U) /* when PMmn = 0 (ou
  454   454                      ;              tput mode), digital output level of the pin is read. */
  455   455                      ; line   173 : 
  456   456                      ; line   174 : /***************************************************************
  457   457                      ;              ********************************************************
  458   458                      ; line   175 : Macro definitions
  459   459                      ; line   176 : ****************************************************************
  460   460                      ;              *******************************************************/
  461   461                      ; line   177 : #define CGC_SUBWAITTIME             (30U)   /* change the waitin
  462   462                      ;              g time according to the system */
  463   463                      ; line   178 : 
  464   464                      ; line   179 : /***************************************************************
  465   465                      ;              ********************************************************
  466   466                      ; line   180 : Typedef definitions
  467   467                      ; line   181 : ****************************************************************
  468   468                      ;              *******************************************************/
  469   469                      ; line   182 : typedef enum
  470   470                      ; line   183 : {
  471   471                      ; line   184 :     HIOCLK, 
  472   472                      ; line   185 :     SYSX1CLK, 
  473   473                      ; line   186 :     SYSEXTCLK,
  474   474                      ; line   187 :     SUBXT1CLK, 
  475   475                      ; line   188 :     SUBEXTCLK
  476   476                      ; line   189 : } clock_mode_t;
  477   477                      ; line   190 : 
  478   478                      ; line   191 : /***************************************************************
  479   479                      ;              ********************************************************
  480   480                      ; line   192 : Global functions
  481   481                      ; line   193 : ****************************************************************
  482   482                      ;              *******************************************************/
  483   483                      ; line   194 : void R_CGC_Create(void);
  484   484                      ; line   195 : void R_CGC_Get_ResetSource(void);
  485   485                      ; line     1 : /***************************************************************
  486   486                      ;              ********************************************************
  487   487                      ; line     2 : * DISCLAIMER
  488   488                      ; line     3 : * This software is supplied by Renesas Electronics Corporation a
  489   489                      ;              nd is only 
  490   490                      ; line     4 : * intended for use with Renesas products. No other uses are auth
  491   491                      ;              orized. This 
  492   492                      ; line     5 : * software is owned by Renesas Electronics Corporation and is pr
  493   493                      ;              otected under 
  494   494                      ; line     6 : * all applicable laws, including copyright laws.
  495   495                      ; line     7 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANT
  496   496                      ;              IES REGARDING 
  497   497                      ; line     8 : * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDIN
  498   498                      ;              G BUT NOT 
  499   499                      ; line     9 : * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTIC
  500   500                      ;              ULAR PURPOSE 
  501   501                      ; line    10 : * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCL
  502   502                      ;              AIMED.
  503   503                      ; line    11 : * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER
  504   504                      ;               RENESAS 
  505   505                      ; line    12 : * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SH
  506   506                      ;              ALL BE LIABLE 
  507   507                      ; line    13 : * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
  508   508                      ;               DAMAGES FOR 
  509   509                      ; line    14 : * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AF
  510   510                      ;              FILIATES HAVE 
  511   511                      ; line    15 : * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  512   512                      ; line    16 : * Renesas reserves the right, without notice, to make changes to
  513   513                      ;               this software 
  514   514                      ; line    17 : * and to discontinue the availability of this software.  By usin
  515   515                      ;              g this software, 
  516   516                      ; line    18 : * you agree to the additional terms and conditions found by acce
  517   517                      ;              ssing the 
  518   518                      ; line    19 : * following link:
  519   519                      ; line    20 : * http://www.renesas.com/disclaimer
  520   520                      ; line    21 : *
  521   521                      ; line    22 : * Copyright (C) 2013 Renesas Electronics Corporation. All rights
  522   522                      ;               reserved.
  523   523                      ; line    23 : ****************************************************************
  524   524                      ;              *******************************************************/
  525   525                      ; line    24 : 
  526   526                      ; line    25 : /***************************************************************
  527   527                      ;              ********************************************************
  528   528                      ; line    26 : * File Name    : r_cg_cgc.c
  529   529                      ; line    27 : * Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013
  530   530                      ;              ]
  531   531                      ; line    28 : * Device(s)    : R5F10WMG
  532   532                      ; line    29 : * Tool-Chain   : CA78K0R
  533   533                      ; line    30 : * Description  : This file implements device driver for CGC modu
  534   534                      ;              le.
  535   535                      ; line    31 : * Creation Date: 05-Jun-21
  536   536                      ; line    32 : ****************************************************************
  537   537                      ;              *******************************************************/
  538   538                      ; line    33 : 
  539   539                      ; line    34 : /***************************************************************
  540   540                      ;              ********************************************************
  541   541                      ; line    35 : Pragma directive
  542   542                      ; line    36 : ****************************************************************
  543   543                      ;              *******************************************************/
  544   544                      ; line    37 : /* Start user code for pragma. Do not edit comment generated her
  545   545                      ;              e */
  546   546                      ; line    38 : /* End user code. Do not edit comment generated here */
  547   547                      ; line    39 : 
  548   548                      ; line    40 : /***************************************************************
  549   549                      ;              ********************************************************
  550   550                      ; line    41 : Includes
  551   551                      ; line    42 : ****************************************************************
  552   552                      ;              *******************************************************/
  553   553                      ; line    43 : #include "r_cg_macrodriver.h"
  554   554                      ; line    44 : #include "r_cg_cgc.h"
  555   555                      ; line    45 : /* Start user code for include. Do not edit comment generated he
  556   556                      ;              re */
  557   557                      ; line    46 : /* End user code. Do not edit comment generated here */
  558   558                      ; line    47 : #include "r_cg_userdefine.h"
  559   559                      ; line    48 : 
  560   560                      ; line    49 : /***************************************************************
  561   561                      ;              ********************************************************
  562   562                      ; line    50 : Global variables and functions
  563   563                      ; line    51 : ****************************************************************
  564   564                      ;              *******************************************************/
  565   565                      ; line    52 : /* Start user code for global. Do not edit comment generated her
  566   566                      ;              e */
  567   567                      ; line    53 : /* End user code. Do not edit comment generated here */
  568   568                      ; line    54 : 
  569   569                      ; line    55 : /***************************************************************
  570   570                      ;              ********************************************************
  571   571                      ; line    56 : * Function Name: R_CGC_Create
  572   572                      ; line    57 : * Description  : This function initializes the clock generator.
  573   573                      ; line    58 : * Arguments    : None
  574   574                      ; line    59 : * Return Value : None
  575   575                      ; line    60 : ****************************************************************
  576   576                      ;              *******************************************************/
  577   577                      ; line    61 : void R_CGC_Create(void)
  578   578                      ; line    62 : {
  579   579                      
  580   580 -----                @@CODEL CSEG
  581   581 00000                _R_CGC_Create:
  582   582                      $DGL    1,19
  583   583 00000  C7                    push    hl                                              ;[INF] 1, 1
  584   584 00001  2004                  subw    sp,#04H                                         ;[INF] 2, 1
  585   585 00003  FBF8FF                movw    hl,sp                                           ;[INF] 3, 1
  586   586 00006                ??bf_R_CGC_Create:
  587   587                      ; line    63 :     volatile uint16_t w_count;
  588   588                      ; line    64 :     uint8_t           temp_stab_set;
  589   589                      ; line    65 :     uint8_t           temp_stab_wait;
  590   590                      ; line    66 : 
  591   591                      ; line    67 :     /* Set fMX */
  592   592                      ; line    68 :     CMC = _40_CGC_HISYS_OSC | _10_CGC_SUB_OSC | _00_CGC_SUBMODE_
  593   593                      ;              LOW | _01_CGC_SYSOSC_OVER10M;
  594   594                      $DGL    0,7
  595   595 00006  CEA051                mov     CMC,#051H       ; 81                            ;[INF] 3, 1
  596   596                      ; line    69 :     MSTOP = 0U;
  597   597                      $DGL    0,8
  598   598 00009  717BA1                clr1    CSC.7                                           ;[INF] 3, 2
  599   599                      ; line    70 :     temp_stab_set = _FF_CGC_OSCSTAB_STA18;
  600   600                      $DGL    0,9
  601   601 0000C  CC01FF                mov     [hl+1],#0FFH    ; temp_stab_set,255             ;[INF] 3, 1
  602   602                      ; line    71 :     
  603   603                      ; line    72 :     do
  604   604 0000F                ?L0003:
  605   605                      ; line    73 :     {
  606   606 0000F                ??bb00_R_CGC_Create:
  607   607                      ; line    74 :         temp_stab_wait = OSTC;
  608   608                      $DGL    0,13
  609   609 0000F  8EA2                  mov     a,OSTC                                          ;[INF] 2, 1
  610   610 00011  9B                    mov     [hl],a  ; temp_stab_wait                        ;[INF] 1, 1
  611   611                      ; line    75 :         temp_stab_wait &= temp_stab_set;
  612   612                      $DGL    0,14
  613   613 00012  5E01                  and     a,[hl+1]        ; temp_stab_set                 ;[INF] 2, 1
  614   614 00014  9B                    mov     [hl],a  ; temp_stab_wait                        ;[INF] 1, 1
  615   615 00015                ??eb00_R_CGC_Create:
  616   616                      ; line    76 :     }
  617   617 00015                ?L0005:
  618   618                      ; line    77 :     while (temp_stab_wait != temp_stab_set);
  619   619                      $DGL    0,16
  620   620 00015  8B                    mov     a,[hl]  ; temp_stab_wait                        ;[INF] 1, 1
  621   621 00016  4E01                  cmp     a,[hl+1]        ; temp_stab_set                 ;[INF] 2, 1
  622   622 00018  DFF5                  bnz     $?L0003                                         ;[INF] 2, 4
  623   623 0001A                ?L0004:
  624   624                      ; line    78 :     
  625   625                      ; line    79 :     /* Set fMAIN */
  626   626                      ; line    80 :     MCM0 = 1U;
  627   627                      $DGL    0,19
  628   628 0001A  714AA4                set1    CKC.4                                           ;[INF] 3, 2
  629   629                      ; line    81 :     /* Set fSUB */
  630   630                      ; line    82 :     XTSTOP = 0U;
  631   631                      $DGL    0,21
  632   632 0001D  716BA1                clr1    CSC.6                                           ;[INF] 3, 2
  633   633                      ; line    83 : 
  634   634                      ; line    84 :     /* Change the waiting time according to the system */
  635   635                      ; line    85 :     for (w_count = 0U; w_count <= CGC_SUBWAITTIME; w_count++)
  636   636                      $DGL    0,24
  637   637 00020  F6                    clrw    ax                                              ;[INF] 1, 1
  638   638 00021  BC02                  movw    [hl+2],ax       ; w_count                       ;[INF] 2, 1
  639   639 00023                ?L0006:
  640   640 00023  AC02                  movw    ax,[hl+2]       ; w_count                       ;[INF] 2, 1
  641   641 00025  441F00                cmpw    ax,#01FH        ; 31                            ;[INF] 3, 1
  642   642 00028  DE06                  bnc     $?L0007                                         ;[INF] 2, 4
  643   643                      ; line    86 :     {
  644   644 0002A                ??bb01_R_CGC_Create:
  645   645                      ; line    87 :         NOP();
  646   646                      $DGL    0,26
  647   647 0002A  00                    nop                                                     ;[INF] 1, 1
  648   648 0002B                ??eb01_R_CGC_Create:
  649   649                      ; line    88 :     }
  650   650                      $DGL    0,27
  651   651 0002B                ?L0008:
  652   652 0002B  617902                incw    [hl+2]  ; w_count                               ;[INF] 3, 2
  653   653 0002E  EFF3                  br      $?L0006                                         ;[INF] 2, 3
  654   654 00030                ?L0007:
  655   655                      ; line    89 :     
  656   656                      ; line    90 :     OSMC = _00_CGC_SUBINHALT_ON | _00_CGC_RTC_IT_LCD_CLK_FSUB;
  657   657                      $DGL    0,29
  658   658 00030  F5F300                clrb    !OSMC                                           ;[INF] 3, 1
  659   659                      ; line    91 :     /* Set fCLK */
  660   660                      ; line    92 :     CSS = 0U;
  661   661                      $DGL    0,31
  662   662 00033  716BA4                clr1    CKC.6                                           ;[INF] 3, 2
  663   663                      ; line    93 :     /* Set fIH */
  664   664                      ; line    94 :     HIOSTOP = 0U;
  665   665                      $DGL    0,33
  666   666 00036  710BA1                clr1    CSC.0                                           ;[INF] 3, 2
  667   667                      ; line    95 : }
  668   668                      $DGL    0,34
  669   669 00039                ??ef_R_CGC_Create:
  670   670 00039  1004                  addw    sp,#04H                                         ;[INF] 2, 1
  671   671 0003B  C6                    pop     hl                                              ;[INF] 1, 1
  672   672 0003C  D7                    ret                                                     ;[INF] 1, 6
  673   673 0003D                ??ee_R_CGC_Create:
  674   674                      
  675   675 -----                @@CODE  CSEG    BASE
  676   676                      
  677   677 -----                @@BASE  CSEG    BASE
  678   678                              END
  679   679                      
  680   680                      
  681   681                      ; *** Code Information ***
  682   682                      ;
  683   683                      ; $FILE C:\Users\nguye\Downloads\dtmf_reader_rl78\RSK_Module_test\RSKRL78L13\AD
  684   684                      ;       C_Repeat\cg_src\r_cg_cgc.c
  685   685                      ;
  686   686                      ; $FUNC R_CGC_Create(62)
  687   687                      ;       void=(void)
  688   688                      ;       CODE SIZE= 61 bytes, CLOCK_SIZE= 48 clocks, STACK_SIZE= 6 bytes
  689   689                      
  690   690                      ; Target chip : R5F10WMG
  691   691                      ; Device file : V1.00 

Segment informations:

ADRS  LEN      NAME

00000 00000H.0 @@BITS
00000 00000H   @@CNST
00000 00000H   @@R_INIT
00000 00000H   @@INIT
00000 00000H   @@DATA
00000 00000H   @@R_INIS
00000 00000H   @@INIS
00000 00000H   @@DATS
00000 00000H   @@CNSTL
00000 00000H   @@RLINIT
00000 00000H   @@INITL
00000 00000H   @@DATAL
00000 00000H   @@CALT
00000 0003DH   @@CODEL
00000 00000H   @@CODE
00000 00000H   @@BASE

 Target chip : R5F10WMG
 Device file : V1.00
Assembly complete,     0 error(s) and     0 warning(s) found. (    0)
